<?xml version="1.0" encoding="utf-8"?>
<XmlMscorlib>
  <Type FullName="Microsoft.Win32.Registry">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="Microsoft.Win32.RegistryKey">
    <Properties>
      <Property Name="SubKeyCount" Type="System.Int32" />
      <Property Name="View" Type="Microsoft.Win32.RegistryView" />
      <Property Name="Handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      <Property Name="ValueCount" Type="System.Int32" />
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permissionCheck" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permissionCheck" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="writable" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="writable" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permissionCheck" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="registrySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permissionCheck" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="registryOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="registrySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnMissingSubKey" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKeyTree" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKeyTree" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnMissingSubKey" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnMissingValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="writable" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permissionCheck" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rights" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permissionCheck" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rights" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" ReturnType="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SubKeyCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_View" ReturnType="Microsoft.Win32.RegistryView">
        <Parameters />
      </Method>
      <Method Name="get_Handle" ReturnType="Microsoft.Win32.SafeHandles.SafeRegistryHandle">
        <Parameters />
      </Method>
      <Method Name="GetSubKeyNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="get_ValueCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetValueNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="defaultValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="defaultValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValueKind" ReturnType="Microsoft.Win32.RegistryValueKind">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="valueKind" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.RegistrySecurity">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.RegistrySecurity">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="registrySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.SafeFileHandle">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.SafeRegistryHandle">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.SafeWaitHandle">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
    <Properties>
      <Property Name="InvalidHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AggregateException">
    <Properties>
      <Property Name="InnerExceptions" Type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Exception]" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBaseException" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_InnerExceptions" ReturnType="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Exception]">
        <Parameters />
      </Method>
      <Method Name="Handle" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="predicate" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Flatten" ReturnType="System.AggregateException">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AppContext">
    <Properties>
      <Property Name="BaseDirectory" Type="System.String" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Object">
    <Properties />
    <Methods>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`2">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`3">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`4">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`2">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`3">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`4">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`5">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`5">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`6">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`7">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Action`8">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg8" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg8" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`6">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`7">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`8">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Func`9">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg8" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg4" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg5" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg6" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg7" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg8" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Comparison`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Converter`2">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="TOutput">
        <Parameters>
          <Parameter Name="input" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="input" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="TOutput">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Predicate`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Array">
    <Properties>
      <Property Name="Length" Type="System.Int32" />
      <Property Name="LongLength" Type="System.Int64" />
      <Property Name="Rank" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="indices" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index3" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index3" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="indices" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index3" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="indices" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index3" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="indices" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Length" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LongLength" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetLength" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="dimension" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLongLength" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="dimension" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Rank" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetUpperBound" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="dimension" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLowerBound" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="dimension" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Tuple`1">
    <Properties>
      <Property Name="Item1" Type="T1" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`2">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`3">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" ReturnType="T3">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`4">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" ReturnType="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" ReturnType="T4">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`5">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" ReturnType="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" ReturnType="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" ReturnType="T5">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`6">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
      <Property Name="Item6" Type="T6" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" ReturnType="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" ReturnType="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" ReturnType="T5">
        <Parameters />
      </Method>
      <Method Name="get_Item6" ReturnType="T6">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`7">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
      <Property Name="Item6" Type="T6" />
      <Property Name="Item7" Type="T7" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" ReturnType="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" ReturnType="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" ReturnType="T5">
        <Parameters />
      </Method>
      <Method Name="get_Item6" ReturnType="T6">
        <Parameters />
      </Method>
      <Method Name="get_Item7" ReturnType="T7">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Tuple`8">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
      <Property Name="Item6" Type="T6" />
      <Property Name="Item7" Type="T7" />
      <Property Name="Rest" Type="TRest" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" ReturnType="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" ReturnType="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" ReturnType="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" ReturnType="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" ReturnType="T5">
        <Parameters />
      </Method>
      <Method Name="get_Item6" ReturnType="T6">
        <Parameters />
      </Method>
      <Method Name="get_Item7" ReturnType="T7">
        <Parameters />
      </Method>
      <Method Name="get_Rest" ReturnType="TRest">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.String">
    <Properties>
      <Property Name="Chars" Type="System.Char" />
      <Property Name="Length" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Chars" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sourceIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToCharArray" ReturnType="System.Char[]">
        <Parameters />
      </Method>
      <Method Name="ToCharArray" ReturnType="System.Char[]">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Split" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Split" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Split" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Split" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Split" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Split" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Substring" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Substring" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Trim" ReturnType="System.String">
        <Parameters>
          <Parameter Name="trimChars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrimStart" ReturnType="System.String">
        <Parameters>
          <Parameter Name="trimChars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrimEnd" ReturnType="System.String">
        <Parameters>
          <Parameter Name="trimChars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsNormalized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsNormalized" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="normalizationForm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Normalize" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Normalize" ReturnType="System.String">
        <Parameters>
          <Parameter Name="normalizationForm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="strB" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndsWith" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndsWith" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndsWith" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOfAny" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOfAny" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOfAny" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOfAny" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOfAny" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOfAny" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PadLeft" ReturnType="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PadLeft" ReturnType="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="paddingChar" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PadRight" ReturnType="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PadRight" ReturnType="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="paddingChar" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartsWith" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartsWith" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartsWith" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLower" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToLower" ReturnType="System.String">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLowerInvariant" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToUpper" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToUpper" ReturnType="System.String">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUpperInvariant" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Trim" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Insert" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.String">
        <Parameters>
          <Parameter Name="oldChar" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newChar" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.String">
        <Parameters>
          <Parameter Name="oldValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" ReturnType="System.TypeCode">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.CharEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.StringComparer">
    <Properties>
      <Property Name="InvariantCulture" Type="System.StringComparer" />
      <Property Name="InvariantCultureIgnoreCase" Type="System.StringComparer" />
      <Property Name="CurrentCulture" Type="System.StringComparer" />
      <Property Name="CurrentCultureIgnoreCase" Type="System.StringComparer" />
      <Property Name="Ordinal" Type="System.StringComparer" />
      <Property Name="OrdinalIgnoreCase" Type="System.StringComparer" />
    </Properties>
    <Methods>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Exception">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Data" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="GetBaseException" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_InnerException" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_TargetSite" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_StackTrace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_HelpLink" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HelpLink" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Source" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Source" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HResult" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.SystemException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.OutOfMemoryException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.StackOverflowException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.DataMisalignedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ExecutionEngineException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Delegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="DynamicInvoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInvocationList" ReturnType="System.Delegate[]">
        <Parameters />
      </Method>
      <Method Name="get_Method" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_Target" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.MulticastDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInvocationList" ReturnType="System.Delegate[]">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.MemberAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Activator">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.AccessViolationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ApplicationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ResolveEventArgs">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="RequestingAssembly" Type="System.Reflection.Assembly" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RequestingAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AssemblyLoadEventArgs">
    <Properties>
      <Property Name="LoadedAssembly" Type="System.Reflection.Assembly" />
    </Properties>
    <Methods>
      <Method Name="get_LoadedAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ResolveEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AssemblyLoadEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AppDomainInitializer">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AppDomain">
    <Properties>
      <Property Name="DomainManager" Type="System.AppDomainManager" />
      <Property Name="CurrentDomain" Type="System.AppDomain" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" />
      <Property Name="FriendlyName" Type="System.String" />
      <Property Name="BaseDirectory" Type="System.String" />
      <Property Name="RelativeSearchPath" Type="System.String" />
      <Property Name="ShadowCopyFiles" Type="System.Boolean" />
      <Property Name="ActivationContext" Type="System.ActivationContext" />
      <Property Name="ApplicationIdentity" Type="System.ApplicationIdentity" />
      <Property Name="ApplicationTrust" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="DynamicDirectory" Type="System.String" />
      <Property Name="SetupInformation" Type="System.AppDomainSetup" />
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="IsFullyTrusted" Type="System.Boolean" />
      <Property Name="IsHomogenous" Type="System.Boolean" />
      <Property Name="Id" Type="System.Int32" />
      <Property Name="MonitoringIsEnabled" Type="System.Boolean" />
      <Property Name="MonitoringTotalProcessorTime" Type="System.TimeSpan" />
      <Property Name="MonitoringTotalAllocatedMemorySize" Type="System.Int64" />
      <Property Name="MonitoringSurvivedMemorySize" Type="System.Int64" />
      <Property Name="MonitoringSurvivedProcessMemorySize" Type="System.Int64" />
    </Properties>
    <Methods>
      <Method Name="add_AssemblyLoad" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_AssemblyLoad" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_TypeResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_TypeResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_ResourceResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_ResourceResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_AssemblyResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_AssemblyResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_ReflectionOnlyAssemblyResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_ReflectionOnlyAssemblyResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DomainManager" ReturnType="System.AppDomainManager">
        <Parameters />
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblyAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblyAttributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityContextSource" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="refusedPermissions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="refusedPermissions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="refusedPermissions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="refusedPermissions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="refusedPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isSynchronized" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="refusedPermissions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isSynchronized" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblyAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isSynchronized" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblyAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ApplyPolicy" ReturnType="System.String">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateComInstanceFrom" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateComInstanceFrom" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyRef" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rawSymbolStore" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rawSymbolStore" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityEvidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyRef" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Load" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblySecurity" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Evidence" ReturnType="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="get_FriendlyName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseDirectory" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RelativeSearchPath" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ShadowCopyFiles" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetAssemblies" ReturnType="System.Reflection.Assembly[]">
        <Parameters />
      </Method>
      <Method Name="ReflectionOnlyGetAssemblies" ReturnType="System.Reflection.Assembly[]">
        <Parameters />
      </Method>
      <Method Name="IsFinalizingForUnload" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="AppendPrivatePath" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ClearPrivatePath" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ClearShadowCopyPath" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetCachePath" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="permission" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetData" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsCompatibilitySwitchSet" ReturnType="System.Nullable`1[System.Boolean]">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAppDomainPolicy" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="domainPolicy" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ActivationContext" ReturnType="System.ActivationContext">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationIdentity" ReturnType="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationTrust" ReturnType="System.Security.Policy.ApplicationTrust">
        <Parameters />
      </Method>
      <Method Name="SetThreadPrincipal" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="principal" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetPrincipalPolicy" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="policy" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InitializeLifetimeService" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="DoCallBack" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="callBackDelegate" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DynamicDirectory" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="add_ProcessExit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_ProcessExit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_DomainUnload" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_DomainUnload" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_UnhandledException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_UnhandledException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="add_FirstChanceException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_FirstChanceException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetShadowCopyPath" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetShadowCopyFiles" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetDynamicBase" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SetupInformation" ReturnType="System.AppDomainSetup">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSet" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_IsFullyTrusted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsHomogenous" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="CreateInstanceAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Id" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsDefaultAppDomain" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringTotalProcessorTime" ReturnType="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringTotalAllocatedMemorySize" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringSurvivedMemorySize" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.CrossAppDomainDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AppDomainManager">
    <Properties>
      <Property Name="InitializationFlags" Type="System.AppDomainManagerInitializationOptions" />
      <Property Name="ApplicationActivator" Type="System.Runtime.Hosting.ApplicationActivator" />
      <Property Name="HostSecurityManager" Type="System.Security.HostSecurityManager" />
      <Property Name="HostExecutionContextManager" Type="System.Threading.HostExecutionContextManager" />
      <Property Name="EntryAssembly" Type="System.Reflection.Assembly" />
    </Properties>
    <Methods>
      <Method Name="CreateDomain" ReturnType="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="securityInfo" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="appDomainInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InitializeNewDomain" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="appDomainInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InitializationFlags" ReturnType="System.AppDomainManagerInitializationOptions">
        <Parameters />
      </Method>
      <Method Name="set_InitializationFlags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationActivator" ReturnType="System.Runtime.Hosting.ApplicationActivator">
        <Parameters />
      </Method>
      <Method Name="get_HostSecurityManager" ReturnType="System.Security.HostSecurityManager">
        <Parameters />
      </Method>
      <Method Name="get_HostExecutionContextManager" ReturnType="System.Threading.HostExecutionContextManager">
        <Parameters />
      </Method>
      <Method Name="get_EntryAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="CheckSecuritySettings" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AppDomainSetup">
    <Properties>
      <Property Name="AppDomainManagerAssembly" Type="System.String" />
      <Property Name="AppDomainManagerType" Type="System.String" />
      <Property Name="PartialTrustVisibleAssemblies" Type="System.String[]" />
      <Property Name="ApplicationBase" Type="System.String" />
      <Property Name="ConfigurationFile" Type="System.String" />
      <Property Name="TargetFrameworkName" Type="System.String" />
      <Property Name="DynamicBase" Type="System.String" />
      <Property Name="DisallowPublisherPolicy" Type="System.Boolean" />
      <Property Name="DisallowBindingRedirects" Type="System.Boolean" />
      <Property Name="DisallowCodeDownload" Type="System.Boolean" />
      <Property Name="DisallowApplicationBaseProbing" Type="System.Boolean" />
      <Property Name="ApplicationName" Type="System.String" />
      <Property Name="AppDomainInitializer" Type="System.AppDomainInitializer" />
      <Property Name="AppDomainInitializerArguments" Type="System.String[]" />
      <Property Name="ActivationArguments" Type="System.Runtime.Hosting.ActivationArguments" />
      <Property Name="ApplicationTrust" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="PrivateBinPath" Type="System.String" />
      <Property Name="PrivateBinPathProbe" Type="System.String" />
      <Property Name="ShadowCopyDirectories" Type="System.String" />
      <Property Name="ShadowCopyFiles" Type="System.String" />
      <Property Name="CachePath" Type="System.String" />
      <Property Name="LicenseFile" Type="System.String" />
      <Property Name="LoaderOptimization" Type="System.LoaderOptimization" />
      <Property Name="SandboxInterop" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_AppDomainManagerAssembly" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainManagerAssembly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AppDomainManagerType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainManagerType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PartialTrustVisibleAssemblies" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_PartialTrustVisibleAssemblies" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationBase" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ConfigurationFile" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ConfigurationFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConfigurationBytes" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetConfigurationBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCompatibilitySwitches" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="switches" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TargetFrameworkName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TargetFrameworkName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetNativeFunction" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="functionName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="functionVersion" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="functionPointer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DynamicBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DynamicBase" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowPublisherPolicy" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowPublisherPolicy" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowBindingRedirects" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowBindingRedirects" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowCodeDownload" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowCodeDownload" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowApplicationBaseProbing" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowApplicationBaseProbing" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AppDomainInitializer" ReturnType="System.AppDomainInitializer">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainInitializer" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AppDomainInitializerArguments" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainInitializerArguments" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ActivationArguments" ReturnType="System.Runtime.Hosting.ActivationArguments">
        <Parameters />
      </Method>
      <Method Name="set_ActivationArguments" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationTrust" ReturnType="System.Security.Policy.ApplicationTrust">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationTrust" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PrivateBinPath" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PrivateBinPath" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PrivateBinPathProbe" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PrivateBinPathProbe" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ShadowCopyDirectories" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShadowCopyDirectories" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ShadowCopyFiles" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShadowCopyFiles" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CachePath" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CachePath" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LicenseFile" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LicenseFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LoaderOptimization" ReturnType="System.LoaderOptimization">
        <Parameters />
      </Method>
      <Method Name="set_LoaderOptimization" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SandboxInterop" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SandboxInterop" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.LoaderOptimizationAttribute">
    <Properties>
      <Property Name="Value" Type="System.LoaderOptimization" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.LoaderOptimization">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AppDomainUnloadedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ActivationContext">
    <Properties>
      <Property Name="Identity" Type="System.ApplicationIdentity" />
      <Property Name="Form" Type="System.ActivationContext+ContextForm" />
      <Property Name="ApplicationManifestBytes" Type="System.Byte[]" />
      <Property Name="DeploymentManifestBytes" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_Identity" ReturnType="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="get_Form" ReturnType="System.ActivationContext+ContextForm">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationManifestBytes" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_DeploymentManifestBytes" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ApplicationIdentity">
    <Properties>
      <Property Name="FullName" Type="System.String" />
      <Property Name="CodeBase" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CodeBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ApplicationId">
    <Properties>
      <Property Name="PublicKeyToken" Type="System.Byte[]" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="ProcessorArchitecture" Type="System.String" />
      <Property Name="Culture" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKeyToken" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" ReturnType="System.Version">
        <Parameters />
      </Method>
      <Method Name="get_ProcessorArchitecture" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Culture" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.ApplicationId">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ArgumentException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ParamName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ArgumentNullException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ArgumentOutOfRangeException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ActualValue" Type="System.Object" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ActualValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ArithmeticException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ArrayTypeMismatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.AsyncCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="ar" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="ar" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Attribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_TypeId" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Match" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefaultAttribute" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.AttributeUsageAttribute">
    <Properties>
      <Property Name="ValidOn" Type="System.AttributeTargets" />
      <Property Name="AllowMultiple" Type="System.Boolean" />
      <Property Name="Inherited" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ValidOn" ReturnType="System.AttributeTargets">
        <Parameters />
      </Method>
      <Method Name="get_AllowMultiple" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AllowMultiple" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Inherited" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Inherited" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.BadImageFormatException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="FusionLog" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FileName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FusionLog" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.BitConverter">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Buffer">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.CannotUnloadAppDomainException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.CharEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Char" />
    </Properties>
    <Methods>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="MoveNext" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Current" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.CLSCompliantAttribute">
    <Properties>
      <Property Name="IsCompliant" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_IsCompliant" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.TypeUnloadedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Console">
    <Properties>
      <Property Name="IsInputRedirected" Type="System.Boolean" />
      <Property Name="IsOutputRedirected" Type="System.Boolean" />
      <Property Name="IsErrorRedirected" Type="System.Boolean" />
      <Property Name="In" Type="System.IO.TextReader" />
      <Property Name="Out" Type="System.IO.TextWriter" />
      <Property Name="Error" Type="System.IO.TextWriter" />
      <Property Name="InputEncoding" Type="System.Text.Encoding" />
      <Property Name="OutputEncoding" Type="System.Text.Encoding" />
      <Property Name="BackgroundColor" Type="System.ConsoleColor" />
      <Property Name="ForegroundColor" Type="System.ConsoleColor" />
      <Property Name="BufferHeight" Type="System.Int32" />
      <Property Name="BufferWidth" Type="System.Int32" />
      <Property Name="WindowHeight" Type="System.Int32" />
      <Property Name="WindowWidth" Type="System.Int32" />
      <Property Name="LargestWindowWidth" Type="System.Int32" />
      <Property Name="LargestWindowHeight" Type="System.Int32" />
      <Property Name="WindowLeft" Type="System.Int32" />
      <Property Name="WindowTop" Type="System.Int32" />
      <Property Name="CursorLeft" Type="System.Int32" />
      <Property Name="CursorTop" Type="System.Int32" />
      <Property Name="CursorSize" Type="System.Int32" />
      <Property Name="CursorVisible" Type="System.Boolean" />
      <Property Name="Title" Type="System.String" />
      <Property Name="KeyAvailable" Type="System.Boolean" />
      <Property Name="NumberLock" Type="System.Boolean" />
      <Property Name="CapsLock" Type="System.Boolean" />
      <Property Name="TreatControlCAsInput" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ConsoleCancelEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ConsoleCancelEventArgs">
    <Properties>
      <Property Name="Cancel" Type="System.Boolean" />
      <Property Name="SpecialKey" Type="System.ConsoleSpecialKey" />
    </Properties>
    <Methods>
      <Method Name="get_Cancel" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Cancel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SpecialKey" ReturnType="System.ConsoleSpecialKey">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ContextMarshalException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Convert">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.ContextBoundObject">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.ContextStaticAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.DBNull">
    <Properties />
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" ReturnType="System.TypeCode">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.DivideByZeroException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.DuplicateWaitObjectException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Enum">
    <Properties />
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="HasFlag" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="flag" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" ReturnType="System.TypeCode">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.EntryPointNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.DllNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Environment">
    <Properties>
      <Property Name="TickCount" Type="System.Int32" />
      <Property Name="ExitCode" Type="System.Int32" />
      <Property Name="CommandLine" Type="System.String" />
      <Property Name="CurrentDirectory" Type="System.String" />
      <Property Name="SystemDirectory" Type="System.String" />
      <Property Name="MachineName" Type="System.String" />
      <Property Name="ProcessorCount" Type="System.Int32" />
      <Property Name="SystemPageSize" Type="System.Int32" />
      <Property Name="NewLine" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="WorkingSet" Type="System.Int64" />
      <Property Name="OSVersion" Type="System.OperatingSystem" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="Is64BitProcess" Type="System.Boolean" />
      <Property Name="Is64BitOperatingSystem" Type="System.Boolean" />
      <Property Name="HasShutdownStarted" Type="System.Boolean" />
      <Property Name="UserName" Type="System.String" />
      <Property Name="UserInteractive" Type="System.Boolean" />
      <Property Name="UserDomainName" Type="System.String" />
      <Property Name="CurrentManagedThreadId" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.EventArgs">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.EventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.EventHandler`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.FieldAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.FlagsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.FormatException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.FormattableString">
    <Properties>
      <Property Name="Format" Type="System.String" />
      <Property Name="ArgumentCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Format" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetArguments" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_ArgumentCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArgument" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="formatProvider" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.GC">
    <Properties>
      <Property Name="MaxGeneration" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IndexOutOfRangeException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.InsufficientMemoryException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.InsufficientExecutionStackException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Lazy`1">
    <Properties>
      <Property Name="IsValueCreated" Type="System.Boolean" />
      <Property Name="Value" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_IsValueCreated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="T">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.InvalidCastException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.InvalidOperationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.InvalidProgramException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.InvalidTimeZoneException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.LocalDataStoreSlot">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.MarshalByRefObject">
    <Properties />
    <Methods>
      <Method Name="GetLifetimeService" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="InitializeLifetimeService" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="CreateObjRef" ReturnType="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="requestedType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Math">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.MethodAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.MissingFieldException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.MissingMemberException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.MissingMethodException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.MulticastNotSupportedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.NonSerializedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.NotFiniteNumberException">
    <Properties>
      <Property Name="OffendingNumber" Type="System.Double" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_OffendingNumber" ReturnType="System.Double">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.NotImplementedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.NotSupportedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.NullReferenceException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ObjectDisposedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ObjectName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ObjectName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ObsoleteAttribute">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="IsError" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsError" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.OperatingSystem">
    <Properties>
      <Property Name="Platform" Type="System.PlatformID" />
      <Property Name="ServicePack" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="VersionString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Platform" ReturnType="System.PlatformID">
        <Parameters />
      </Method>
      <Method Name="get_ServicePack" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" ReturnType="System.Version">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_VersionString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.OperationCanceledException">
    <Properties>
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CancellationToken" ReturnType="System.Threading.CancellationToken">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.OverflowException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.ParamArrayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.PlatformNotSupportedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Progress`1">
    <Properties />
    <Methods>
      <Method Name="add_ProgressChanged" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_ProgressChanged" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Random">
    <Properties />
    <Methods>
      <Method Name="Next" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Next" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="minValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="maxValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Next" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="maxValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="NextDouble" ReturnType="System.Double">
        <Parameters />
      </Method>
      <Method Name="NextBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.RankException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.SerializableAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.STAThreadAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.MTAThreadAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.TimeoutException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.TimeZone">
    <Properties>
      <Property Name="CurrentTimeZone" Type="System.TimeZone" />
      <Property Name="StandardName" Type="System.String" />
      <Property Name="DaylightName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_StandardName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DaylightName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetUtcOffset" ReturnType="System.TimeSpan">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUniversalTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLocalTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaylightChanges" ReturnType="System.Globalization.DaylightTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.TimeZoneInfo">
    <Properties>
      <Property Name="Id" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
      <Property Name="StandardName" Type="System.String" />
      <Property Name="DaylightName" Type="System.String" />
      <Property Name="BaseUtcOffset" Type="System.TimeSpan" />
      <Property Name="SupportsDaylightSavingTime" Type="System.Boolean" />
      <Property Name="Local" Type="System.TimeZoneInfo" />
      <Property Name="Utc" Type="System.TimeZoneInfo" />
    </Properties>
    <Methods>
      <Method Name="get_Id" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_StandardName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DaylightName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseUtcOffset" ReturnType="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="get_SupportsDaylightSavingTime" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetAdjustmentRules" ReturnType="System.TimeZoneInfo+AdjustmentRule[]">
        <Parameters />
      </Method>
      <Method Name="GetAmbiguousTimeOffsets" ReturnType="System.TimeSpan[]">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAmbiguousTimeOffsets" ReturnType="System.TimeSpan[]">
        <Parameters>
          <Parameter Name="dateTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUtcOffset" ReturnType="System.TimeSpan">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUtcOffset" ReturnType="System.TimeSpan">
        <Parameters>
          <Parameter Name="dateTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsAmbiguousTime" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsAmbiguousTime" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dateTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dateTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsInvalidTime" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dateTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="HasSameRules" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToSerializedString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.TimeZoneNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Type">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="DefaultBinder" Type="System.Reflection.Binder" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakePointerType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_StructLayoutAttribute" ReturnType="System.Runtime.InteropServices.StructLayoutAttribute">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_GUID" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="namedParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" ReturnType="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetArrayRank" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructor" ReturnType="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructor" ReturnType="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructor" ReturnType="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructors" ReturnType="System.Reflection.ConstructorInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" ReturnType="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TypeInitializer" ReturnType="System.Reflection.ConstructorInfo">
        <Parameters />
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="FindInterfaces" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="filter" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperties" ReturnType="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProperties" ReturnType="System.Reflection.PropertyInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetNestedTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetNestedTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDefaultMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters />
      </Method>
      <Method Name="FindMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="memberType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filter" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsNested" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.TypeAttributes">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterAttributes" ReturnType="System.Reflection.GenericParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="get_IsVisible" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNotPublic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPublic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedPublic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedPrivate" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedFamily" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedFamANDAssem" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedFamORAssem" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAutoLayout" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsLayoutSequential" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsExplicitLayout" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsClass" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInterface" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsValueType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAbstract" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSealed" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsEnum" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsImport" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSerializable" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAnsiClass" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsUnicodeClass" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAutoClass" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsArray" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericTypeDefinition" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructedGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericParameter" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterPosition" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetGenericParameterConstraints" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsByRef" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPointer" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPrimitive" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsCOMObject" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HasElementType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsContextful" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMarshalByRef" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="MakeGenericType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetElementType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_GenericTypeArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetGenericTypeDefinition" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetEnumNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetEnumValues" ReturnType="System.Array">
        <Parameters />
      </Method>
      <Method Name="GetEnumUnderlyingType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="IsEnumDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsSecurityCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="IsSubclassOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsInstanceOfType" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsEquivalentTo" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInterfaceMap" ReturnType="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.TypeAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.TypeInitializationException">
    <Properties>
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.TypeLoadException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.UnauthorizedAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.UnhandledExceptionEventArgs">
    <Properties>
      <Property Name="ExceptionObject" Type="System.Object" />
      <Property Name="IsTerminating" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ExceptionObject" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsTerminating" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.UnhandledExceptionEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ValueType">
    <Properties />
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Version">
    <Properties>
      <Property Name="Major" Type="System.Int32" />
      <Property Name="Minor" Type="System.Int32" />
      <Property Name="Build" Type="System.Int32" />
      <Property Name="Revision" Type="System.Int32" />
      <Property Name="MajorRevision" Type="System.Int16" />
      <Property Name="MinorRevision" Type="System.Int16" />
    </Properties>
    <Methods>
      <Method Name="get_Major" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Minor" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Build" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Revision" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MajorRevision" ReturnType="System.Int16">
        <Parameters />
      </Method>
      <Method Name="get_MinorRevision" ReturnType="System.Int16">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="CompareTo" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="version" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="fieldCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.WeakReference">
    <Properties>
      <Property Name="IsAlive" Type="System.Boolean" />
      <Property Name="TrackResurrection" Type="System.Boolean" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_IsAlive" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_TrackResurrection" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Target" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_Target" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.WeakReference`1">
    <Properties />
    <Methods>
      <Method Name="TryGetTarget" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetTarget" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.ThreadStaticAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Nullable">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.IO.BinaryReader">
    <Properties>
      <Property Name="BaseStream" Type="System.IO.Stream" />
    </Properties>
    <Methods>
      <Method Name="get_BaseStream" ReturnType="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="PeekChar" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ReadBoolean" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ReadByte" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="ReadSByte" ReturnType="System.SByte">
        <Parameters />
      </Method>
      <Method Name="ReadChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="ReadInt16" ReturnType="System.Int16">
        <Parameters />
      </Method>
      <Method Name="ReadUInt16" ReturnType="System.UInt16">
        <Parameters />
      </Method>
      <Method Name="ReadInt32" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ReadUInt32" ReturnType="System.UInt32">
        <Parameters />
      </Method>
      <Method Name="ReadInt64" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="ReadUInt64" ReturnType="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="ReadSingle" ReturnType="System.Single">
        <Parameters />
      </Method>
      <Method Name="ReadDouble" ReturnType="System.Double">
        <Parameters />
      </Method>
      <Method Name="ReadDecimal" ReturnType="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="ReadString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadChars" ReturnType="System.Char[]">
        <Parameters>
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.BinaryWriter">
    <Properties>
      <Property Name="BaseStream" Type="System.IO.Stream" />
    </Properties>
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BaseStream" ReturnType="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="origin" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="ch" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.BufferedStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndRead" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginWrite" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="origin" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.Directory">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.IO.DirectoryInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Parent" Type="System.IO.DirectoryInfo" />
      <Property Name="Exists" Type="System.Boolean" />
      <Property Name="Root" Type="System.IO.DirectoryInfo" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Extension" Type="System.String" />
      <Property Name="CreationTime" Type="System.DateTime" />
      <Property Name="CreationTimeUtc" Type="System.DateTime" />
      <Property Name="LastAccessTime" Type="System.DateTime" />
      <Property Name="LastAccessTimeUtc" Type="System.DateTime" />
      <Property Name="LastWriteTime" Type="System.DateTime" />
      <Property Name="LastWriteTimeUtc" Type="System.DateTime" />
      <Property Name="Attributes" Type="System.IO.FileAttributes" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Parent" ReturnType="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="CreateSubdirectory" ReturnType="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSubdirectory" ReturnType="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="directorySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Create" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Create" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="directorySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Exists" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.DirectorySecurity">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.DirectorySecurity">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="directorySecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" ReturnType="System.IO.FileInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" ReturnType="System.IO.FileInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="searchOption" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" ReturnType="System.IO.FileInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectories" ReturnType="System.IO.DirectoryInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetFileSystemInfos" ReturnType="System.IO.FileSystemInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemInfos" ReturnType="System.IO.FileSystemInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="searchOption" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemInfos" ReturnType="System.IO.FileSystemInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectories" ReturnType="System.IO.DirectoryInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDirectories" ReturnType="System.IO.DirectoryInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="searchOption" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.DirectoryInfo]">
        <Parameters />
      </Method>
      <Method Name="EnumerateDirectories" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.DirectoryInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.DirectoryInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="searchOption" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.FileInfo]">
        <Parameters />
      </Method>
      <Method Name="EnumerateFiles" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.FileInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.FileInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="searchOption" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemInfos" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.FileSystemInfo]">
        <Parameters />
      </Method>
      <Method Name="EnumerateFileSystemInfos" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.FileSystemInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemInfos" ReturnType="System.Collections.Generic.IEnumerable`1[System.IO.FileSystemInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="searchOption" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Root" ReturnType="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="MoveTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="destDirName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Delete" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Delete" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="recursive" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.DirectoryNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IO.DriveInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="DriveType" Type="System.IO.DriveType" />
      <Property Name="DriveFormat" Type="System.String" />
      <Property Name="IsReady" Type="System.Boolean" />
      <Property Name="AvailableFreeSpace" Type="System.Int64" />
      <Property Name="TotalFreeSpace" Type="System.Int64" />
      <Property Name="TotalSize" Type="System.Int64" />
      <Property Name="RootDirectory" Type="System.IO.DirectoryInfo" />
      <Property Name="VolumeLabel" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DriveType" ReturnType="System.IO.DriveType">
        <Parameters />
      </Method>
      <Method Name="get_DriveFormat" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsReady" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_AvailableFreeSpace" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_TotalFreeSpace" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_TotalSize" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_RootDirectory" ReturnType="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="get_VolumeLabel" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_VolumeLabel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.DriveNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IO.EndOfStreamException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IO.File">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.IO.FileInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="DirectoryName" Type="System.String" />
      <Property Name="Directory" Type="System.IO.DirectoryInfo" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Exists" Type="System.Boolean" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Extension" Type="System.String" />
      <Property Name="CreationTime" Type="System.DateTime" />
      <Property Name="CreationTimeUtc" Type="System.DateTime" />
      <Property Name="LastAccessTime" Type="System.DateTime" />
      <Property Name="LastAccessTimeUtc" Type="System.DateTime" />
      <Property Name="LastWriteTime" Type="System.DateTime" />
      <Property Name="LastWriteTimeUtc" Type="System.DateTime" />
      <Property Name="Attributes" Type="System.IO.FileAttributes" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_DirectoryName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Directory" ReturnType="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IsReadOnly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.FileSecurity">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.FileSecurity">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="fileSecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenText" ReturnType="System.IO.StreamReader">
        <Parameters />
      </Method>
      <Method Name="CreateText" ReturnType="System.IO.StreamWriter">
        <Parameters />
      </Method>
      <Method Name="AppendText" ReturnType="System.IO.StreamWriter">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="overwrite" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Create" ReturnType="System.IO.FileStream">
        <Parameters />
      </Method>
      <Method Name="Delete" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Decrypt" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Encrypt" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Exists" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Open" ReturnType="System.IO.FileStream">
        <Parameters>
          <Parameter Name="mode" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Open" ReturnType="System.IO.FileStream">
        <Parameters>
          <Parameter Name="mode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Open" ReturnType="System.IO.FileStream">
        <Parameters>
          <Parameter Name="mode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="share" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenRead" ReturnType="System.IO.FileStream">
        <Parameters />
      </Method>
      <Method Name="OpenWrite" ReturnType="System.IO.FileStream">
        <Parameters />
      </Method>
      <Method Name="MoveTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="destFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destinationFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationBackupFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destinationFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationBackupFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreMetadataErrors" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.FileLoadException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="FusionLog" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FileName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FusionLog" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.FileNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="FusionLog" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FileName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FusionLog" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.FileStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="IsAsync" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeFileHandle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAsync" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.FileSecurity">
        <Parameters />
      </Method>
      <Method Name="SetAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="fileSecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="flushToDisk" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Handle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_SafeFileHandle" ReturnType="Microsoft.Win32.SafeHandles.SafeFileHandle">
        <Parameters />
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="origin" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="userCallback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stateObject" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndRead" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="BeginWrite" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="userCallback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stateObject" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Lock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Unlock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.FileSystemInfo">
    <Properties>
      <Property Name="FullName" Type="System.String" />
      <Property Name="Extension" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Exists" Type="System.Boolean" />
      <Property Name="CreationTime" Type="System.DateTime" />
      <Property Name="CreationTimeUtc" Type="System.DateTime" />
      <Property Name="LastAccessTime" Type="System.DateTime" />
      <Property Name="LastAccessTimeUtc" Type="System.DateTime" />
      <Property Name="LastWriteTime" Type="System.DateTime" />
      <Property Name="LastWriteTimeUtc" Type="System.DateTime" />
      <Property Name="Attributes" Type="System.IO.FileAttributes" />
    </Properties>
    <Methods>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Extension" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Exists" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Delete" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CreationTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_CreationTime" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CreationTimeUtc" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_CreationTimeUtc" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LastAccessTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastAccessTime" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LastAccessTimeUtc" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastAccessTimeUtc" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LastWriteTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastWriteTime" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LastWriteTimeUtc" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastWriteTimeUtc" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Refresh" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.IO.FileAttributes">
        <Parameters />
      </Method>
      <Method Name="set_Attributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.IOException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IO.MemoryStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBuffer" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="TryGetBuffer" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Capacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="CopyToAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bufferSize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="loc" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToArray" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="stream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.Path">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.IO.PathTooLongException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IO.Stream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanTimeout" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ReadTimeout" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ReadTimeout" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_WriteTimeout" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_WriteTimeout" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyToAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyToAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bufferSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyToAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bufferSize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bufferSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndRead" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginWrite" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="origin" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.StreamReader">
    <Properties>
      <Property Name="CurrentEncoding" Type="System.Text.Encoding" />
      <Property Name="BaseStream" Type="System.IO.Stream" />
      <Property Name="EndOfStream" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CurrentEncoding" ReturnType="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_BaseStream" ReturnType="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="DiscardBufferedData" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_EndOfStream" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Peek" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadToEnd" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadLine" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLineAsync" ReturnType="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadToEndAsync" ReturnType="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadBlockAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.StreamWriter">
    <Properties>
      <Property Name="AutoFlush" Type="System.Boolean" />
      <Property Name="BaseStream" Type="System.IO.Stream" />
      <Property Name="Encoding" Type="System.Text.Encoding" />
      <Property Name="FormatProvider" Type="System.IFormatProvider" />
      <Property Name="NewLine" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_AutoFlush" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AutoFlush" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_BaseStream" ReturnType="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="get_Encoding" ReturnType="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.StringReader">
    <Properties />
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Peek" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadToEnd" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLine" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLineAsync" ReturnType="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadToEndAsync" ReturnType="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadBlockAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.StringWriter">
    <Properties>
      <Property Name="Encoding" Type="System.Text.Encoding" />
      <Property Name="FormatProvider" Type="System.IFormatProvider" />
      <Property Name="NewLine" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Encoding" ReturnType="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="GetStringBuilder" ReturnType="System.Text.StringBuilder">
        <Parameters />
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.TextReader">
    <Properties />
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Peek" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadToEnd" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadLine" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLineAsync" ReturnType="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadToEndAsync" ReturnType="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadBlockAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.TextWriter">
    <Properties>
      <Property Name="FormatProvider" Type="System.IFormatProvider" />
      <Property Name="Encoding" Type="System.Text.Encoding" />
      <Property Name="NewLine" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_FormatProvider" ReturnType="System.IFormatProvider">
        <Parameters />
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Encoding" ReturnType="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_NewLine" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NewLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.UnmanagedMemoryAccessor">
    <Properties>
      <Property Name="Capacity" Type="System.Int64" />
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ReadBoolean" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Byte">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadChar" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadInt16" ReturnType="System.Int16">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadInt32" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadInt64" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadDecimal" ReturnType="System.Decimal">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadSingle" ReturnType="System.Single">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadDouble" ReturnType="System.Double">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadSByte" ReturnType="System.SByte">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadUInt16" ReturnType="System.UInt16">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadUInt32" ReturnType="System.UInt32">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadUInt64" ReturnType="System.UInt64">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="structure" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadArray" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="structure" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteArray" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.UnmanagedMemoryStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Capacity" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="PositionPointer" Type="System.Byte*" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Capacity" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PositionPointer" ReturnType="System.Byte*">
        <Parameters />
      </Method>
      <Method Name="set_PositionPointer" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="loc" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.IsolatedStorage.IsolatedStorage">
    <Properties>
      <Property Name="MaximumSize" Type="System.UInt64" />
      <Property Name="CurrentSize" Type="System.UInt64" />
      <Property Name="UsedSize" Type="System.Int64" />
      <Property Name="Quota" Type="System.Int64" />
      <Property Name="AvailableFreeSpace" Type="System.Int64" />
      <Property Name="DomainIdentity" Type="System.Object" />
      <Property Name="ApplicationIdentity" Type="System.Object" />
      <Property Name="AssemblyIdentity" Type="System.Object" />
      <Property Name="Scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
    </Properties>
    <Methods>
      <Method Name="get_MaximumSize" ReturnType="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="get_CurrentSize" ReturnType="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="get_UsedSize" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Quota" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_AvailableFreeSpace" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_DomainIdentity" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationIdentity" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyIdentity" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="IncreaseQuotaTo" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="newQuotaSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Scope" ReturnType="System.IO.IsolatedStorage.IsolatedStorageScope">
        <Parameters />
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.IsolatedStorage.IsolatedStorageFileStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="IsAsync" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeFileHandle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
      <Property Name="Name" Type="System.String" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAsync" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="flushToDisk" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Handle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_SafeFileHandle" ReturnType="Microsoft.Win32.SafeHandles.SafeFileHandle">
        <Parameters />
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Lock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Unlock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="origin" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="userCallback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stateObject" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndRead" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginWrite" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="userCallback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stateObject" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.IsolatedStorage.IsolatedStorageException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.IO.IsolatedStorage.IsolatedStorageSecurityState">
    <Properties>
      <Property Name="Options" Type="System.IO.IsolatedStorage.IsolatedStorageSecurityOptions" />
      <Property Name="UsedSize" Type="System.Int64" />
      <Property Name="Quota" Type="System.Int64" />
    </Properties>
    <Methods>
      <Method Name="get_Options" ReturnType="System.IO.IsolatedStorage.IsolatedStorageSecurityOptions">
        <Parameters />
      </Method>
      <Method Name="get_UsedSize" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Quota" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Quota" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnsureState" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.IO.IsolatedStorage.IsolatedStorageFile">
    <Properties>
      <Property Name="UsedSize" Type="System.Int64" />
      <Property Name="CurrentSize" Type="System.UInt64" />
      <Property Name="AvailableFreeSpace" Type="System.Int64" />
      <Property Name="Quota" Type="System.Int64" />
      <Property Name="IsEnabled" Type="System.Boolean" />
      <Property Name="MaximumSize" Type="System.UInt64" />
      <Property Name="DomainIdentity" Type="System.Object" />
      <Property Name="ApplicationIdentity" Type="System.Object" />
      <Property Name="AssemblyIdentity" Type="System.Object" />
      <Property Name="Scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
    </Properties>
    <Methods>
      <Method Name="get_UsedSize" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_CurrentSize" ReturnType="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="get_AvailableFreeSpace" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Quota" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_MaximumSize" ReturnType="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="IncreaseQuotaTo" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="newQuotaSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="file" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FileExists" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DirectoryExists" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDirectory" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCreationTime" ReturnType="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLastAccessTime" ReturnType="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLastWriteTime" ReturnType="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="overwrite" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="MoveFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="MoveDirectory" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sourceDirectoryName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationDirectoryName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeleteDirectory" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="dir" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFileNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetFileNames" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDirectoryNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectoryNames" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenFile" ReturnType="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="mode" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenFile" ReturnType="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="mode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OpenFile" ReturnType="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="mode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="share" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateFile" ReturnType="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityElement">
    <Properties>
      <Property Name="Tag" Type="System.String" />
      <Property Name="Attributes" Type="System.Collections.Hashtable" />
      <Property Name="Text" Type="System.String" />
      <Property Name="Children" Type="System.Collections.ArrayList" />
    </Properties>
    <Methods>
      <Method Name="AddAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Attribute" ReturnType="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Tag" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Tag" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Collections.Hashtable">
        <Parameters />
      </Method>
      <Method Name="set_Attributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Text" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Text" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Children" ReturnType="System.Collections.ArrayList">
        <Parameters />
      </Method>
      <Method Name="set_Children" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddChild" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="child" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equal" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="SearchForChildByTag" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="tag" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SearchForTextOfTag" ReturnType="System.String">
        <Parameters>
          <Parameter Name="tag" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.XmlSyntaxException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.UnverifiableCodeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.AllowPartiallyTrustedCallersAttribute">
    <Properties>
      <Property Name="PartialTrustVisibilityLevel" Type="System.Security.PartialTrustVisibilityLevel" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_PartialTrustVisibilityLevel" ReturnType="System.Security.PartialTrustVisibilityLevel">
        <Parameters />
      </Method>
      <Method Name="set_PartialTrustVisibilityLevel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityCriticalAttribute">
    <Properties>
      <Property Name="Scope" Type="System.Security.SecurityCriticalScope" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Scope" ReturnType="System.Security.SecurityCriticalScope">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityTreatAsSafeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.SecuritySafeCriticalAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.SecurityTransparentAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.SecurityRulesAttribute">
    <Properties>
      <Property Name="SkipVerificationInFullTrust" Type="System.Boolean" />
      <Property Name="RuleSet" Type="System.Security.SecurityRuleSet" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SkipVerificationInFullTrust" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SkipVerificationInFullTrust" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_RuleSet" ReturnType="System.Security.SecurityRuleSet">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.CodeAccessPermission">
    <Properties />
    <Methods>
      <Method Name="Demand" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Assert" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Deny" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="PermitOnly" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="elem" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.HostSecurityManager">
    <Properties>
      <Property Name="Flags" Type="System.Security.HostSecurityManagerOptions" />
      <Property Name="DomainPolicy" Type="System.Security.Policy.PolicyLevel" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.Security.HostSecurityManagerOptions">
        <Parameters />
      </Method>
      <Method Name="get_DomainPolicy" ReturnType="System.Security.Policy.PolicyLevel">
        <Parameters />
      </Method>
      <Method Name="ProvideAppDomainEvidence" ReturnType="System.Security.Policy.Evidence">
        <Parameters>
          <Parameter Name="inputEvidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ProvideAssemblyEvidence" ReturnType="System.Security.Policy.Evidence">
        <Parameters>
          <Parameter Name="loadedAssembly" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputEvidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DetermineApplicationTrust" ReturnType="System.Security.Policy.ApplicationTrust">
        <Parameters>
          <Parameter Name="applicationEvidence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activatorEvidence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolvePolicy" ReturnType="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHostSuppliedAppDomainEvidenceTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetHostSuppliedAssemblyEvidenceTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateAppDomainEvidence" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters>
          <Parameter Name="evidenceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateAssemblyEvidence" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters>
          <Parameter Name="evidenceType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.NamedPermissionSet">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Description" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Description" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.PermissionSet">
    <Properties>
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsEmpty" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="permClass" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="perm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="perm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemovePermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="permClass" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Demand" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Assert" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Deny" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="PermitOnly" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="ContainsNonCodeAccessPermissions" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.ReadOnlyPermissionSet">
    <Properties>
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecureString">
    <Properties>
      <Property Name="Length" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Length" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="AppendChar" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.SecureString">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="InsertAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="MakeReadOnly" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="RemoveAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityContext">
    <Properties />
    <Methods>
      <Method Name="CreateCopy" ReturnType="System.Security.SecurityContext">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityException">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="PermissionType" Type="System.Type" />
      <Property Name="FirstPermissionThatFailed" Type="System.Security.IPermission" />
      <Property Name="PermissionState" Type="System.String" />
      <Property Name="Demanded" Type="System.Object" />
      <Property Name="GrantedSet" Type="System.String" />
      <Property Name="RefusedSet" Type="System.String" />
      <Property Name="DenySetInstance" Type="System.Object" />
      <Property Name="PermitOnlySetInstance" Type="System.Object" />
      <Property Name="FailedAssemblyInfo" Type="System.Reflection.AssemblyName" />
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Zone" Type="System.Security.SecurityZone" />
      <Property Name="Url" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Action" ReturnType="System.Security.Permissions.SecurityAction">
        <Parameters />
      </Method>
      <Method Name="set_Action" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PermissionType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="set_PermissionType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FirstPermissionThatFailed" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="set_FirstPermissionThatFailed" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PermissionState" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PermissionState" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Demanded" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_Demanded" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_GrantedSet" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_GrantedSet" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_RefusedSet" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_RefusedSet" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DenySetInstance" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_DenySetInstance" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PermitOnlySetInstance" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_PermitOnlySetInstance" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FailedAssemblyInfo" ReturnType="System.Reflection.AssemblyName">
        <Parameters />
      </Method>
      <Method Name="set_FailedAssemblyInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Method" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="set_Method" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Zone" ReturnType="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="set_Zone" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Url" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Url" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityState">
    <Properties />
    <Methods>
      <Method Name="IsStateAvailable" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="EnsureState" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.HostProtectionException">
    <Properties>
      <Property Name="ProtectedResources" Type="System.Security.Permissions.HostProtectionResource" />
      <Property Name="DemandedResources" Type="System.Security.Permissions.HostProtectionResource" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ProtectedResources" ReturnType="System.Security.Permissions.HostProtectionResource">
        <Parameters />
      </Method>
      <Method Name="get_DemandedResources" ReturnType="System.Security.Permissions.HostProtectionResource">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.SecurityManager">
    <Properties>
      <Property Name="CheckExecutionRights" Type="System.Boolean" />
      <Property Name="SecurityEnabled" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.VerificationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.AccessControl.GenericAce">
    <Properties>
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_AceType" ReturnType="System.Security.AccessControl.AceType">
        <Parameters />
      </Method>
      <Method Name="get_AceFlags" ReturnType="System.Security.AccessControl.AceFlags">
        <Parameters />
      </Method>
      <Method Name="set_AceFlags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsInherited" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InheritanceFlags" ReturnType="System.Security.AccessControl.InheritanceFlags">
        <Parameters />
      </Method>
      <Method Name="get_PropagationFlags" ReturnType="System.Security.AccessControl.PropagationFlags">
        <Parameters />
      </Method>
      <Method Name="get_AuditFlags" ReturnType="System.Security.AccessControl.AuditFlags">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.AccessControl.GenericAce">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.KnownAce">
    <Properties>
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_AccessMask" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_AccessMask" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityIdentifier" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_SecurityIdentifier" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CustomAce">
    <Properties>
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_OpaqueLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOpaque" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetOpaque" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opaque" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CompoundAce">
    <Properties>
      <Property Name="CompoundAceType" Type="System.Security.AccessControl.CompoundAceType" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_CompoundAceType" ReturnType="System.Security.AccessControl.CompoundAceType">
        <Parameters />
      </Method>
      <Method Name="set_CompoundAceType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.QualifiedAce">
    <Properties>
      <Property Name="AceQualifier" Type="System.Security.AccessControl.AceQualifier" />
      <Property Name="IsCallback" Type="System.Boolean" />
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_AceQualifier" ReturnType="System.Security.AccessControl.AceQualifier">
        <Parameters />
      </Method>
      <Method Name="get_IsCallback" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_OpaqueLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOpaque" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetOpaque" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opaque" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CommonAce">
    <Properties>
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AceQualifier" Type="System.Security.AccessControl.AceQualifier" />
      <Property Name="IsCallback" Type="System.Boolean" />
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.ObjectAce">
    <Properties>
      <Property Name="ObjectAceFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
      <Property Name="ObjectAceType" Type="System.Guid" />
      <Property Name="InheritedObjectAceType" Type="System.Guid" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AceQualifier" Type="System.Security.AccessControl.AceQualifier" />
      <Property Name="IsCallback" Type="System.Boolean" />
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectAceFlags" ReturnType="System.Security.AccessControl.ObjectAceFlags">
        <Parameters />
      </Method>
      <Method Name="set_ObjectAceFlags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ObjectAceType" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="set_ObjectAceType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InheritedObjectAceType" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="set_InheritedObjectAceType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AceEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Security.AccessControl.GenericAce" />
    </Properties>
    <Methods>
      <Method Name="get_Current" ReturnType="System.Security.AccessControl.GenericAce">
        <Parameters />
      </Method>
      <Method Name="MoveNext" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.GenericAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Revision" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Security.AccessControl.AceEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.RawAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Revision" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InsertAce" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ace" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAce" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CommonAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="IsCanonical" Type="System.Boolean" />
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Revision" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsCanonical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsContainer" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsDS" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveInheritedAces" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Purge" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.SystemAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="IsCanonical" Type="System.Boolean" />
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="AddAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAudit" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAudit" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAudit" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.DiscretionaryAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="IsCanonical" Type="System.Boolean" />
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="AddAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccess" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccess" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccess" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CryptoKeyAccessRule">
    <Properties>
      <Property Name="CryptoKeyRights" Type="System.Security.AccessControl.CryptoKeyRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_CryptoKeyRights" ReturnType="System.Security.AccessControl.CryptoKeyRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CryptoKeyAuditRule">
    <Properties>
      <Property Name="CryptoKeyRights" Type="System.Security.AccessControl.CryptoKeyRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_CryptoKeyRights" ReturnType="System.Security.AccessControl.CryptoKeyRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CryptoKeySecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
    <Properties>
      <Property Name="EventWaitHandleRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_EventWaitHandleRights" ReturnType="System.Security.AccessControl.EventWaitHandleRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.EventWaitHandleAuditRule">
    <Properties>
      <Property Name="EventWaitHandleRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_EventWaitHandleRights" ReturnType="System.Security.AccessControl.EventWaitHandleRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.EventWaitHandleSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.FileSystemAccessRule">
    <Properties>
      <Property Name="FileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_FileSystemRights" ReturnType="System.Security.AccessControl.FileSystemRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.FileSystemAuditRule">
    <Properties>
      <Property Name="FileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_FileSystemRights" ReturnType="System.Security.AccessControl.FileSystemRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.FileSystemSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.FileSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.AccessControl.DirectorySecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.AccessControl.MutexAccessRule">
    <Properties>
      <Property Name="MutexRights" Type="System.Security.AccessControl.MutexRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_MutexRights" ReturnType="System.Security.AccessControl.MutexRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.MutexAuditRule">
    <Properties>
      <Property Name="MutexRights" Type="System.Security.AccessControl.MutexRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_MutexRights" ReturnType="System.Security.AccessControl.MutexRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.MutexSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.NativeObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.AccessControl.ObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="GetOwner" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetOwner" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetGroup" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetGroup" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PurgeAccessRules" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PurgeAuditRules" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AreAccessRulesProtected" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetAccessRuleProtection" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="preserveInheritance" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AreAuditRulesProtected" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetAuditRuleProtection" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="preserveInheritance" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AreAccessRulesCanonical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_AreAuditRulesCanonical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetSecurityDescriptorSddlForm" ReturnType="System.String">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSecurityDescriptorSddlForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sddlForm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSecurityDescriptorSddlForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sddlForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSecurityDescriptorBinaryForm" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetSecurityDescriptorBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSecurityDescriptorBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="ModifyAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="modification" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modified" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ModifyAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="modification" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modified" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AccessRule`1">
    <Properties>
      <Property Name="Rights" Type="T" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_Rights" ReturnType="T">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AuditRule`1">
    <Properties>
      <Property Name="Rights" Type="T" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_Rights" ReturnType="T">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.ObjectSecurity`1">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CommonObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="GetAccessRules" ReturnType="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="includeInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAuditRules" ReturnType="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="includeInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.DirectoryObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritedObjectType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessRules" ReturnType="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="includeInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAuditRules" ReturnType="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="includeInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.PrivilegeNotHeldException">
    <Properties>
      <Property Name="PrivilegeName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_PrivilegeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.RegistryAccessRule">
    <Properties>
      <Property Name="RegistryRights" Type="System.Security.AccessControl.RegistryRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_RegistryRights" ReturnType="System.Security.AccessControl.RegistryRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.RegistryAuditRule">
    <Properties>
      <Property Name="RegistryRights" Type="System.Security.AccessControl.RegistryRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_RegistryRights" ReturnType="System.Security.AccessControl.RegistryRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.RegistrySecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" ReturnType="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" ReturnType="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="accessMask" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="isInherited" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inheritanceFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="propagationFlags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AuthorizationRule">
    <Properties>
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_IdentityReference" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters />
      </Method>
      <Method Name="get_IsInherited" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InheritanceFlags" ReturnType="System.Security.AccessControl.InheritanceFlags">
        <Parameters />
      </Method>
      <Method Name="get_PropagationFlags" ReturnType="System.Security.AccessControl.PropagationFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AccessRule">
    <Properties>
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_AccessControlType" ReturnType="System.Security.AccessControl.AccessControlType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.ObjectAccessRule">
    <Properties>
      <Property Name="ObjectType" Type="System.Guid" />
      <Property Name="InheritedObjectType" Type="System.Guid" />
      <Property Name="ObjectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectType" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_InheritedObjectType" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ObjectFlags" ReturnType="System.Security.AccessControl.ObjectAceFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AuditRule">
    <Properties>
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_AuditFlags" ReturnType="System.Security.AccessControl.AuditFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.ObjectAuditRule">
    <Properties>
      <Property Name="ObjectType" Type="System.Guid" />
      <Property Name="InheritedObjectType" Type="System.Guid" />
      <Property Name="ObjectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectType" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_InheritedObjectType" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ObjectFlags" ReturnType="System.Security.AccessControl.ObjectAceFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.AuthorizationRuleCollection">
    <Properties>
      <Property Name="Item" Type="System.Security.AccessControl.AuthorizationRule" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="AddRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rules" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.AccessControl.AuthorizationRule">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.GenericSecurityDescriptor">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="ControlFlags" Type="System.Security.AccessControl.ControlFlags" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Group" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlFlags" ReturnType="System.Security.AccessControl.ControlFlags">
        <Parameters />
      </Method>
      <Method Name="get_Owner" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Owner" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Group" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Group" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSddlForm" ReturnType="System.String">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.RawSecurityDescriptor">
    <Properties>
      <Property Name="ControlFlags" Type="System.Security.AccessControl.ControlFlags" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Group" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="SystemAcl" Type="System.Security.AccessControl.RawAcl" />
      <Property Name="DiscretionaryAcl" Type="System.Security.AccessControl.RawAcl" />
      <Property Name="ResourceManagerControl" Type="System.Byte" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ControlFlags" ReturnType="System.Security.AccessControl.ControlFlags">
        <Parameters />
      </Method>
      <Method Name="get_Owner" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Owner" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Group" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Group" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SystemAcl" ReturnType="System.Security.AccessControl.RawAcl">
        <Parameters />
      </Method>
      <Method Name="set_SystemAcl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DiscretionaryAcl" ReturnType="System.Security.AccessControl.RawAcl">
        <Parameters />
      </Method>
      <Method Name="set_DiscretionaryAcl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ResourceManagerControl" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="set_ResourceManagerControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetFlags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.AccessControl.CommonSecurityDescriptor">
    <Properties>
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="ControlFlags" Type="System.Security.AccessControl.ControlFlags" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Group" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="SystemAcl" Type="System.Security.AccessControl.SystemAcl" />
      <Property Name="DiscretionaryAcl" Type="System.Security.AccessControl.DiscretionaryAcl" />
      <Property Name="IsSystemAclCanonical" Type="System.Boolean" />
      <Property Name="IsDiscretionaryAclCanonical" Type="System.Boolean" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsContainer" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsDS" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ControlFlags" ReturnType="System.Security.AccessControl.ControlFlags">
        <Parameters />
      </Method>
      <Method Name="get_Owner" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Owner" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Group" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Group" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SystemAcl" ReturnType="System.Security.AccessControl.SystemAcl">
        <Parameters />
      </Method>
      <Method Name="set_SystemAcl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DiscretionaryAcl" ReturnType="System.Security.AccessControl.DiscretionaryAcl">
        <Parameters />
      </Method>
      <Method Name="set_DiscretionaryAcl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsSystemAclCanonical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsDiscretionaryAclCanonical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetSystemAclProtection" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="preserveInheritance" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetDiscretionaryAclProtection" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="preserveInheritance" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PurgeAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PurgeAudit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddDiscretionaryAcl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="revision" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="trusted" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddSystemAcl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="revision" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="trusted" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.KeySizes">
    <Properties>
      <Property Name="MinSize" Type="System.Int32" />
      <Property Name="MaxSize" Type="System.Int32" />
      <Property Name="SkipSize" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MinSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MaxSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SkipSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.CryptographicException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.CryptographicUnexpectedOperationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.RandomNumberGenerator">
    <Properties />
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNonZeroBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RNGCryptoServiceProvider">
    <Properties />
    <Methods>
      <Method Name="GetBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNonZeroBytes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.Aes">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.AsymmetricAlgorithm">
    <Properties>
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LegalKeySizes" ReturnType="System.Security.Cryptography.KeySizes[]">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="FromXmlString" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="xmlString" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXmlString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.AsymmetricKeyExchangeDeformatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Parameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DecryptKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.AsymmetricKeyExchangeFormatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="symAlgType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.AsymmetricSignatureDeformatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="hash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.AsymmetricSignatureFormatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="hash" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.ToBase64Transform">
    <Properties>
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_InputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.FromBase64Transform">
    <Properties>
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_InputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.CryptoAPITransform">
    <Properties>
      <Property Name="KeyHandle" Type="System.IntPtr" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_KeyHandle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_InputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.CspParameters">
    <Properties>
      <Property Name="Flags" Type="System.Security.Cryptography.CspProviderFlags" />
      <Property Name="CryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
      <Property Name="KeyPassword" Type="System.Security.SecureString" />
      <Property Name="ParentWindowHandle" Type="System.IntPtr" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.Security.Cryptography.CspProviderFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CryptoKeySecurity" ReturnType="System.Security.AccessControl.CryptoKeySecurity">
        <Parameters />
      </Method>
      <Method Name="set_CryptoKeySecurity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeyPassword" ReturnType="System.Security.SecureString">
        <Parameters />
      </Method>
      <Method Name="set_KeyPassword" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ParentWindowHandle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="set_ParentWindowHandle" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.CryptoConfig">
    <Properties>
      <Property Name="AllowOnlyFipsAlgorithms" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.CryptoStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="HasFlushedFinalBlock" Type="System.Boolean" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="FlushFinalBlock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HasFlushedFinalBlock" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Flush" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Seek" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="origin" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLength" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Read" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" ReturnType="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DES">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_Key" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DESCryptoServiceProvider">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="CreateEncryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DeriveBytes">
    <Properties />
    <Methods>
      <Method Name="GetBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="cb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DSA">
    <Properties>
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="CreateSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXmlString" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="xmlString" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXmlString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" ReturnType="System.Security.Cryptography.DSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DSACryptoServiceProvider">
    <Properties>
      <Property Name="PublicOnly" Type="System.Boolean" />
      <Property Name="CspKeyContainerInfo" Type="System.Security.Cryptography.CspKeyContainerInfo" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="UseMachineKeyStore" Type="System.Boolean" />
      <Property Name="PersistKeyInCsp" Type="System.Boolean" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
    </Properties>
    <Methods>
      <Method Name="get_PublicOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CspKeyContainerInfo" ReturnType="System.Security.Cryptography.CspKeyContainerInfo">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_PersistKeyInCsp" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_PersistKeyInCsp" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" ReturnType="System.Security.Cryptography.DSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExportCspBlob" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ImportCspBlob" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="keyBlob" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputStream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DSASignatureDeformatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.DSASignatureFormatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.HMAC">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Key" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HashName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HashName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.HMACMD5">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.HMACRIPEMD160">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.HMACSHA1">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.HMACSHA256">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.HMACSHA384">
    <Properties>
      <Property Name="ProduceLegacyHmacValues" Type="System.Boolean" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ProduceLegacyHmacValues" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ProduceLegacyHmacValues" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.HMACSHA512">
    <Properties>
      <Property Name="ProduceLegacyHmacValues" Type="System.Boolean" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ProduceLegacyHmacValues" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ProduceLegacyHmacValues" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.HashAlgorithm">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_HashSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Hash" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="ComputeHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputStream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ComputeHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ComputeHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.CspKeyContainerInfo">
    <Properties>
      <Property Name="MachineKeyStore" Type="System.Boolean" />
      <Property Name="ProviderName" Type="System.String" />
      <Property Name="ProviderType" Type="System.Int32" />
      <Property Name="KeyContainerName" Type="System.String" />
      <Property Name="UniqueKeyContainerName" Type="System.String" />
      <Property Name="KeyNumber" Type="System.Security.Cryptography.KeyNumber" />
      <Property Name="Exportable" Type="System.Boolean" />
      <Property Name="HardwareDevice" Type="System.Boolean" />
      <Property Name="Removable" Type="System.Boolean" />
      <Property Name="Accessible" Type="System.Boolean" />
      <Property Name="Protected" Type="System.Boolean" />
      <Property Name="CryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
      <Property Name="RandomlyGenerated" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MachineKeyStore" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ProviderName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ProviderType" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyContainerName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_UniqueKeyContainerName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_KeyNumber" ReturnType="System.Security.Cryptography.KeyNumber">
        <Parameters />
      </Method>
      <Method Name="get_Exportable" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HardwareDevice" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Removable" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Accessible" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Protected" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CryptoKeySecurity" ReturnType="System.Security.AccessControl.CryptoKeySecurity">
        <Parameters />
      </Method>
      <Method Name="get_RandomlyGenerated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.KeyedHashAlgorithm">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Key" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.MACTripleDES">
    <Properties>
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Padding" ReturnType="System.Security.Cryptography.PaddingMode">
        <Parameters />
      </Method>
      <Method Name="set_Padding" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.MD5">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.MD5CryptoServiceProvider">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.MaskGenerationMethod">
    <Properties />
    <Methods>
      <Method Name="GenerateMask" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbSeed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cbReturn" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.PasswordDeriveBytes">
    <Properties>
      <Property Name="HashName" Type="System.String" />
      <Property Name="IterationCount" Type="System.Int32" />
      <Property Name="Salt" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_HashName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HashName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IterationCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_IterationCount" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Salt" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Salt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="cb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="CryptDeriveKey" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="algname" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="alghashname" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keySize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.PKCS1MaskGenerationMethod">
    <Properties>
      <Property Name="HashName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_HashName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HashName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateMask" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbSeed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cbReturn" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RC2">
    <Properties>
      <Property Name="EffectiveKeySize" Type="System.Int32" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_EffectiveKeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_EffectiveKeySize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RC2CryptoServiceProvider">
    <Properties>
      <Property Name="EffectiveKeySize" Type="System.Int32" />
      <Property Name="UseSalt" Type="System.Boolean" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_EffectiveKeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_EffectiveKeySize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UseSalt" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseSalt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateEncryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
    <Properties>
      <Property Name="IterationCount" Type="System.Int32" />
      <Property Name="Salt" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_IterationCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_IterationCount" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Salt" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Salt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="cb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="CryptDeriveKey" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="algname" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="alghashname" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keySize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RIPEMD160">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.RIPEMD160Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSA">
    <Properties>
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
    </Properties>
    <Methods>
      <Method Name="Encrypt" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="hash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="hash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DecryptValue" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EncryptValue" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="FromXmlString" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="xmlString" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXmlString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" ReturnType="System.Security.Cryptography.RSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSASignaturePadding">
    <Properties>
      <Property Name="Pkcs1" Type="System.Security.Cryptography.RSASignaturePadding" />
      <Property Name="Pss" Type="System.Security.Cryptography.RSASignaturePadding" />
      <Property Name="Mode" Type="System.Security.Cryptography.RSASignaturePaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_Mode" ReturnType="System.Security.Cryptography.RSASignaturePaddingMode">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSACryptoServiceProvider">
    <Properties>
      <Property Name="PublicOnly" Type="System.Boolean" />
      <Property Name="CspKeyContainerInfo" Type="System.Security.Cryptography.CspKeyContainerInfo" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="UseMachineKeyStore" Type="System.Boolean" />
      <Property Name="PersistKeyInCsp" Type="System.Boolean" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
    </Properties>
    <Methods>
      <Method Name="get_PublicOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CspKeyContainerInfo" ReturnType="System.Security.Cryptography.CspKeyContainerInfo">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_PersistKeyInCsp" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_PersistKeyInCsp" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" ReturnType="System.Security.Cryptography.RSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ExportCspBlob" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ImportCspBlob" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="keyBlob" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="halg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="halg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignData" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="halg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="buffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="halg" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Encrypt" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fOAEP" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fOAEP" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DecryptValue" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EncryptValue" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Encrypt" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SignHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="hash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="hash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hashAlgorithm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="padding" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAEncryptionPadding">
    <Properties>
      <Property Name="Pkcs1" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA1" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA256" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA384" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA512" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="Mode" Type="System.Security.Cryptography.RSAEncryptionPaddingMode" />
      <Property Name="OaepHashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
    </Properties>
    <Methods>
      <Method Name="get_Mode" ReturnType="System.Security.Cryptography.RSAEncryptionPaddingMode">
        <Parameters />
      </Method>
      <Method Name="get_OaepHashAlgorithm" ReturnType="System.Security.Cryptography.HashAlgorithmName">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Parameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DecryptKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter">
    <Properties>
      <Property Name="Parameter" Type="System.Byte[]" />
      <Property Name="Parameters" Type="System.String" />
      <Property Name="Rng" Type="System.Security.Cryptography.RandomNumberGenerator" />
    </Properties>
    <Methods>
      <Method Name="get_Parameter" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Parameter" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Parameters" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Rng" ReturnType="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="set_Rng" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="symAlgType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter">
    <Properties>
      <Property Name="RNG" Type="System.Security.Cryptography.RandomNumberGenerator" />
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_RNG" ReturnType="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="set_RNG" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Parameters" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Parameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DecryptKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbIn" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
      <Property Name="Rng" Type="System.Security.Cryptography.RandomNumberGenerator" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Rng" ReturnType="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="set_Rng" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="symAlgType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAPKCS1SignatureDeformatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RSAPKCS1SignatureFormatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.Rijndael">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.RijndaelManaged">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="CreateEncryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.RijndaelManagedTransform">
    <Properties>
      <Property Name="BlockSizeValue" Type="System.Int32" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BlockSizeValue" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_InputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="outputOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inputCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SHA1">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.SHA1CryptoServiceProvider">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SHA1Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SHA256">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.SHA256Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SHA384">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.SHA384Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SHA512">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Cryptography.SHA512Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SignatureDescription">
    <Properties>
      <Property Name="KeyAlgorithm" Type="System.String" />
      <Property Name="DigestAlgorithm" Type="System.String" />
      <Property Name="FormatterAlgorithm" Type="System.String" />
      <Property Name="DeformatterAlgorithm" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_KeyAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DigestAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DigestAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FormatterAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FormatterAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DeformatterAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DeformatterAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDeformatter" ReturnType="System.Security.Cryptography.AsymmetricSignatureDeformatter">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateFormatter" ReturnType="System.Security.Cryptography.AsymmetricSignatureFormatter">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDigest" ReturnType="System.Security.Cryptography.HashAlgorithm">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.SymmetricAlgorithm">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="ValidKeySize" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="bitLength" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BlockSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_BlockSize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FeedbackSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_FeedbackSize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IV" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_IV" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Key" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LegalBlockSizes" ReturnType="System.Security.Cryptography.KeySizes[]">
        <Parameters />
      </Method>
      <Method Name="get_LegalKeySizes" ReturnType="System.Security.Cryptography.KeySizes[]">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Mode" ReturnType="System.Security.Cryptography.CipherMode">
        <Parameters />
      </Method>
      <Method Name="set_Mode" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Padding" ReturnType="System.Security.Cryptography.PaddingMode">
        <Parameters />
      </Method>
      <Method Name="set_Padding" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateEncryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters />
      </Method>
      <Method Name="CreateEncryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters />
      </Method>
      <Method Name="CreateDecryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.TripleDES">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_Key" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.TripleDESCryptoServiceProvider">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="CreateEncryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" ReturnType="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rgbIV" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Cryptography.X509Certificates.X509Certificate">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="Issuer" Type="System.String" />
      <Property Name="Subject" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Handle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="GetName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetIssuerName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetSerialNumber" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetSerialNumberString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetKeyAlgorithmParameters" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetKeyAlgorithmParametersString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetKeyAlgorithm" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetPublicKey" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetPublicKeyString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetRawCertData" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetRawCertDataString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetCertHash" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetCertHashString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetEffectiveDateString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetExpirationDateString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="fVerbose" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFormat" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Issuer" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Subject" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Import" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rawData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Import" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rawData" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="password" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keyStorageFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Import" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="rawData" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="password" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keyStorageFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Import" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Import" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="password" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keyStorageFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Import" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="password" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keyStorageFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Export" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="contentType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Export" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="contentType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="password" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Export" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="contentType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="password" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.EnvironmentPermission">
    <Properties />
    <Methods>
      <Method Name="SetPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="flag" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="flag" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPathList" ReturnType="System.String">
        <Parameters>
          <Parameter Name="flag" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.FileDialogPermission">
    <Properties>
      <Property Name="Access" Type="System.Security.Permissions.FileDialogPermissionAccess" />
    </Properties>
    <Methods>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Access" ReturnType="System.Security.Permissions.FileDialogPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_Access" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.FileIOPermission">
    <Properties>
      <Property Name="AllLocalFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
      <Property Name="AllFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
    </Properties>
    <Methods>
      <Method Name="SetPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="path" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPathList" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AllLocalFiles" ReturnType="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllLocalFiles" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AllFiles" ReturnType="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllFiles" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.HostProtectionAttribute">
    <Properties>
      <Property Name="Resources" Type="System.Security.Permissions.HostProtectionResource" />
      <Property Name="Synchronization" Type="System.Boolean" />
      <Property Name="SharedState" Type="System.Boolean" />
      <Property Name="ExternalProcessMgmt" Type="System.Boolean" />
      <Property Name="SelfAffectingProcessMgmt" Type="System.Boolean" />
      <Property Name="ExternalThreading" Type="System.Boolean" />
      <Property Name="SelfAffectingThreading" Type="System.Boolean" />
      <Property Name="SecurityInfrastructure" Type="System.Boolean" />
      <Property Name="UI" Type="System.Boolean" />
      <Property Name="MayLeakOnAbort" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Resources" ReturnType="System.Security.Permissions.HostProtectionResource">
        <Parameters />
      </Method>
      <Method Name="set_Resources" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Synchronization" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Synchronization" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SharedState" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SharedState" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ExternalProcessMgmt" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ExternalProcessMgmt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SelfAffectingProcessMgmt" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SelfAffectingProcessMgmt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ExternalThreading" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ExternalThreading" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SelfAffectingThreading" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SelfAffectingThreading" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityInfrastructure" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SecurityInfrastructure" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UI" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UI" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MayLeakOnAbort" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_MayLeakOnAbort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.IsolatedStoragePermission">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
    </Properties>
    <Methods>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_UserQuota" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UserQuota" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_UsageAllowed" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UsageAllowed" ReturnType="System.Security.Permissions.IsolatedStorageContainment">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.IsolatedStorageFilePermission">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
    </Properties>
    <Methods>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.SecurityAttribute">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Action" ReturnType="System.Security.Permissions.SecurityAction">
        <Parameters />
      </Method>
      <Method Name="set_Action" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Unrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Unrestricted" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.CodeAccessSecurityAttribute">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Permissions.EnvironmentPermissionAttribute">
    <Properties>
      <Property Name="Read" Type="System.String" />
      <Property Name="Write" Type="System.String" />
      <Property Name="All" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Read" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Read" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Write" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_All" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_All" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.FileDialogPermissionAttribute">
    <Properties>
      <Property Name="Open" Type="System.Boolean" />
      <Property Name="Save" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Open" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Open" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Save" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Save" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.FileIOPermissionAttribute">
    <Properties>
      <Property Name="Read" Type="System.String" />
      <Property Name="Write" Type="System.String" />
      <Property Name="Append" Type="System.String" />
      <Property Name="PathDiscovery" Type="System.String" />
      <Property Name="ViewAccessControl" Type="System.String" />
      <Property Name="ChangeAccessControl" Type="System.String" />
      <Property Name="All" Type="System.String" />
      <Property Name="ViewAndModify" Type="System.String" />
      <Property Name="AllFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
      <Property Name="AllLocalFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Read" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Read" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Write" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Append" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Append" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PathDiscovery" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PathDiscovery" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ViewAccessControl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ChangeAccessControl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ChangeAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_All" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_All" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ViewAndModify" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAndModify" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AllFiles" ReturnType="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllFiles" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AllLocalFiles" ReturnType="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllLocalFiles" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.KeyContainerPermissionAttribute">
    <Properties>
      <Property Name="KeyStore" Type="System.String" />
      <Property Name="ProviderName" Type="System.String" />
      <Property Name="ProviderType" Type="System.Int32" />
      <Property Name="KeyContainerName" Type="System.String" />
      <Property Name="KeySpec" Type="System.Int32" />
      <Property Name="Flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_KeyStore" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyStore" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ProviderName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderType" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ProviderType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeyContainerName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyContainerName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeySpec" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySpec" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.KeyContainerPermissionFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.PrincipalPermissionAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Role" Type="System.String" />
      <Property Name="Authenticated" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Role" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Role" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Authenticated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Authenticated" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.ReflectionPermissionAttribute">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      <Property Name="TypeInformation" Type="System.Boolean" />
      <Property Name="MemberAccess" Type="System.Boolean" />
      <Property Name="ReflectionEmit" Type="System.Boolean" />
      <Property Name="RestrictedMemberAccess" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.ReflectionPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TypeInformation" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_TypeInformation" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MemberAccess" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_MemberAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ReflectionEmit" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ReflectionEmit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_RestrictedMemberAccess" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_RestrictedMemberAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.RegistryPermissionAttribute">
    <Properties>
      <Property Name="Read" Type="System.String" />
      <Property Name="Write" Type="System.String" />
      <Property Name="Create" Type="System.String" />
      <Property Name="ViewAccessControl" Type="System.String" />
      <Property Name="ChangeAccessControl" Type="System.String" />
      <Property Name="ViewAndModify" Type="System.String" />
      <Property Name="All" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Read" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Read" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Write" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Create" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Create" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ViewAccessControl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ChangeAccessControl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ChangeAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ViewAndModify" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAndModify" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_All" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_All" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.SecurityPermissionAttribute">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.SecurityPermissionFlag" />
      <Property Name="Assertion" Type="System.Boolean" />
      <Property Name="UnmanagedCode" Type="System.Boolean" />
      <Property Name="SkipVerification" Type="System.Boolean" />
      <Property Name="Execution" Type="System.Boolean" />
      <Property Name="ControlThread" Type="System.Boolean" />
      <Property Name="ControlEvidence" Type="System.Boolean" />
      <Property Name="ControlPolicy" Type="System.Boolean" />
      <Property Name="SerializationFormatter" Type="System.Boolean" />
      <Property Name="ControlDomainPolicy" Type="System.Boolean" />
      <Property Name="ControlPrincipal" Type="System.Boolean" />
      <Property Name="ControlAppDomain" Type="System.Boolean" />
      <Property Name="RemotingConfiguration" Type="System.Boolean" />
      <Property Name="Infrastructure" Type="System.Boolean" />
      <Property Name="BindingRedirects" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.SecurityPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Assertion" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Assertion" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UnmanagedCode" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UnmanagedCode" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SkipVerification" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SkipVerification" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Execution" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Execution" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlThread" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlThread" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlEvidence" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlEvidence" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlPolicy" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlPolicy" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SerializationFormatter" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SerializationFormatter" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlDomainPolicy" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlDomainPolicy" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlPrincipal" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlPrincipal" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ControlAppDomain" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlAppDomain" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_RemotingConfiguration" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_RemotingConfiguration" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Infrastructure" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Infrastructure" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_BindingRedirects" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_BindingRedirects" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.UIPermissionAttribute">
    <Properties>
      <Property Name="Window" Type="System.Security.Permissions.UIPermissionWindow" />
      <Property Name="Clipboard" Type="System.Security.Permissions.UIPermissionClipboard" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Window" ReturnType="System.Security.Permissions.UIPermissionWindow">
        <Parameters />
      </Method>
      <Method Name="set_Window" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Clipboard" ReturnType="System.Security.Permissions.UIPermissionClipboard">
        <Parameters />
      </Method>
      <Method Name="set_Clipboard" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.ZoneIdentityPermissionAttribute">
    <Properties>
      <Property Name="Zone" Type="System.Security.SecurityZone" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Zone" ReturnType="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="set_Zone" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.StrongNameIdentityPermissionAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.String" />
      <Property Name="PublicKey" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Version" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Version" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PublicKey" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PublicKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.SiteIdentityPermissionAttribute">
    <Properties>
      <Property Name="Site" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Site" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Site" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.UrlIdentityPermissionAttribute">
    <Properties>
      <Property Name="Url" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Url" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Url" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.PublisherIdentityPermissionAttribute">
    <Properties>
      <Property Name="X509Certificate" Type="System.String" />
      <Property Name="CertFile" Type="System.String" />
      <Property Name="SignedFile" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_X509Certificate" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_X509Certificate" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CertFile" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CertFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SignedFile" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_SignedFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.IsolatedStoragePermissionAttribute">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="set_UserQuota" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UserQuota" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_UsageAllowed" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UsageAllowed" ReturnType="System.Security.Permissions.IsolatedStorageContainment">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.PermissionSetAttribute">
    <Properties>
      <Property Name="File" Type="System.String" />
      <Property Name="UnicodeEncoded" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="XML" Type="System.String" />
      <Property Name="Hex" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_File" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_File" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UnicodeEncoded" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UnicodeEncoded" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XML" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XML" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Hex" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Hex" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="CreatePermissionSet" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.ReflectionPermission">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.ReflectionPermissionFlag" />
    </Properties>
    <Methods>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.ReflectionPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.PrincipalPermission">
    <Properties />
    <Methods>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="Demand" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="elem" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.SecurityPermission">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.SecurityPermissionFlag" />
    </Properties>
    <Methods>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.SecurityPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.SiteIdentityPermission">
    <Properties>
      <Property Name="Site" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="set_Site" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Site" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.StrongNameIdentityPermission">
    <Properties>
      <Property Name="PublicKey" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PublicKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PublicKey" ReturnType="System.Security.Permissions.StrongNamePublicKeyBlob">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Version" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Version" ReturnType="System.Version">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.StrongNamePublicKeyBlob">
    <Properties />
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.UIPermission">
    <Properties>
      <Property Name="Window" Type="System.Security.Permissions.UIPermissionWindow" />
      <Property Name="Clipboard" Type="System.Security.Permissions.UIPermissionClipboard" />
    </Properties>
    <Methods>
      <Method Name="set_Window" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Window" ReturnType="System.Security.Permissions.UIPermissionWindow">
        <Parameters />
      </Method>
      <Method Name="set_Clipboard" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Clipboard" ReturnType="System.Security.Permissions.UIPermissionClipboard">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.UrlIdentityPermission">
    <Properties>
      <Property Name="Url" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="set_Url" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Url" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.ZoneIdentityPermission">
    <Properties>
      <Property Name="SecurityZone" Type="System.Security.SecurityZone" />
    </Properties>
    <Methods>
      <Method Name="set_SecurityZone" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityZone" ReturnType="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.GacIdentityPermissionAttribute">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="CreatePermission" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.GacIdentityPermission">
    <Properties />
    <Methods>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="securityElement" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.KeyContainerPermissionAccessEntry">
    <Properties>
      <Property Name="KeyStore" Type="System.String" />
      <Property Name="ProviderName" Type="System.String" />
      <Property Name="ProviderType" Type="System.Int32" />
      <Property Name="KeyContainerName" Type="System.String" />
      <Property Name="KeySpec" Type="System.Int32" />
      <Property Name="Flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
    </Properties>
    <Methods>
      <Method Name="get_KeyStore" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyStore" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ProviderName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderType" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ProviderType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeyContainerName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyContainerName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeySpec" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySpec" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.KeyContainerPermissionFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
    <Properties>
      <Property Name="Item" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Item" ReturnType="System.Security.Permissions.KeyContainerPermissionAccessEntry">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Add" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="accessEntry" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="accessEntry" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="accessEntry" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
    </Properties>
    <Methods>
      <Method Name="get_Current" ReturnType="System.Security.Permissions.KeyContainerPermissionAccessEntry">
        <Parameters />
      </Method>
      <Method Name="MoveNext" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.KeyContainerPermission">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      <Property Name="AccessEntries" Type="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.Security.Permissions.KeyContainerPermissionFlags">
        <Parameters />
      </Method>
      <Method Name="get_AccessEntries" ReturnType="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="securityElement" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.PublisherIdentityPermission">
    <Properties>
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    </Properties>
    <Methods>
      <Method Name="set_Certificate" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Certificate" ReturnType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Permissions.RegistryPermission">
    <Properties />
    <Methods>
      <Method Name="SetPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="control" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pathList" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPathList" ReturnType="System.String">
        <Parameters>
          <Parameter Name="access" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Intersect" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Union" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Claims.Claim">
    <Properties>
      <Property Name="Issuer" Type="System.String" />
      <Property Name="OriginalIssuer" Type="System.String" />
      <Property Name="Properties" Type="System.Collections.Generic.IDictionary`2[System.String,System.String]" />
      <Property Name="Subject" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="Type" Type="System.String" />
      <Property Name="Value" Type="System.String" />
      <Property Name="ValueType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Issuer" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_OriginalIssuer" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.Generic.IDictionary`2[System.String,System.String]">
        <Parameters />
      </Method>
      <Method Name="get_Subject" ReturnType="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_Type" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ValueType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Claims.Claim">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="writer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Claims.ClaimsIdentity">
    <Properties>
      <Property Name="AuthenticationType" Type="System.String" />
      <Property Name="IsAuthenticated" Type="System.Boolean" />
      <Property Name="Actor" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="BootstrapContext" Type="System.Object" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Label" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="NameClaimType" Type="System.String" />
      <Property Name="RoleClaimType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_AuthenticationType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsAuthenticated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Actor" ReturnType="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="set_Actor" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_BootstrapContext" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_BootstrapContext" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Claims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Label" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Label" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_NameClaimType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RoleClaimType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="AddClaim" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="claim" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddClaims" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="claims" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryRemoveClaim" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="claim" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveClaim" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="claim" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindAll" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindAll" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" ReturnType="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" ReturnType="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="writer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Claims.ClaimsPrincipal">
    <Properties>
      <Property Name="PrimaryIdentitySelector" Type="System.Func`2[System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity],System.Security.Claims.ClaimsIdentity]" />
      <Property Name="ClaimsPrincipalSelector" Type="System.Func`1[System.Security.Claims.ClaimsPrincipal]" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Current" Type="System.Security.Claims.ClaimsPrincipal" />
      <Property Name="Identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
      <Property Name="Identity" Type="System.Security.Principal.IIdentity" />
    </Properties>
    <Methods>
      <Method Name="AddIdentity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Claims.ClaimsPrincipal">
        <Parameters />
      </Method>
      <Method Name="AddIdentities" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identities" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Claims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="FindAll" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindAll" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" ReturnType="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" ReturnType="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Identities" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]">
        <Parameters />
      </Method>
      <Method Name="get_Identity" ReturnType="System.Security.Principal.IIdentity">
        <Parameters />
      </Method>
      <Method Name="IsInRole" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="writer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Claims.ClaimTypes">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Security.Claims.ClaimValueTypes">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Security.Principal.GenericIdentity">
    <Properties>
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Name" Type="System.String" />
      <Property Name="AuthenticationType" Type="System.String" />
      <Property Name="IsAuthenticated" Type="System.Boolean" />
      <Property Name="Actor" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="BootstrapContext" Type="System.Object" />
      <Property Name="Label" Type="System.String" />
      <Property Name="NameClaimType" Type="System.String" />
      <Property Name="RoleClaimType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Clone" ReturnType="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_Claims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AuthenticationType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsAuthenticated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.GenericPrincipal">
    <Properties>
      <Property Name="Identity" Type="System.Security.Principal.IIdentity" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
    </Properties>
    <Methods>
      <Method Name="get_Identity" ReturnType="System.Security.Principal.IIdentity">
        <Parameters />
      </Method>
      <Method Name="IsInRole" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.WindowsIdentity">
    <Properties>
      <Property Name="AuthenticationType" Type="System.String" />
      <Property Name="ImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      <Property Name="IsAuthenticated" Type="System.Boolean" />
      <Property Name="IsGuest" Type="System.Boolean" />
      <Property Name="IsSystem" Type="System.Boolean" />
      <Property Name="IsAnonymous" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="User" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Groups" Type="System.Security.Principal.IdentityReferenceCollection" />
      <Property Name="Token" Type="System.IntPtr" />
      <Property Name="AccessToken" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      <Property Name="UserClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="DeviceClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Actor" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="BootstrapContext" Type="System.Object" />
      <Property Name="Label" Type="System.String" />
      <Property Name="NameClaimType" Type="System.String" />
      <Property Name="RoleClaimType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_AuthenticationType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ImpersonationLevel" ReturnType="System.Security.Principal.TokenImpersonationLevel">
        <Parameters />
      </Method>
      <Method Name="get_IsAuthenticated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGuest" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSystem" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAnonymous" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Owner" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="get_User" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="get_Groups" ReturnType="System.Security.Principal.IdentityReferenceCollection">
        <Parameters />
      </Method>
      <Method Name="get_Token" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="Impersonate" ReturnType="System.Security.Principal.WindowsImpersonationContext">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_AccessToken" ReturnType="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_UserClaims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_DeviceClaims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Claims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.WindowsImpersonationContext">
    <Properties />
    <Methods>
      <Method Name="Undo" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.WindowsPrincipal">
    <Properties>
      <Property Name="Identity" Type="System.Security.Principal.IIdentity" />
      <Property Name="UserClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="DeviceClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
    </Properties>
    <Methods>
      <Method Name="get_Identity" ReturnType="System.Security.Principal.IIdentity">
        <Parameters />
      </Method>
      <Method Name="IsInRole" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UserClaims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_DeviceClaims" ReturnType="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="IsInRole" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsInRole" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="rid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsInRole" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.IdentityReference">
    <Properties>
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="IsValidTargetType" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Translate" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.IdentityReferenceCollection">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.Principal.IdentityReference" />
    </Properties>
    <Methods>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="identity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[System.Security.Principal.IdentityReference]">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Translate" ReturnType="System.Security.Principal.IdentityReferenceCollection">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Translate" ReturnType="System.Security.Principal.IdentityReferenceCollection">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="forceSuccess" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.NTAccount">
    <Properties>
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="IsValidTargetType" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Translate" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.SecurityIdentifier">
    <Properties>
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AccountDomainSid" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Translate" ReturnType="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_BinaryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_AccountDomainSid" ReturnType="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="IsValidTargetType" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="targetType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsAccountSid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="CompareTo" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsWellKnown" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsEqualDomainSid" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Principal.IdentityNotMappedException">
    <Properties>
      <Property Name="UnmappedIdentities" Type="System.Security.Principal.IdentityReferenceCollection" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="serializationInfo" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="streamingContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UnmappedIdentities" ReturnType="System.Security.Principal.IdentityReferenceCollection">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.AllMembershipCondition">
    <Properties />
    <Methods>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ApplicationDirectory">
    <Properties>
      <Property Name="Directory" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Directory" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ApplicationDirectoryMembershipCondition">
    <Properties />
    <Methods>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ApplicationSecurityInfo">
    <Properties>
      <Property Name="ApplicationId" Type="System.ApplicationId" />
      <Property Name="DeploymentId" Type="System.ApplicationId" />
      <Property Name="DefaultRequestSet" Type="System.Security.PermissionSet" />
      <Property Name="ApplicationEvidence" Type="System.Security.Policy.Evidence" />
    </Properties>
    <Methods>
      <Method Name="get_ApplicationId" ReturnType="System.ApplicationId">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationId" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DeploymentId" ReturnType="System.ApplicationId">
        <Parameters />
      </Method>
      <Method Name="set_DeploymentId" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DefaultRequestSet" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="set_DefaultRequestSet" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationEvidence" ReturnType="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationEvidence" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ApplicationSecurityManager">
    <Properties>
      <Property Name="UserApplicationTrusts" Type="System.Security.Policy.ApplicationTrustCollection" />
      <Property Name="ApplicationTrustManager" Type="System.Security.Policy.IApplicationTrustManager" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Policy.ApplicationTrust">
    <Properties>
      <Property Name="ApplicationIdentity" Type="System.ApplicationIdentity" />
      <Property Name="DefaultGrantSet" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="FullTrustAssemblies" Type="System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" />
      <Property Name="IsApplicationTrustedToRun" Type="System.Boolean" />
      <Property Name="Persist" Type="System.Boolean" />
      <Property Name="ExtraInfo" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationIdentity" ReturnType="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationIdentity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DefaultGrantSet" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters />
      </Method>
      <Method Name="set_DefaultGrantSet" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullTrustAssemblies" ReturnType="System.Collections.Generic.IList`1[System.Security.Policy.StrongName]">
        <Parameters />
      </Method>
      <Method Name="get_IsApplicationTrustedToRun" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IsApplicationTrustedToRun" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Persist" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Persist" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ExtraInfo" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_ExtraInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ApplicationTrustCollection">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="Item" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.Policy.ApplicationTrust">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Security.Policy.ApplicationTrust">
        <Parameters>
          <Parameter Name="appFullName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Add" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="trust" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Find" ReturnType="System.Security.Policy.ApplicationTrustCollection">
        <Parameters>
          <Parameter Name="applicationIdentity" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="versionMatch" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="applicationIdentity" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="versionMatch" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="trust" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Security.Policy.ApplicationTrustEnumerator">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ApplicationTrustEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Security.Policy.ApplicationTrust" />
    </Properties>
    <Methods>
      <Method Name="get_Current" ReturnType="System.Security.Policy.ApplicationTrust">
        <Parameters />
      </Method>
      <Method Name="MoveNext" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.CodeGroup">
    <Properties>
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
      <Property Name="MergeLogic" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddChild" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="group" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveChild" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="group" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Children" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="set_Children" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MembershipCondition" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="set_MembershipCondition" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PolicyStatement" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters />
      </Method>
      <Method Name="set_PolicyStatement" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Description" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Description" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Resolve" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSetName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="cg" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="compareChildren" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.Evidence">
    <Properties>
      <Property Name="Locked" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AddHost" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="id" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAssembly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="id" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddAssemblyEvidence" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddHostEvidence" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Locked" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Locked" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Merge" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHostEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetAssemblyEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetAssemblyEvidence" ReturnType="T">
        <Parameters />
      </Method>
      <Method Name="GetHostEvidence" ReturnType="T">
        <Parameters />
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="RemoveType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="t" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.EvidenceBase">
    <Properties />
    <Methods>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.FileCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Resolve" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSetName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.FirstMatchCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Resolve" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.TrustManagerContext">
    <Properties>
      <Property Name="UIContext" Type="System.Security.Policy.TrustManagerUIContext" />
      <Property Name="NoPrompt" Type="System.Boolean" />
      <Property Name="IgnorePersistedDecision" Type="System.Boolean" />
      <Property Name="KeepAlive" Type="System.Boolean" />
      <Property Name="Persist" Type="System.Boolean" />
      <Property Name="PreviousApplicationIdentity" Type="System.ApplicationIdentity" />
    </Properties>
    <Methods>
      <Method Name="get_UIContext" ReturnType="System.Security.Policy.TrustManagerUIContext">
        <Parameters />
      </Method>
      <Method Name="set_UIContext" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NoPrompt" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_NoPrompt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IgnorePersistedDecision" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IgnorePersistedDecision" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeepAlive" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_KeepAlive" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Persist" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Persist" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PreviousApplicationIdentity" ReturnType="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="set_PreviousApplicationIdentity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.CodeConnectAccess">
    <Properties>
      <Property Name="Scheme" Type="System.String" />
      <Property Name="Port" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Scheme" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Port" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.NetCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="ResetConnectAccess" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="AddConnectAccess" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="originScheme" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="connectAccess" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConnectAccessRules" ReturnType="System.Collections.DictionaryEntry[]">
        <Parameters />
      </Method>
      <Method Name="Resolve" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSetName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.PermissionRequestEvidence">
    <Properties>
      <Property Name="RequestedPermissions" Type="System.Security.PermissionSet" />
      <Property Name="OptionalPermissions" Type="System.Security.PermissionSet" />
      <Property Name="DeniedPermissions" Type="System.Security.PermissionSet" />
    </Properties>
    <Methods>
      <Method Name="get_RequestedPermissions" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_OptionalPermissions" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_DeniedPermissions" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.PermissionRequestEvidence">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.PolicyException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Security.Policy.PolicyLevel">
    <Properties>
      <Property Name="Label" Type="System.String" />
      <Property Name="Type" Type="System.Security.PolicyLevelType" />
      <Property Name="StoreLocation" Type="System.String" />
      <Property Name="RootCodeGroup" Type="System.Security.Policy.CodeGroup" />
      <Property Name="NamedPermissionSets" Type="System.Collections.IList" />
      <Property Name="FullTrustAssemblies" Type="System.Collections.IList" />
    </Properties>
    <Methods>
      <Method Name="GetNamedPermissionSet" ReturnType="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Resolve" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Label" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Type" ReturnType="System.Security.PolicyLevelType">
        <Parameters />
      </Method>
      <Method Name="get_StoreLocation" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RootCodeGroup" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="set_RootCodeGroup" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NamedPermissionSets" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="ResolveMatchingCodeGroups" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddFullTrustAssembly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sn" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddFullTrustAssembly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="snMC" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveFullTrustAssembly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sn" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveFullTrustAssembly" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="snMC" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullTrustAssemblies" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="AddNamedPermissionSet" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="permSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveNamedPermissionSet" ReturnType="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="permSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveNamedPermissionSet" ReturnType="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ChangeNamedPermissionSet" ReturnType="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Recover" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.PolicyStatement">
    <Properties>
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="Attributes" Type="System.Security.Policy.PolicyStatementAttribute" />
      <Property Name="AttributeString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_PermissionSet" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="set_PermissionSet" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Security.Policy.PolicyStatementAttribute">
        <Parameters />
      </Method>
      <Method Name="set_Attributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.Site">
    <Properties>
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateIdentityPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.SiteMembershipCondition">
    <Properties>
      <Property Name="Site" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="set_Site" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Site" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.StrongName">
    <Properties>
      <Property Name="PublicKey" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKey" ReturnType="System.Security.Permissions.StrongNamePublicKeyBlob">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" ReturnType="System.Version">
        <Parameters />
      </Method>
      <Method Name="CreateIdentityPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.StrongNameMembershipCondition">
    <Properties>
      <Property Name="PublicKey" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
    </Properties>
    <Methods>
      <Method Name="set_PublicKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PublicKey" ReturnType="System.Security.Permissions.StrongNamePublicKeyBlob">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Version" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Version" ReturnType="System.Version">
        <Parameters />
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.UnionCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Resolve" ReturnType="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.Url">
    <Properties>
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateIdentityPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.UrlMembershipCondition">
    <Properties>
      <Property Name="Url" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Url" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Url" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.Zone">
    <Properties>
      <Property Name="SecurityZone" Type="System.Security.SecurityZone" />
    </Properties>
    <Methods>
      <Method Name="CreateIdentityPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityZone" ReturnType="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.ZoneMembershipCondition">
    <Properties>
      <Property Name="SecurityZone" Type="System.Security.SecurityZone" />
    </Properties>
    <Methods>
      <Method Name="set_SecurityZone" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityZone" ReturnType="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.GacInstalled">
    <Properties />
    <Methods>
      <Method Name="CreateIdentityPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.GacMembershipCondition">
    <Properties />
    <Methods>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.Hash">
    <Properties>
      <Property Name="SHA1" Type="System.Byte[]" />
      <Property Name="SHA256" Type="System.Byte[]" />
      <Property Name="MD5" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SHA1" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_SHA256" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_MD5" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GenerateHash" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="hashAlg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.HashMembershipCondition">
    <Properties>
      <Property Name="HashAlgorithm" Type="System.Security.Cryptography.HashAlgorithm" />
      <Property Name="HashValue" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="set_HashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HashAlgorithm" ReturnType="System.Security.Cryptography.HashAlgorithm">
        <Parameters />
      </Method>
      <Method Name="set_HashValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HashValue" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.Publisher">
    <Properties>
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    </Properties>
    <Methods>
      <Method Name="CreateIdentityPermission" ReturnType="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Certificate" ReturnType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Security.Policy.PublisherMembershipCondition">
    <Properties>
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    </Properties>
    <Methods>
      <Method Name="set_Certificate" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Certificate" ReturnType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Check" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Copy" ReturnType="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToXml" ReturnType="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromXml" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.MissingManifestResourceException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Resources.MissingSatelliteAssemblyException">
    <Properties>
      <Property Name="CultureName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CultureName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.NeutralResourcesLanguageAttribute">
    <Properties>
      <Property Name="CultureName" Type="System.String" />
      <Property Name="Location" Type="System.Resources.UltimateResourceFallbackLocation" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CultureName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Location" ReturnType="System.Resources.UltimateResourceFallbackLocation">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.ResourceManager">
    <Properties>
      <Property Name="BaseName" Type="System.String" />
      <Property Name="IgnoreCase" Type="System.Boolean" />
      <Property Name="ResourceSetType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="get_BaseName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IgnoreCase" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IgnoreCase" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ResourceSetType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="ReleaseAllResources" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetResourceSet" ReturnType="System.Resources.ResourceSet">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="createIfNotExists" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="tryParents" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetStream" ReturnType="System.IO.UnmanagedMemoryStream">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetStream" ReturnType="System.IO.UnmanagedMemoryStream">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.ResourceReader">
    <Properties />
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetResourceData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="resourceName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="resourceType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="resourceData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.ResourceSet">
    <Properties />
    <Methods>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetDefaultReader" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetDefaultWriter" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.ResourceWriter">
    <Properties>
      <Property Name="TypeNameConverter" Type="System.Func`2[System.Type,System.String]" />
    </Properties>
    <Methods>
      <Method Name="get_TypeNameConverter" ReturnType="System.Func`2[System.Type,System.String]">
        <Parameters />
      </Method>
      <Method Name="set_TypeNameConverter" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="closeAfterWrite" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResourceData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="serializedData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Generate" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Resources.SatelliteContractVersionAttribute">
    <Properties>
      <Property Name="Version" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Version" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.Calendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="AddMilliseconds" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="milliseconds" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddDays" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="days" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddHours" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hours" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddMinutes" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minutes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddSeconds" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="seconds" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddWeeks" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="weeks" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetHour" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMilliseconds" ReturnType="System.Double">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMinute" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSecond" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstDayOfWeek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.CharUnicodeInfo">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Globalization.CompareInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="LCID" Type="System.Int32" />
      <Property Name="Version" Type="System.Globalization.SortVersion" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="string2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="string2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="string2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="string2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="string2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="string2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="offset2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsPrefix" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="prefix" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsPrefix" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="prefix" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSuffix" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="suffix" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSuffix" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="suffix" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSortKey" ReturnType="System.Globalization.SortKey">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSortKey" ReturnType="System.Globalization.SortKey">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_LCID" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Version" ReturnType="System.Globalization.SortVersion">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.CultureInfo">
    <Properties>
      <Property Name="CurrentCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="CurrentUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="InstalledUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="DefaultThreadCurrentCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="DefaultThreadCurrentUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="InvariantCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="Parent" Type="System.Globalization.CultureInfo" />
      <Property Name="LCID" Type="System.Int32" />
      <Property Name="KeyboardLayoutId" Type="System.Int32" />
      <Property Name="Name" Type="System.String" />
      <Property Name="IetfLanguageTag" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
      <Property Name="NativeName" Type="System.String" />
      <Property Name="EnglishName" Type="System.String" />
      <Property Name="TwoLetterISOLanguageName" Type="System.String" />
      <Property Name="ThreeLetterISOLanguageName" Type="System.String" />
      <Property Name="ThreeLetterWindowsLanguageName" Type="System.String" />
      <Property Name="CompareInfo" Type="System.Globalization.CompareInfo" />
      <Property Name="TextInfo" Type="System.Globalization.TextInfo" />
      <Property Name="IsNeutralCulture" Type="System.Boolean" />
      <Property Name="CultureTypes" Type="System.Globalization.CultureTypes" />
      <Property Name="NumberFormat" Type="System.Globalization.NumberFormatInfo" />
      <Property Name="DateTimeFormat" Type="System.Globalization.DateTimeFormatInfo" />
      <Property Name="Calendar" Type="System.Globalization.Calendar" />
      <Property Name="OptionalCalendars" Type="System.Globalization.Calendar[]" />
      <Property Name="UseUserOverride" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Parent" ReturnType="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="get_LCID" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyboardLayoutId" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IetfLanguageTag" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_NativeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EnglishName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TwoLetterISOLanguageName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterISOLanguageName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterWindowsLanguageName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CompareInfo" ReturnType="System.Globalization.CompareInfo">
        <Parameters />
      </Method>
      <Method Name="get_TextInfo" ReturnType="System.Globalization.TextInfo">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetFormat" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="formatType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsNeutralCulture" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CultureTypes" ReturnType="System.Globalization.CultureTypes">
        <Parameters />
      </Method>
      <Method Name="get_NumberFormat" ReturnType="System.Globalization.NumberFormatInfo">
        <Parameters />
      </Method>
      <Method Name="set_NumberFormat" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DateTimeFormat" ReturnType="System.Globalization.DateTimeFormatInfo">
        <Parameters />
      </Method>
      <Method Name="set_DateTimeFormat" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ClearCachedData" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Calendar" ReturnType="System.Globalization.Calendar">
        <Parameters />
      </Method>
      <Method Name="get_OptionalCalendars" ReturnType="System.Globalization.Calendar[]">
        <Parameters />
      </Method>
      <Method Name="get_UseUserOverride" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetConsoleFallbackUICulture" ReturnType="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.CultureNotFoundException">
    <Properties>
      <Property Name="InvalidCultureId" Type="System.Nullable`1[System.Int32]" />
      <Property Name="InvalidCultureName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InvalidCultureId" ReturnType="System.Nullable`1[System.Int32]">
        <Parameters />
      </Method>
      <Method Name="get_InvalidCultureName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.DateTimeFormatInfo">
    <Properties>
      <Property Name="InvariantInfo" Type="System.Globalization.DateTimeFormatInfo" />
      <Property Name="CurrentInfo" Type="System.Globalization.DateTimeFormatInfo" />
      <Property Name="AMDesignator" Type="System.String" />
      <Property Name="Calendar" Type="System.Globalization.Calendar" />
      <Property Name="DateSeparator" Type="System.String" />
      <Property Name="FirstDayOfWeek" Type="System.DayOfWeek" />
      <Property Name="CalendarWeekRule" Type="System.Globalization.CalendarWeekRule" />
      <Property Name="FullDateTimePattern" Type="System.String" />
      <Property Name="LongDatePattern" Type="System.String" />
      <Property Name="LongTimePattern" Type="System.String" />
      <Property Name="MonthDayPattern" Type="System.String" />
      <Property Name="PMDesignator" Type="System.String" />
      <Property Name="RFC1123Pattern" Type="System.String" />
      <Property Name="ShortDatePattern" Type="System.String" />
      <Property Name="ShortTimePattern" Type="System.String" />
      <Property Name="SortableDateTimePattern" Type="System.String" />
      <Property Name="TimeSeparator" Type="System.String" />
      <Property Name="UniversalSortableDateTimePattern" Type="System.String" />
      <Property Name="YearMonthPattern" Type="System.String" />
      <Property Name="AbbreviatedDayNames" Type="System.String[]" />
      <Property Name="ShortestDayNames" Type="System.String[]" />
      <Property Name="DayNames" Type="System.String[]" />
      <Property Name="AbbreviatedMonthNames" Type="System.String[]" />
      <Property Name="MonthNames" Type="System.String[]" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="NativeCalendarName" Type="System.String" />
      <Property Name="AbbreviatedMonthGenitiveNames" Type="System.String[]" />
      <Property Name="MonthGenitiveNames" Type="System.String[]" />
    </Properties>
    <Methods>
      <Method Name="GetFormat" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="formatType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_AMDesignator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AMDesignator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Calendar" ReturnType="System.Globalization.Calendar">
        <Parameters />
      </Method>
      <Method Name="set_Calendar" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="eraName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEraName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAbbreviatedEraName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DateSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DateSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FirstDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters />
      </Method>
      <Method Name="set_FirstDayOfWeek" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CalendarWeekRule" ReturnType="System.Globalization.CalendarWeekRule">
        <Parameters />
      </Method>
      <Method Name="set_CalendarWeekRule" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullDateTimePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FullDateTimePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LongDatePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LongDatePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LongTimePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LongTimePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MonthDayPattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_MonthDayPattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PMDesignator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PMDesignator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_RFC1123Pattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ShortDatePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShortDatePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ShortTimePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShortTimePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SortableDateTimePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TimeSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TimeSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UniversalSortableDateTimePattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_YearMonthPattern" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_YearMonthPattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AbbreviatedDayNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AbbreviatedDayNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ShortestDayNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_ShortestDayNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DayNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_DayNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AbbreviatedMonthNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AbbreviatedMonthNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MonthNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_MonthNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAbbreviatedDayName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="dayofweek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetShortestDayName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="dayOfWeek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAllDateTimePatterns" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetAllDateTimePatterns" ReturnType="System.String[]">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="dayofweek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAbbreviatedMonthName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_NativeCalendarName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="SetAllDateTimePatterns" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="patterns" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AbbreviatedMonthGenitiveNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AbbreviatedMonthGenitiveNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MonthGenitiveNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_MonthGenitiveNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.DaylightTime">
    <Properties>
      <Property Name="Start" Type="System.DateTime" />
      <Property Name="End" Type="System.DateTime" />
      <Property Name="Delta" Type="System.TimeSpan" />
    </Properties>
    <Methods>
      <Method Name="get_Start" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_End" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_Delta" ReturnType="System.TimeSpan">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.GregorianCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="CalendarType" Type="System.Globalization.GregorianCalendarTypes" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="get_CalendarType" ReturnType="System.Globalization.GregorianCalendarTypes">
        <Parameters />
      </Method>
      <Method Name="set_CalendarType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.HebrewCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.HijriCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="HijriAdjustment" Type="System.Int32" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="get_HijriAdjustment" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_HijriAdjustment" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.UmAlQuraCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.ChineseLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.EastAsianLunisolarCalendar">
    <Properties>
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Eras" Type="System.Int32[]" />
    </Properties>
    <Methods>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="GetSexagenaryYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCelestialStem" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="sexagenaryYear" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTerrestrialBranch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="sexagenaryYear" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.JapaneseLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.JulianCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.KoreanLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.PersianCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.TaiwanLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.IdnMapping">
    <Properties>
      <Property Name="AllowUnassigned" Type="System.Boolean" />
      <Property Name="UseStd3AsciiRules" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_AllowUnassigned" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AllowUnassigned" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UseStd3AsciiRules" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseStd3AsciiRules" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAscii" ReturnType="System.String">
        <Parameters>
          <Parameter Name="unicode" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAscii" ReturnType="System.String">
        <Parameters>
          <Parameter Name="unicode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAscii" ReturnType="System.String">
        <Parameters>
          <Parameter Name="unicode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUnicode" ReturnType="System.String">
        <Parameters>
          <Parameter Name="ascii" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUnicode" ReturnType="System.String">
        <Parameters>
          <Parameter Name="ascii" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUnicode" ReturnType="System.String">
        <Parameters>
          <Parameter Name="ascii" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.JapaneseCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstDayOfWeek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.KoreanCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstDayOfWeek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.RegionInfo">
    <Properties>
      <Property Name="CurrentRegion" Type="System.Globalization.RegionInfo" />
      <Property Name="Name" Type="System.String" />
      <Property Name="EnglishName" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
      <Property Name="NativeName" Type="System.String" />
      <Property Name="TwoLetterISORegionName" Type="System.String" />
      <Property Name="ThreeLetterISORegionName" Type="System.String" />
      <Property Name="ThreeLetterWindowsRegionName" Type="System.String" />
      <Property Name="IsMetric" Type="System.Boolean" />
      <Property Name="GeoId" Type="System.Int32" />
      <Property Name="CurrencyEnglishName" Type="System.String" />
      <Property Name="CurrencyNativeName" Type="System.String" />
      <Property Name="CurrencySymbol" Type="System.String" />
      <Property Name="ISOCurrencySymbol" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EnglishName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_NativeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TwoLetterISORegionName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterISORegionName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterWindowsRegionName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsMetric" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GeoId" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyEnglishName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyNativeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CurrencySymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ISOCurrencySymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.SortKey">
    <Properties>
      <Property Name="OriginalString" Type="System.String" />
      <Property Name="KeyData" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_OriginalString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_KeyData" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.StringInfo">
    <Properties>
      <Property Name="String" Type="System.String" />
      <Property Name="LengthInTextElements" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_String" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_String" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LengthInTextElements" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="SubstringByTextElements" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startingTextElement" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SubstringByTextElements" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startingTextElement" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="lengthInTextElements" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.TaiwanCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstDayOfWeek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.TextElementEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Object" />
      <Property Name="ElementIndex" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="MoveNext" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Current" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetTextElement" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ElementIndex" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.TextInfo">
    <Properties>
      <Property Name="ANSICodePage" Type="System.Int32" />
      <Property Name="OEMCodePage" Type="System.Int32" />
      <Property Name="MacCodePage" Type="System.Int32" />
      <Property Name="EBCDICCodePage" Type="System.Int32" />
      <Property Name="LCID" Type="System.Int32" />
      <Property Name="CultureName" Type="System.String" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="ListSeparator" Type="System.String" />
      <Property Name="IsRightToLeft" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ANSICodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OEMCodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MacCodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_EBCDICCodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LCID" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CultureName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_ListSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ListSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLower" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLower" ReturnType="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUpper" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUpper" ReturnType="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToTitleCase" ReturnType="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsRightToLeft" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.ThaiBuddhistCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" ReturnType="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="months" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddYears" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="years" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" ReturnType="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstDayOfWeek" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEra" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="month" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="day" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="hour" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minute" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="second" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecond" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="era" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.NumberFormatInfo">
    <Properties>
      <Property Name="InvariantInfo" Type="System.Globalization.NumberFormatInfo" />
      <Property Name="CurrencyDecimalDigits" Type="System.Int32" />
      <Property Name="CurrencyDecimalSeparator" Type="System.String" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CurrencyGroupSizes" Type="System.Int32[]" />
      <Property Name="NumberGroupSizes" Type="System.Int32[]" />
      <Property Name="PercentGroupSizes" Type="System.Int32[]" />
      <Property Name="CurrencyGroupSeparator" Type="System.String" />
      <Property Name="CurrencySymbol" Type="System.String" />
      <Property Name="CurrentInfo" Type="System.Globalization.NumberFormatInfo" />
      <Property Name="NaNSymbol" Type="System.String" />
      <Property Name="CurrencyNegativePattern" Type="System.Int32" />
      <Property Name="NumberNegativePattern" Type="System.Int32" />
      <Property Name="PercentPositivePattern" Type="System.Int32" />
      <Property Name="PercentNegativePattern" Type="System.Int32" />
      <Property Name="NegativeInfinitySymbol" Type="System.String" />
      <Property Name="NegativeSign" Type="System.String" />
      <Property Name="NumberDecimalDigits" Type="System.Int32" />
      <Property Name="NumberDecimalSeparator" Type="System.String" />
      <Property Name="NumberGroupSeparator" Type="System.String" />
      <Property Name="CurrencyPositivePattern" Type="System.Int32" />
      <Property Name="PositiveInfinitySymbol" Type="System.String" />
      <Property Name="PositiveSign" Type="System.String" />
      <Property Name="PercentDecimalDigits" Type="System.Int32" />
      <Property Name="PercentDecimalSeparator" Type="System.String" />
      <Property Name="PercentGroupSeparator" Type="System.String" />
      <Property Name="PercentSymbol" Type="System.String" />
      <Property Name="PerMilleSymbol" Type="System.String" />
      <Property Name="NativeDigits" Type="System.String[]" />
      <Property Name="DigitSubstitution" Type="System.Globalization.DigitShapes" />
    </Properties>
    <Methods>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyDecimalDigits" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyDecimalDigits" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyDecimalSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyDecimalSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyGroupSizes" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyGroupSizes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NumberGroupSizes" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="set_NumberGroupSizes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentGroupSizes" ReturnType="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="set_PercentGroupSizes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyGroupSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyGroupSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencySymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrencySymbol" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NaNSymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NaNSymbol" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyNegativePattern" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyNegativePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NumberNegativePattern" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_NumberNegativePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentPositivePattern" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_PercentPositivePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentNegativePattern" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_PercentNegativePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NegativeInfinitySymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NegativeInfinitySymbol" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NegativeSign" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NegativeSign" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NumberDecimalDigits" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_NumberDecimalDigits" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NumberDecimalSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NumberDecimalSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NumberGroupSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NumberGroupSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyPositivePattern" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyPositivePattern" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PositiveInfinitySymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PositiveInfinitySymbol" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PositiveSign" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PositiveSign" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentDecimalDigits" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_PercentDecimalDigits" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentDecimalSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PercentDecimalSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentGroupSeparator" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PercentGroupSeparator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PercentSymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PercentSymbol" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PerMilleSymbol" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PerMilleSymbol" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NativeDigits" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_NativeDigits" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DigitSubstitution" ReturnType="System.Globalization.DigitShapes">
        <Parameters />
      </Method>
      <Method Name="set_DigitSubstitution" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFormat" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="formatType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Globalization.SortVersion">
    <Properties>
      <Property Name="FullVersion" Type="System.Int32" />
      <Property Name="SortId" Type="System.Guid" />
    </Properties>
    <Methods>
      <Method Name="get_FullVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SortId" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.ConditionalAttribute">
    <Properties>
      <Property Name="ConditionString" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ConditionString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Debugger">
    <Properties>
      <Property Name="IsAttached" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.DebuggerStepThroughAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.DebuggerStepperBoundaryAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.DebuggerHiddenAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.DebuggerNonUserCodeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.DebuggableAttribute">
    <Properties>
      <Property Name="IsJITTrackingEnabled" Type="System.Boolean" />
      <Property Name="IsJITOptimizerDisabled" Type="System.Boolean" />
      <Property Name="DebuggingFlags" Type="System.Diagnostics.DebuggableAttribute+DebuggingModes" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_IsJITTrackingEnabled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsJITOptimizerDisabled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_DebuggingFlags" ReturnType="System.Diagnostics.DebuggableAttribute+DebuggingModes">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.DebuggerBrowsableAttribute">
    <Properties>
      <Property Name="State" Type="System.Diagnostics.DebuggerBrowsableState" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_State" ReturnType="System.Diagnostics.DebuggerBrowsableState">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.DebuggerTypeProxyAttribute">
    <Properties>
      <Property Name="ProxyTypeName" Type="System.String" />
      <Property Name="Target" Type="System.Type" />
      <Property Name="TargetTypeName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ProxyTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Target" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Target" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_TargetTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TargetTypeName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.DebuggerDisplayAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Type" Type="System.String" />
      <Property Name="Target" Type="System.Type" />
      <Property Name="TargetTypeName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Type" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Type" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Target" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Target" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_TargetTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TargetTypeName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.DebuggerVisualizerAttribute">
    <Properties>
      <Property Name="VisualizerObjectSourceTypeName" Type="System.String" />
      <Property Name="VisualizerTypeName" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="Target" Type="System.Type" />
      <Property Name="TargetTypeName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_VisualizerObjectSourceTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_VisualizerTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Description" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Description" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Target" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Target" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="set_TargetTypeName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TargetTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.StackTrace">
    <Properties>
      <Property Name="FrameCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_FrameCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetFrame" ReturnType="System.Diagnostics.StackFrame">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFrames" ReturnType="System.Diagnostics.StackFrame[]">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.StackFrame">
    <Properties />
    <Methods>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="GetNativeOffset" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetILOffset" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetFileName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetFileLineNumber" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetFileColumnNumber" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.SymbolStore.SymDocumentType">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.SymbolStore.SymLanguageType">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.SymbolStore.SymLanguageVendor">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.PureAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractClassAttribute">
    <Properties>
      <Property Name="TypeContainingContracts" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_TypeContainingContracts" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractClassForAttribute">
    <Properties>
      <Property Name="TypeContractsAreFor" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_TypeContractsAreFor" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractInvariantMethodAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractVerificationAttribute">
    <Properties>
      <Property Name="Value" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractAbbreviatorAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractOptionAttribute">
    <Properties>
      <Property Name="Category" Type="System.String" />
      <Property Name="Setting" Type="System.String" />
      <Property Name="Enabled" Type="System.Boolean" />
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Category" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Setting" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Enabled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Contracts.Contract">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Contracts.ContractFailedEventArgs">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Condition" Type="System.String" />
      <Property Name="FailureKind" Type="System.Diagnostics.Contracts.ContractFailureKind" />
      <Property Name="OriginalException" Type="System.Exception" />
      <Property Name="Handled" Type="System.Boolean" />
      <Property Name="Unwind" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Condition" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FailureKind" ReturnType="System.Diagnostics.Contracts.ContractFailureKind">
        <Parameters />
      </Method>
      <Method Name="get_OriginalException" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_Handled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetHandled" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Unwind" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetUnwind" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Contracts.Internal.ContractHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.CodeAnalysis.SuppressMessageAttribute">
    <Properties>
      <Property Name="Category" Type="System.String" />
      <Property Name="CheckId" Type="System.String" />
      <Property Name="Scope" Type="System.String" />
      <Property Name="Target" Type="System.String" />
      <Property Name="MessageId" Type="System.String" />
      <Property Name="Justification" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Category" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CheckId" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Scope" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Scope" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Target" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Target" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MessageId" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_MessageId" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Justification" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Justification" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventSource">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Guid" Type="System.Guid" />
      <Property Name="Settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      <Property Name="CurrentThreadActivityId" Type="System.Guid" />
      <Property Name="ConstructionException" Type="System.Exception" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Guid" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="IsEnabled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsEnabled" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keywords" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsEnabled" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keywords" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="channel" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Settings" ReturnType="System.Diagnostics.Tracing.EventSourceSettings">
        <Parameters />
      </Method>
      <Method Name="get_ConstructionException" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="GetTrait" ReturnType="System.String">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="options" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activityId" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="relatedActivityId" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventListener">
    <Properties />
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="EnableEvents" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnableEvents" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="matchAnyKeyword" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EnableEvents" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="level" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="matchAnyKeyword" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DisableEvents" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventCommandEventArgs">
    <Properties>
      <Property Name="Command" Type="System.Diagnostics.Tracing.EventCommand" />
      <Property Name="Arguments" Type="System.Collections.Generic.IDictionary`2[System.String,System.String]" />
    </Properties>
    <Methods>
      <Method Name="get_Command" ReturnType="System.Diagnostics.Tracing.EventCommand">
        <Parameters />
      </Method>
      <Method Name="get_Arguments" ReturnType="System.Collections.Generic.IDictionary`2[System.String,System.String]">
        <Parameters />
      </Method>
      <Method Name="EnableEvent" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="eventId" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DisableEvent" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="eventId" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventWrittenEventArgs">
    <Properties>
      <Property Name="EventName" Type="System.String" />
      <Property Name="EventId" Type="System.Int32" />
      <Property Name="ActivityId" Type="System.Guid" />
      <Property Name="RelatedActivityId" Type="System.Guid" />
      <Property Name="Payload" Type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Object]" />
      <Property Name="PayloadNames" Type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.String]" />
      <Property Name="EventSource" Type="System.Diagnostics.Tracing.EventSource" />
      <Property Name="Keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      <Property Name="Opcode" Type="System.Diagnostics.Tracing.EventOpcode" />
      <Property Name="Task" Type="System.Diagnostics.Tracing.EventTask" />
      <Property Name="Tags" Type="System.Diagnostics.Tracing.EventTags" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Channel" Type="System.Diagnostics.Tracing.EventChannel" />
      <Property Name="Version" Type="System.Byte" />
      <Property Name="Level" Type="System.Diagnostics.Tracing.EventLevel" />
    </Properties>
    <Methods>
      <Method Name="get_EventName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EventId" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ActivityId" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_RelatedActivityId" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_Payload" ReturnType="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Object]">
        <Parameters />
      </Method>
      <Method Name="get_PayloadNames" ReturnType="System.Collections.ObjectModel.ReadOnlyCollection`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="get_EventSource" ReturnType="System.Diagnostics.Tracing.EventSource">
        <Parameters />
      </Method>
      <Method Name="get_Keywords" ReturnType="System.Diagnostics.Tracing.EventKeywords">
        <Parameters />
      </Method>
      <Method Name="get_Opcode" ReturnType="System.Diagnostics.Tracing.EventOpcode">
        <Parameters />
      </Method>
      <Method Name="get_Task" ReturnType="System.Diagnostics.Tracing.EventTask">
        <Parameters />
      </Method>
      <Method Name="get_Tags" ReturnType="System.Diagnostics.Tracing.EventTags">
        <Parameters />
      </Method>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Channel" ReturnType="System.Diagnostics.Tracing.EventChannel">
        <Parameters />
      </Method>
      <Method Name="get_Version" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_Level" ReturnType="System.Diagnostics.Tracing.EventLevel">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventSourceAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Guid" Type="System.String" />
      <Property Name="LocalizationResources" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Guid" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Guid" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_LocalizationResources" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LocalizationResources" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventAttribute">
    <Properties>
      <Property Name="EventId" Type="System.Int32" />
      <Property Name="Level" Type="System.Diagnostics.Tracing.EventLevel" />
      <Property Name="Keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      <Property Name="Opcode" Type="System.Diagnostics.Tracing.EventOpcode" />
      <Property Name="Task" Type="System.Diagnostics.Tracing.EventTask" />
      <Property Name="Channel" Type="System.Diagnostics.Tracing.EventChannel" />
      <Property Name="Version" Type="System.Byte" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Tags" Type="System.Diagnostics.Tracing.EventTags" />
      <Property Name="ActivityOptions" Type="System.Diagnostics.Tracing.EventActivityOptions" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_EventId" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Level" ReturnType="System.Diagnostics.Tracing.EventLevel">
        <Parameters />
      </Method>
      <Method Name="set_Level" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Keywords" ReturnType="System.Diagnostics.Tracing.EventKeywords">
        <Parameters />
      </Method>
      <Method Name="set_Keywords" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Opcode" ReturnType="System.Diagnostics.Tracing.EventOpcode">
        <Parameters />
      </Method>
      <Method Name="set_Opcode" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Task" ReturnType="System.Diagnostics.Tracing.EventTask">
        <Parameters />
      </Method>
      <Method Name="set_Task" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Channel" ReturnType="System.Diagnostics.Tracing.EventChannel">
        <Parameters />
      </Method>
      <Method Name="set_Channel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Version" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="set_Version" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Message" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Message" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Tags" ReturnType="System.Diagnostics.Tracing.EventTags">
        <Parameters />
      </Method>
      <Method Name="set_Tags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ActivityOptions" ReturnType="System.Diagnostics.Tracing.EventActivityOptions">
        <Parameters />
      </Method>
      <Method Name="set_ActivityOptions" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.NonEventAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventSourceException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventDataAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventFieldAttribute">
    <Properties>
      <Property Name="Tags" Type="System.Diagnostics.Tracing.EventFieldTags" />
      <Property Name="Format" Type="System.Diagnostics.Tracing.EventFieldFormat" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Tags" ReturnType="System.Diagnostics.Tracing.EventFieldTags">
        <Parameters />
      </Method>
      <Method Name="set_Tags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Format" ReturnType="System.Diagnostics.Tracing.EventFieldFormat">
        <Parameters />
      </Method>
      <Method Name="set_Format" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Diagnostics.Tracing.EventIgnoreAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Collections.CaseInsensitiveComparer">
    <Properties>
      <Property Name="Default" Type="System.Collections.CaseInsensitiveComparer" />
      <Property Name="DefaultInvariant" Type="System.Collections.CaseInsensitiveComparer" />
    </Properties>
    <Methods>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="a" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="b" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.CaseInsensitiveHashCodeProvider">
    <Properties>
      <Property Name="Default" Type="System.Collections.CaseInsensitiveHashCodeProvider" />
      <Property Name="DefaultInvariant" Type="System.Collections.CaseInsensitiveHashCodeProvider" />
    </Properties>
    <Methods>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.CollectionBase">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="RemoveAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.DictionaryBase">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.ReadOnlyCollectionBase">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Queue">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Enqueue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="Dequeue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Peek" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToArray" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="TrimToSize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.ArrayList">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Add" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InsertRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reverse" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reverse" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRange" ReturnType="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToArray" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="ToArray" ReturnType="System.Array">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrimToSize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.BitArray">
    <Properties>
      <Property Name="Item" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Get" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Set" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetAll" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="And" ReturnType="System.Collections.BitArray">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Or" ReturnType="System.Collections.BitArray">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Xor" ReturnType="System.Collections.BitArray">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Not" ReturnType="System.Collections.BitArray">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Length" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Stack">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="Peek" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Pop" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Push" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToArray" ReturnType="System.Object[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Comparer">
    <Properties />
    <Methods>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="a" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="b" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Hashtable">
    <Properties>
      <Property Name="Item" Type="System.Object" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContainsKey" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContainsValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Keys" ReturnType="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OnDeserialization" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.SortedList">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Capacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Keys" ReturnType="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContainsKey" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContainsValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByIndex" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetKey" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetKeyList" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="GetValueList" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOfKey" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOfValue" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetByIndex" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrimToSize" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.StructuralComparisons">
    <Properties>
      <Property Name="StructuralComparer" Type="System.Collections.IComparer" />
      <Property Name="StructuralEqualityComparer" Type="System.Collections.IEqualityComparer" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Collections.Concurrent.ConcurrentStack`1">
    <Properties>
      <Property Name="IsEmpty" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Push" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryPop" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="get_IsEmpty" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PushRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="items" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="PushRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="items" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryPeek" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryPopRange" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="items" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryPopRange" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="items" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToArray" ReturnType="T[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Concurrent.ConcurrentDictionary`2">
    <Properties>
      <Property Name="Item" Type="TValue" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsEmpty" Type="System.Boolean" />
      <Property Name="Keys" Type="System.Collections.Generic.ICollection`1[TKey]" />
      <Property Name="Values" Type="System.Collections.Generic.ICollection`1[TValue]" />
    </Properties>
    <Methods>
      <Method Name="TryAdd" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContainsKey" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryGetValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]">
        <Parameters />
      </Method>
      <Method Name="GetOrAdd" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="valueFactory" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryRemove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryUpdate" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparisonValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToArray" ReturnType="System.Collections.Generic.KeyValuePair`2[TKey,TValue][]">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOrAdd" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddOrUpdate" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="addValueFactory" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="updateValueFactory" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddOrUpdate" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="addValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="updateValueFactory" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsEmpty" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Keys" ReturnType="System.Collections.Generic.ICollection`1[TKey]">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.Generic.ICollection`1[TValue]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Concurrent.ConcurrentQueue`1">
    <Properties>
      <Property Name="IsEmpty" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Enqueue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryDequeue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsEmpty" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToArray" ReturnType="T[]">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="TryPeek" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Concurrent.Partitioner`1">
    <Properties>
      <Property Name="SupportsDynamicPartitions" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetPartitions" ReturnType="System.Collections.Generic.IList`1[System.Collections.Generic.IEnumerator`1[TSource]]">
        <Parameters>
          <Parameter Name="partitionCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SupportsDynamicPartitions" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetDynamicPartitions" ReturnType="System.Collections.Generic.IEnumerable`1[TSource]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Concurrent.OrderablePartitioner`1">
    <Properties>
      <Property Name="KeysOrderedInEachPartition" Type="System.Boolean" />
      <Property Name="KeysOrderedAcrossPartitions" Type="System.Boolean" />
      <Property Name="KeysNormalized" Type="System.Boolean" />
      <Property Name="SupportsDynamicPartitions" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetOrderablePartitions" ReturnType="System.Collections.Generic.IList`1[System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[System.Int64,TSource]]]">
        <Parameters>
          <Parameter Name="partitionCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetOrderableDynamicPartitions" ReturnType="System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.Int64,TSource]]">
        <Parameters />
      </Method>
      <Method Name="get_KeysOrderedInEachPartition" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_KeysOrderedAcrossPartitions" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_KeysNormalized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetPartitions" ReturnType="System.Collections.Generic.IList`1[System.Collections.Generic.IEnumerator`1[TSource]]">
        <Parameters>
          <Parameter Name="partitionCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDynamicPartitions" ReturnType="System.Collections.Generic.IEnumerable`1[TSource]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Concurrent.Partitioner">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Collections.ObjectModel.Collection`1">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="T">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.ObjectModel.ReadOnlyCollection`1">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="T">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.ObjectModel.ReadOnlyDictionary`2">
    <Properties>
      <Property Name="Keys" Type="System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection[TKey,TValue]" />
      <Property Name="Values" Type="System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection[TKey,TValue]" />
      <Property Name="Item" Type="TValue" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Keys" ReturnType="System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]">
        <Parameters />
      </Method>
      <Method Name="ContainsKey" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryGetValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.ObjectModel.KeyedCollection`2">
    <Properties>
      <Property Name="Comparer" Type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
      <Property Name="Item" Type="TItem" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="TItem" />
    </Properties>
    <Methods>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Comparer" ReturnType="System.Collections.Generic.IEqualityComparer`1[TKey]">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="TItem">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Generic.Comparer`1">
    <Properties>
      <Property Name="Default" Type="System.Collections.Generic.Comparer`1[T]" />
    </Properties>
    <Methods>
      <Method Name="Compare" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Generic.Dictionary`2">
    <Properties>
      <Property Name="Comparer" Type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Keys" Type="System.Collections.Generic.Dictionary`2+KeyCollection[TKey,TValue]" />
      <Property Name="Values" Type="System.Collections.Generic.Dictionary`2+ValueCollection[TKey,TValue]" />
      <Property Name="Item" Type="TValue" />
    </Properties>
    <Methods>
      <Method Name="get_Comparer" ReturnType="System.Collections.Generic.IEqualityComparer`1[TKey]">
        <Parameters />
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Keys" ReturnType="System.Collections.Generic.Dictionary`2+KeyCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.Generic.Dictionary`2+ValueCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ContainsKey" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.Dictionary`2+Enumerator[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="Remove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryGetValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContainsValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OnDeserialization" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Generic.EqualityComparer`1">
    <Properties>
      <Property Name="Default" Type="System.Collections.Generic.EqualityComparer`1[T]" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="x" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="y" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Collections.Generic.KeyNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Collections.Generic.List`1">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="T">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="collection" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AsReadOnly" ReturnType="System.Collections.ObjectModel.ReadOnlyCollection`1[T]">
        <Parameters />
      </Method>
      <Method Name="BinarySearch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertAll" ReturnType="System.Collections.Generic.List`1[TOutput]">
        <Parameters>
          <Parameter Name="converter" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ForEach" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.Generic.List`1+Enumerator[T]">
        <Parameters />
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="InsertRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="collection" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAll" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reverse" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reverse" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Sort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="comparison" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToArray" ReturnType="T[]">
        <Parameters />
      </Method>
      <Method Name="TrimExcess" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BinarySearch" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="comparer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Exists" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Find" ReturnType="T">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindAll" ReturnType="System.Collections.Generic.List`1[T]">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindLast" ReturnType="T">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRange" ReturnType="System.Collections.Generic.List`1[T]">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrueForAll" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.AbandonedMutexException">
    <Properties>
      <Property Name="Mutex" Type="System.Threading.Mutex" />
      <Property Name="MutexIndex" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Mutex" ReturnType="System.Threading.Mutex">
        <Parameters />
      </Method>
      <Method Name="get_MutexIndex" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.AsyncLocal`1">
    <Properties>
      <Property Name="Value" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="T">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.AutoResetEvent">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.SendOrPostCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.SynchronizationContext">
    <Properties>
      <Property Name="Current" Type="System.Threading.SynchronizationContext" />
    </Properties>
    <Methods>
      <Method Name="IsWaitNotificationRequired" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Send" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="d" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Post" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="d" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OperationStarted" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="OperationCompleted" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="waitAll" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateCopy" ReturnType="System.Threading.SynchronizationContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.CompressedStack">
    <Properties />
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateCopy" ReturnType="System.Threading.CompressedStack">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.EventWaitHandle">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods>
      <Method Name="Reset" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Set" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.EventWaitHandleSecurity">
        <Parameters />
      </Method>
      <Method Name="SetAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="eventSecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ContextCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ExecutionContext">
    <Properties />
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="CreateCopy" ReturnType="System.Threading.ExecutionContext">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Interlocked">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.HostExecutionContext">
    <Properties />
    <Methods>
      <Method Name="CreateCopy" ReturnType="System.Threading.HostExecutionContext">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="disposing" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.HostExecutionContextManager">
    <Properties />
    <Methods>
      <Method Name="Revert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="previousState" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Capture" ReturnType="System.Threading.HostExecutionContext">
        <Parameters />
      </Method>
      <Method Name="SetHostExecutionContext" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="hostExecutionContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.LockRecursionException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.ManualResetEvent">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.Monitor">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.Mutex">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods>
      <Method Name="ReleaseMutex" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" ReturnType="System.Security.AccessControl.MutexSecurity">
        <Parameters />
      </Method>
      <Method Name="SetAccessControl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mutexSecurity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Overlapped">
    <Properties>
      <Property Name="AsyncResult" Type="System.IAsyncResult" />
      <Property Name="OffsetLow" Type="System.Int32" />
      <Property Name="OffsetHigh" Type="System.Int32" />
      <Property Name="EventHandle" Type="System.Int32" />
      <Property Name="EventHandleIntPtr" Type="System.IntPtr" />
    </Properties>
    <Methods>
      <Method Name="get_AsyncResult" ReturnType="System.IAsyncResult">
        <Parameters />
      </Method>
      <Method Name="set_AsyncResult" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_OffsetLow" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_OffsetLow" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_OffsetHigh" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_OffsetHigh" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_EventHandle" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_EventHandle" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_EventHandleIntPtr" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="set_EventHandleIntPtr" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Pack" ReturnType="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Pack" ReturnType="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="userData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UnsafePack" ReturnType="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UnsafePack" ReturnType="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="userData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ParameterizedThreadStart">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ReaderWriterLock">
    <Properties>
      <Property Name="IsReaderLockHeld" Type="System.Boolean" />
      <Property Name="IsWriterLockHeld" Type="System.Boolean" />
      <Property Name="WriterSeqNum" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsReaderLockHeld" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsWriterLockHeld" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_WriterSeqNum" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="AcquireReaderLock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AcquireReaderLock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AcquireWriterLock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AcquireWriterLock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReleaseReaderLock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ReleaseWriterLock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="UpgradeToWriterLock" ReturnType="System.Threading.LockCookie">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UpgradeToWriterLock" ReturnType="System.Threading.LockCookie">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DowngradeFromWriterLock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="lockCookie" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReleaseLock" ReturnType="System.Threading.LockCookie">
        <Parameters />
      </Method>
      <Method Name="RestoreLock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="lockCookie" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AnyWritersSince" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="seqNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.SemaphoreFullException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.SynchronizationLockException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.Thread">
    <Properties>
      <Property Name="ManagedThreadId" Type="System.Int32" />
      <Property Name="ExecutionContext" Type="System.Threading.ExecutionContext" />
      <Property Name="Priority" Type="System.Threading.ThreadPriority" />
      <Property Name="IsAlive" Type="System.Boolean" />
      <Property Name="IsThreadPoolThread" Type="System.Boolean" />
      <Property Name="CurrentThread" Type="System.Threading.Thread" />
      <Property Name="IsBackground" Type="System.Boolean" />
      <Property Name="ThreadState" Type="System.Threading.ThreadState" />
      <Property Name="ApartmentState" Type="System.Threading.ApartmentState" />
      <Property Name="CurrentUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="CurrentCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="CurrentContext" Type="System.Runtime.Remoting.Contexts.Context" />
      <Property Name="CurrentPrincipal" Type="System.Security.Principal.IPrincipal" />
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ManagedThreadId" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Start" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Start" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parameter" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ExecutionContext" ReturnType="System.Threading.ExecutionContext">
        <Parameters />
      </Method>
      <Method Name="SetCompressedStack" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="stack" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCompressedStack" ReturnType="System.Threading.CompressedStack">
        <Parameters />
      </Method>
      <Method Name="Abort" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="stateInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Abort" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Suspend" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Resume" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Interrupt" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Priority" ReturnType="System.Threading.ThreadPriority">
        <Parameters />
      </Method>
      <Method Name="set_Priority" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsAlive" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsThreadPoolThread" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Join" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Join" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Join" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DisableComObjectEagerCleanup" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_IsBackground" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IsBackground" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ThreadState" ReturnType="System.Threading.ThreadState">
        <Parameters />
      </Method>
      <Method Name="get_ApartmentState" ReturnType="System.Threading.ApartmentState">
        <Parameters />
      </Method>
      <Method Name="set_ApartmentState" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetApartmentState" ReturnType="System.Threading.ApartmentState">
        <Parameters />
      </Method>
      <Method Name="TrySetApartmentState" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetApartmentState" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentUICulture" ReturnType="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CurrentUICulture" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentCulture" ReturnType="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CurrentCulture" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ThreadAbortException">
    <Properties>
      <Property Name="ExceptionState" Type="System.Object" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ExceptionState" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ThreadInterruptedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.RegisteredWaitHandle">
    <Properties />
    <Methods>
      <Method Name="Unregister" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.WaitCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.WaitOrTimerCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="timedOut" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="timedOut" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.IOCompletionCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="errorCode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pOVERLAP" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="errorCode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pOVERLAP" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ThreadPool">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.ThreadStart">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ThreadStateException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.ThreadStartException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.Timeout">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.TimerCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Timer">
    <Properties />
    <Methods>
      <Method Name="Change" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="period" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Change" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="period" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Change" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="period" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Change" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="period" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="notifyObject" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Volatile">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.WaitHandle">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods>
      <Method Name="get_Handle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="set_Handle" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SafeWaitHandle" ReturnType="Microsoft.Win32.SafeHandles.SafeWaitHandle">
        <Parameters />
      </Method>
      <Method Name="set_SafeWaitHandle" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="exitContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="exitContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="WaitOne" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.WaitHandleExtensions">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.WaitHandleCannotBeOpenedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.CountdownEvent">
    <Properties>
      <Property Name="CurrentCount" Type="System.Int32" />
      <Property Name="InitialCount" Type="System.Int32" />
      <Property Name="IsSet" Type="System.Boolean" />
      <Property Name="WaitHandle" Type="System.Threading.WaitHandle" />
    </Properties>
    <Methods>
      <Method Name="get_CurrentCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_InitialCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsSet" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_WaitHandle" ReturnType="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Signal" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Signal" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="signalCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddCount" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="TryAddCount" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="AddCount" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="signalCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TryAddCount" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="signalCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.LazyInitializer">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.ThreadLocal`1">
    <Properties>
      <Property Name="Value" Type="T" />
      <Property Name="Values" Type="System.Collections.Generic.IList`1[T]" />
      <Property Name="IsValueCreated" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="T">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.Generic.IList`1[T]">
        <Parameters />
      </Method>
      <Method Name="get_IsValueCreated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.SemaphoreSlim">
    <Properties>
      <Property Name="CurrentCount" Type="System.Int32" />
      <Property Name="AvailableWaitHandle" Type="System.Threading.WaitHandle" />
    </Properties>
    <Methods>
      <Method Name="get_CurrentCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_AvailableWaitHandle" ReturnType="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="WaitAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" ReturnType="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" ReturnType="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" ReturnType="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" ReturnType="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Release" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Release" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="releaseCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.ManualResetEventSlim">
    <Properties>
      <Property Name="WaitHandle" Type="System.Threading.WaitHandle" />
      <Property Name="IsSet" Type="System.Boolean" />
      <Property Name="SpinCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_WaitHandle" ReturnType="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="get_IsSet" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SpinCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Set" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.CancellationTokenSource">
    <Properties>
      <Property Name="IsCancellationRequested" Type="System.Boolean" />
      <Property Name="Token" Type="System.Threading.CancellationToken" />
    </Properties>
    <Methods>
      <Method Name="get_IsCancellationRequested" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Token" ReturnType="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="Cancel" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Cancel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="throwOnFirstException" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CancelAfter" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="delay" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CancelAfter" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="millisecondsDelay" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.Task`1">
    <Properties>
      <Property Name="Result" Type="TResult" />
      <Property Name="Factory" Type="System.Threading.Tasks.TaskFactory`1[TResult]" />
      <Property Name="Id" Type="System.Int32" />
      <Property Name="Exception" Type="System.AggregateException" />
      <Property Name="Status" Type="System.Threading.Tasks.TaskStatus" />
      <Property Name="IsCanceled" Type="System.Boolean" />
      <Property Name="IsCompleted" Type="System.Boolean" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="AsyncState" Type="System.Object" />
      <Property Name="IsFaulted" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Result" ReturnType="TResult">
        <Parameters />
      </Method>
      <Method Name="GetAwaiter" ReturnType="System.Runtime.CompilerServices.TaskAwaiter`1[TResult]">
        <Parameters />
      </Method>
      <Method Name="ConfigureAwait" ReturnType="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1[TResult]">
        <Parameters>
          <Parameter Name="continueOnCapturedContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.TaskFactory`1">
    <Properties>
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="ContinuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
    </Properties>
    <Methods>
      <Method Name="get_CancellationToken" ReturnType="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="get_Scheduler" ReturnType="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_CreationOptions" ReturnType="System.Threading.Tasks.TaskCreationOptions">
        <Parameters />
      </Method>
      <Method Name="get_ContinuationOptions" ReturnType="System.Threading.Tasks.TaskContinuationOptions">
        <Parameters />
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.ParallelOptions">
    <Properties>
      <Property Name="TaskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="MaxDegreeOfParallelism" Type="System.Int32" />
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
    </Properties>
    <Methods>
      <Method Name="get_TaskScheduler" ReturnType="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="set_TaskScheduler" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MaxDegreeOfParallelism" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_MaxDegreeOfParallelism" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CancellationToken" ReturnType="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="set_CancellationToken" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.Parallel">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Threading.Tasks.ParallelLoopState">
    <Properties>
      <Property Name="ShouldExitCurrentIteration" Type="System.Boolean" />
      <Property Name="IsStopped" Type="System.Boolean" />
      <Property Name="IsExceptional" Type="System.Boolean" />
      <Property Name="LowestBreakIteration" Type="System.Nullable`1[System.Int64]" />
    </Properties>
    <Methods>
      <Method Name="get_ShouldExitCurrentIteration" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsStopped" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsExceptional" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_LowestBreakIteration" ReturnType="System.Nullable`1[System.Int64]">
        <Parameters />
      </Method>
      <Method Name="Stop" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Break" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.Task">
    <Properties>
      <Property Name="Id" Type="System.Int32" />
      <Property Name="CurrentId" Type="System.Nullable`1[System.Int32]" />
      <Property Name="Exception" Type="System.AggregateException" />
      <Property Name="Status" Type="System.Threading.Tasks.TaskStatus" />
      <Property Name="IsCanceled" Type="System.Boolean" />
      <Property Name="IsCompleted" Type="System.Boolean" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="AsyncState" Type="System.Object" />
      <Property Name="Factory" Type="System.Threading.Tasks.TaskFactory" />
      <Property Name="CompletedTask" Type="System.Threading.Tasks.Task" />
      <Property Name="IsFaulted" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Start" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Start" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RunSynchronously" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="RunSynchronously" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Id" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Exception" ReturnType="System.AggregateException">
        <Parameters />
      </Method>
      <Method Name="get_Status" ReturnType="System.Threading.Tasks.TaskStatus">
        <Parameters />
      </Method>
      <Method Name="get_IsCanceled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsCompleted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CreationOptions" ReturnType="System.Threading.Tasks.TaskCreationOptions">
        <Parameters />
      </Method>
      <Method Name="get_AsyncState" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsFaulted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetAwaiter" ReturnType="System.Runtime.CompilerServices.TaskAwaiter">
        <Parameters />
      </Method>
      <Method Name="ConfigureAwait" ReturnType="System.Runtime.CompilerServices.ConfiguredTaskAwaitable">
        <Parameters>
          <Parameter Name="continueOnCapturedContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Wait" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.TaskCanceledException">
    <Properties>
      <Property Name="Task" Type="System.Threading.Tasks.Task" />
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Task" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.TaskSchedulerException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Threading.Tasks.TaskFactory">
    <Properties>
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="ContinuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
    </Properties>
    <Methods>
      <Method Name="get_CancellationToken" ReturnType="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="get_Scheduler" ReturnType="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_CreationOptions" ReturnType="System.Threading.Tasks.TaskCreationOptions">
        <Parameters />
      </Method>
      <Method Name="get_ContinuationOptions" ReturnType="System.Threading.Tasks.TaskContinuationOptions">
        <Parameters />
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StartNew" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg3" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="creationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationFunction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" ReturnType="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationAction" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="continuationOptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="scheduler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.TaskScheduler">
    <Properties>
      <Property Name="MaximumConcurrencyLevel" Type="System.Int32" />
      <Property Name="Default" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="Current" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="Id" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MaximumConcurrencyLevel" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Id" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
    <Properties>
      <Property Name="Observed" Type="System.Boolean" />
      <Property Name="Exception" Type="System.AggregateException" />
    </Properties>
    <Methods>
      <Method Name="SetObserved" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Observed" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Exception" ReturnType="System.AggregateException">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.TaskCompletionSource`1">
    <Properties>
      <Property Name="Task" Type="System.Threading.Tasks.Task`1[TResult]" />
    </Properties>
    <Methods>
      <Method Name="get_Task" ReturnType="System.Threading.Tasks.Task`1[TResult]">
        <Parameters />
      </Method>
      <Method Name="TrySetException" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="exception" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrySetException" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="exception" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrySetResult" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetResult" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TrySetCanceled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TrySetCanceled" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCanceled" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
    <Properties>
      <Property Name="Completion" Type="System.Threading.Tasks.Task" />
      <Property Name="ConcurrentScheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="ExclusiveScheduler" Type="System.Threading.Tasks.TaskScheduler" />
    </Properties>
    <Methods>
      <Method Name="Complete" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Completion" ReturnType="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="get_ConcurrentScheduler" ReturnType="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_ExclusiveScheduler" ReturnType="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AmbiguousMatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Reflection.ModuleResolveEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Reflection.Module">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Reflection.Module">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Assembly">
    <Properties>
      <Property Name="CodeBase" Type="System.String" />
      <Property Name="EscapedCodeBase" Type="System.String" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="EntryPoint" Type="System.Reflection.MethodInfo" />
      <Property Name="ExportedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="DefinedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" />
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="IsFullyTrusted" Type="System.Boolean" />
      <Property Name="SecurityRuleSet" Type="System.Security.SecurityRuleSet" />
      <Property Name="ManifestModule" Type="System.Reflection.Module" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="ReflectionOnly" Type="System.Boolean" />
      <Property Name="Modules" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Module]" />
      <Property Name="Location" Type="System.String" />
      <Property Name="ImageRuntimeVersion" Type="System.String" />
      <Property Name="GlobalAssemblyCache" Type="System.Boolean" />
      <Property Name="HostContext" Type="System.Int64" />
      <Property Name="IsDynamic" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="add_ModuleResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="remove_ModuleResolve" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CodeBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EscapedCodeBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetName" ReturnType="System.Reflection.AssemblyName">
        <Parameters />
      </Method>
      <Method Name="GetName" ReturnType="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="copiedName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EntryPoint" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnError" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnError" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ExportedTypes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Type]">
        <Parameters />
      </Method>
      <Method Name="GetExportedTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_DefinedTypes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]">
        <Parameters />
      </Method>
      <Method Name="GetTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetManifestResourceStream" ReturnType="System.IO.Stream">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceStream" ReturnType="System.IO.Stream">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="version" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Evidence" ReturnType="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSet" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_IsFullyTrusted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SecurityRuleSet" ReturnType="System.Security.SecurityRuleSet">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ManifestModule" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="get_ReflectionOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="LoadModule" ReturnType="System.Reflection.Module">
        <Parameters>
          <Parameter Name="moduleName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rawModule" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="LoadModule" ReturnType="System.Reflection.Module">
        <Parameters>
          <Parameter Name="moduleName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rawModule" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="rawSymbolStore" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Modules" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.Module]">
        <Parameters />
      </Method>
      <Method Name="GetLoadedModules" ReturnType="System.Reflection.Module[]">
        <Parameters />
      </Method>
      <Method Name="GetLoadedModules" ReturnType="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetModules" ReturnType="System.Reflection.Module[]">
        <Parameters />
      </Method>
      <Method Name="GetModules" ReturnType="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetModule" ReturnType="System.Reflection.Module">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFile" ReturnType="System.IO.FileStream">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" ReturnType="System.IO.FileStream[]">
        <Parameters />
      </Method>
      <Method Name="GetFiles" ReturnType="System.IO.FileStream[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetReferencedAssemblies" ReturnType="System.Reflection.AssemblyName[]">
        <Parameters />
      </Method>
      <Method Name="GetManifestResourceInfo" ReturnType="System.Reflection.ManifestResourceInfo">
        <Parameters>
          <Parameter Name="resourceName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Location" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ImageRuntimeVersion" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_GlobalAssemblyCache" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HostContext" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_IsDynamic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyCopyrightAttribute">
    <Properties>
      <Property Name="Copyright" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Copyright" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyTrademarkAttribute">
    <Properties>
      <Property Name="Trademark" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Trademark" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyProductAttribute">
    <Properties>
      <Property Name="Product" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Product" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyCompanyAttribute">
    <Properties>
      <Property Name="Company" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Company" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyDescriptionAttribute">
    <Properties>
      <Property Name="Description" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Description" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyTitleAttribute">
    <Properties>
      <Property Name="Title" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Title" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyConfigurationAttribute">
    <Properties>
      <Property Name="Configuration" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Configuration" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyDefaultAliasAttribute">
    <Properties>
      <Property Name="DefaultAlias" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultAlias" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyInformationalVersionAttribute">
    <Properties>
      <Property Name="InformationalVersion" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_InformationalVersion" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyFileVersionAttribute">
    <Properties>
      <Property Name="Version" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Version" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyCultureAttribute">
    <Properties>
      <Property Name="Culture" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Culture" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyVersionAttribute">
    <Properties>
      <Property Name="Version" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Version" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyKeyFileAttribute">
    <Properties>
      <Property Name="KeyFile" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_KeyFile" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyDelaySignAttribute">
    <Properties>
      <Property Name="DelaySign" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DelaySign" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyAlgorithmIdAttribute">
    <Properties>
      <Property Name="AlgorithmId" Type="System.UInt32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AlgorithmId" ReturnType="System.UInt32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyFlagsAttribute">
    <Properties>
      <Property Name="Flags" Type="System.UInt32" />
      <Property Name="AssemblyFlags" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.UInt32">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyFlags" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyMetadataAttribute">
    <Properties>
      <Property Name="Key" Type="System.String" />
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Key" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblySignatureKeyAttribute">
    <Properties>
      <Property Name="PublicKey" Type="System.String" />
      <Property Name="Countersignature" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKey" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Countersignature" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyKeyNameAttribute">
    <Properties>
      <Property Name="KeyName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_KeyName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyName">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="CultureInfo" Type="System.Globalization.CultureInfo" />
      <Property Name="CultureName" Type="System.String" />
      <Property Name="CodeBase" Type="System.String" />
      <Property Name="EscapedCodeBase" Type="System.String" />
      <Property Name="ProcessorArchitecture" Type="System.Reflection.ProcessorArchitecture" />
      <Property Name="ContentType" Type="System.Reflection.AssemblyContentType" />
      <Property Name="Flags" Type="System.Reflection.AssemblyNameFlags" />
      <Property Name="HashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      <Property Name="VersionCompatibility" Type="System.Configuration.Assemblies.AssemblyVersionCompatibility" />
      <Property Name="KeyPair" Type="System.Reflection.StrongNameKeyPair" />
      <Property Name="FullName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Version" ReturnType="System.Version">
        <Parameters />
      </Method>
      <Method Name="set_Version" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CultureInfo" ReturnType="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CultureInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CultureName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CultureName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CodeBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CodeBase" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_EscapedCodeBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ProcessorArchitecture" ReturnType="System.Reflection.ProcessorArchitecture">
        <Parameters />
      </Method>
      <Method Name="set_ProcessorArchitecture" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ContentType" ReturnType="System.Reflection.AssemblyContentType">
        <Parameters />
      </Method>
      <Method Name="set_ContentType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetPublicKey" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetPublicKey" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="publicKey" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPublicKeyToken" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetPublicKeyToken" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="publicKeyToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" ReturnType="System.Reflection.AssemblyNameFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HashAlgorithm" ReturnType="System.Configuration.Assemblies.AssemblyHashAlgorithm">
        <Parameters />
      </Method>
      <Method Name="set_HashAlgorithm" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_VersionCompatibility" ReturnType="System.Configuration.Assemblies.AssemblyVersionCompatibility">
        <Parameters />
      </Method>
      <Method Name="set_VersionCompatibility" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_KeyPair" ReturnType="System.Reflection.StrongNameKeyPair">
        <Parameters />
      </Method>
      <Method Name="set_KeyPair" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="OnDeserialization" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.AssemblyNameProxy">
    <Properties />
    <Methods>
      <Method Name="GetAssemblyName" ReturnType="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.CustomAttributeExtensions">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.CustomAttributeFormatException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Reflection.Binder">
    <Properties />
    <Methods>
      <Method Name="BindToMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="names" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BindToField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SelectMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SelectProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="match" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="indexes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ChangeType" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReorderArgumentArray" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ConstructorInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.CustomAttributeData">
    <Properties>
      <Property Name="AttributeType" Type="System.Type" />
      <Property Name="Constructor" Type="System.Reflection.ConstructorInfo" />
      <Property Name="ConstructorArguments" Type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeTypedArgument]" />
      <Property Name="NamedArguments" Type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeNamedArgument]" />
    </Properties>
    <Methods>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AttributeType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Constructor" ReturnType="System.Reflection.ConstructorInfo">
        <Parameters />
      </Method>
      <Method Name="get_ConstructorArguments" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeTypedArgument]">
        <Parameters />
      </Method>
      <Method Name="get_NamedArguments" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeNamedArgument]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.DefaultMemberAttribute">
    <Properties>
      <Property Name="MemberName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MemberName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.EventInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="Attributes" Type="System.Reflection.EventAttributes" />
      <Property Name="AddMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="RemoveMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="RaiseMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="EventHandlerType" Type="System.Type" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsMulticast" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="GetOtherMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAddMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRemoveMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRaiseMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.EventAttributes">
        <Parameters />
      </Method>
      <Method Name="get_AddMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_RemoveMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_RaiseMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetOtherMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetAddMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetRemoveMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetRaiseMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="AddEventHandler" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_EventHandlerType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMulticast" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.FieldInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="FieldHandle" Type="System.RuntimeFieldHandle" />
      <Property Name="FieldType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.FieldAttributes" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsInitOnly" Type="System.Boolean" />
      <Property Name="IsLiteral" Type="System.Boolean" />
      <Property Name="IsNotSerialized" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsPinvokeImpl" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="GetRequiredCustomModifiers" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetOptionalCustomModifiers" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="SetValueDirect" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValueDirect" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FieldHandle" ReturnType="System.RuntimeFieldHandle">
        <Parameters />
      </Method>
      <Method Name="get_FieldType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRawConstantValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.FieldAttributes">
        <Parameters />
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsPublic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPrivate" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamily" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyAndAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyOrAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsStatic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInitOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsLiteral" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNotSerialized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPinvokeImpl" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.IntrospectionExtensions">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.RuntimeReflectionExtensions">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.InvalidFilterCriteriaException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Reflection.ManifestResourceInfo">
    <Properties>
      <Property Name="ReferencedAssembly" Type="System.Reflection.Assembly" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="ResourceLocation" Type="System.Reflection.ResourceLocation" />
    </Properties>
    <Methods>
      <Method Name="get_ReferencedAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_FileName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ResourceLocation" ReturnType="System.Reflection.ResourceLocation">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.MemberFilter">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.MemberInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.MethodBase">
    <Properties>
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetParameters" ReturnType="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_MethodImplementationFlags" ReturnType="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="GetMethodImplementationFlags" ReturnType="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" ReturnType="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CallingConvention" ReturnType="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericMethodDefinition" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericMethod" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsPublic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPrivate" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamily" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyAndAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyOrAssembly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsStatic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFinal" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsVirtual" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsHideBySig" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAbstract" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructor" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetMethodBody" ReturnType="System.Reflection.MethodBody">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.MethodInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="ReturnParameter" Type="System.Reflection.ParameterInfo" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.Reflection.ICustomAttributeProvider" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="get_ReturnType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReturnParameter" ReturnType="System.Reflection.ParameterInfo">
        <Parameters />
      </Method>
      <Method Name="get_ReturnTypeCustomAttributes" ReturnType="System.Reflection.ICustomAttributeProvider">
        <Parameters />
      </Method>
      <Method Name="GetBaseDefinition" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetGenericMethodDefinition" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="MakeGenericMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" ReturnType="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" ReturnType="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Missing">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.Module">
    <Properties>
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MDStreamVersion" Type="System.Int32" />
      <Property Name="FullyQualifiedName" Type="System.String" />
      <Property Name="ModuleVersionId" Type="System.Guid" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="ScopeName" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="ModuleHandle" Type="System.ModuleHandle" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="ResolveMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMember" ReturnType="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMember" ReturnType="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPEKind" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="peKind" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="machine" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MDStreamVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnError" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="FindTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="filter" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_ModuleVersionId" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsResource" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="types" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ScopeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_ModuleHandle" ReturnType="System.ModuleHandle">
        <Parameters />
      </Method>
      <Method Name="GetSignerCertificate" ReturnType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ObfuscateAssemblyAttribute">
    <Properties>
      <Property Name="AssemblyIsPrivate" Type="System.Boolean" />
      <Property Name="StripAfterObfuscation" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AssemblyIsPrivate" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_StripAfterObfuscation" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_StripAfterObfuscation" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ObfuscationAttribute">
    <Properties>
      <Property Name="StripAfterObfuscation" Type="System.Boolean" />
      <Property Name="Exclude" Type="System.Boolean" />
      <Property Name="ApplyToMembers" Type="System.Boolean" />
      <Property Name="Feature" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_StripAfterObfuscation" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_StripAfterObfuscation" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Exclude" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Exclude" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ApplyToMembers" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ApplyToMembers" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Feature" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Feature" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ExceptionHandlingClause">
    <Properties>
      <Property Name="Flags" Type="System.Reflection.ExceptionHandlingClauseOptions" />
      <Property Name="TryOffset" Type="System.Int32" />
      <Property Name="TryLength" Type="System.Int32" />
      <Property Name="HandlerOffset" Type="System.Int32" />
      <Property Name="HandlerLength" Type="System.Int32" />
      <Property Name="FilterOffset" Type="System.Int32" />
      <Property Name="CatchType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" ReturnType="System.Reflection.ExceptionHandlingClauseOptions">
        <Parameters />
      </Method>
      <Method Name="get_TryOffset" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_TryLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_HandlerOffset" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_HandlerLength" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_FilterOffset" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CatchType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.MethodBody">
    <Properties>
      <Property Name="LocalSignatureMetadataToken" Type="System.Int32" />
      <Property Name="LocalVariables" Type="System.Collections.Generic.IList`1[System.Reflection.LocalVariableInfo]" />
      <Property Name="MaxStackSize" Type="System.Int32" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="ExceptionHandlingClauses" Type="System.Collections.Generic.IList`1[System.Reflection.ExceptionHandlingClause]" />
    </Properties>
    <Methods>
      <Method Name="get_LocalSignatureMetadataToken" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LocalVariables" ReturnType="System.Collections.Generic.IList`1[System.Reflection.LocalVariableInfo]">
        <Parameters />
      </Method>
      <Method Name="get_MaxStackSize" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_InitLocals" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetILAsByteArray" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_ExceptionHandlingClauses" ReturnType="System.Collections.Generic.IList`1[System.Reflection.ExceptionHandlingClause]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.LocalVariableInfo">
    <Properties>
      <Property Name="LocalType" Type="System.Type" />
      <Property Name="IsPinned" Type="System.Boolean" />
      <Property Name="LocalIndex" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_LocalType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsPinned" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_LocalIndex" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ParameterInfo">
    <Properties>
      <Property Name="ParameterType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="HasDefaultValue" Type="System.Boolean" />
      <Property Name="DefaultValue" Type="System.Object" />
      <Property Name="RawDefaultValue" Type="System.Object" />
      <Property Name="Position" Type="System.Int32" />
      <Property Name="Attributes" Type="System.Reflection.ParameterAttributes" />
      <Property Name="Member" Type="System.Reflection.MemberInfo" />
      <Property Name="IsIn" Type="System.Boolean" />
      <Property Name="IsOut" Type="System.Boolean" />
      <Property Name="IsLcid" Type="System.Boolean" />
      <Property Name="IsRetval" Type="System.Boolean" />
      <Property Name="IsOptional" Type="System.Boolean" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
    </Properties>
    <Methods>
      <Method Name="get_ParameterType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_HasDefaultValue" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_DefaultValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_RawDefaultValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.ParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="get_Member" ReturnType="System.Reflection.MemberInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsIn" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOut" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsLcid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsRetval" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOptional" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetRequiredCustomModifiers" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetOptionalCustomModifiers" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetRealObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Pointer">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.PropertyInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="PropertyType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.PropertyAttributes" />
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="GetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="SetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" ReturnType="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="GetConstantValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetRawConstantValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_PropertyType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessors" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetGetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetIndexParameters" ReturnType="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.PropertyAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRequiredCustomModifiers" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetOptionalCustomModifiers" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetAccessors" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_GetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_SetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetGetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetSetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ReflectionContext">
    <Properties />
    <Methods>
      <Method Name="MapAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="MapType" ReturnType="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeForObject" ReturnType="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.ReflectionTypeLoadException">
    <Properties>
      <Property Name="Types" Type="System.Type[]" />
      <Property Name="LoaderExceptions" Type="System.Exception[]" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Types" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_LoaderExceptions" ReturnType="System.Exception[]">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.StrongNameKeyPair">
    <Properties>
      <Property Name="PublicKey" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKey" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.TargetException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Reflection.TargetInvocationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Reflection.TargetParameterCountException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Reflection.TypeDelegator">
    <Properties>
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="Name" Type="System.String" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_GUID" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="namedParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" ReturnType="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" ReturnType="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" ReturnType="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsConstructedGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetElementType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" ReturnType="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.TypeFilter">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="filterCriteria" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.TypeInfo">
    <Properties>
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="AsType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_GenericTypeParameters" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredMethods" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredNestedType" ReturnType="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredProperty" ReturnType="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DeclaredConstructors" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredEvents" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredFields" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredMembers" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredMethods" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredNestedTypes" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredProperties" ReturnType="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]">
        <Parameters />
      </Method>
      <Method Name="get_ImplementedInterfaces" ReturnType="System.Collections.Generic.IEnumerable`1[System.Type]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.AssemblyBuilder">
    <Properties>
      <Property Name="Location" Type="System.String" />
      <Property Name="ImageRuntimeVersion" Type="System.String" />
      <Property Name="CodeBase" Type="System.String" />
      <Property Name="EntryPoint" Type="System.Reflection.MethodInfo" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" />
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="SecurityRuleSet" Type="System.Security.SecurityRuleSet" />
      <Property Name="ManifestModule" Type="System.Reflection.Module" />
      <Property Name="ReflectionOnly" Type="System.Boolean" />
      <Property Name="GlobalAssemblyCache" Type="System.Boolean" />
      <Property Name="HostContext" Type="System.Int64" />
      <Property Name="IsDynamic" Type="System.Boolean" />
      <Property Name="EscapedCodeBase" Type="System.String" />
      <Property Name="ExportedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="DefinedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="IsFullyTrusted" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="Modules" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Module]" />
    </Properties>
    <Methods>
      <Method Name="DefineDynamicModule" ReturnType="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" ReturnType="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="emitSymbolInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" ReturnType="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" ReturnType="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="emitSymbolInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" ReturnType="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="description" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" ReturnType="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="description" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResourceFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddResourceFile" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetManifestResourceNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetFile" ReturnType="System.IO.FileStream">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" ReturnType="System.IO.FileStream[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceStream" ReturnType="System.IO.Stream">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceStream" ReturnType="System.IO.Stream">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceInfo" ReturnType="System.Reflection.ManifestResourceInfo">
        <Parameters>
          <Parameter Name="resourceName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Location" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ImageRuntimeVersion" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CodeBase" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EntryPoint" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetExportedTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetName" ReturnType="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="copiedName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnError" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Evidence" ReturnType="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSet" ReturnType="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_SecurityRuleSet" ReturnType="System.Security.SecurityRuleSet">
        <Parameters />
      </Method>
      <Method Name="get_ManifestModule" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_ReflectionOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetModule" ReturnType="System.Reflection.Module">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetReferencedAssemblies" ReturnType="System.Reflection.AssemblyName[]">
        <Parameters />
      </Method>
      <Method Name="get_GlobalAssemblyCache" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HostContext" ReturnType="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetModules" ReturnType="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetLoadedModules" ReturnType="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="version" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsDynamic" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="DefineVersionInfoResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="product" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="productVersion" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="company" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="copyright" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="trademark" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineVersionInfoResource" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="DefineUnmanagedResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="resource" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineUnmanagedResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="resourceFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDynamicModule" ReturnType="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetEntryPoint" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="entryMethod" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetEntryPoint" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="entryMethod" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="fileKind" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Save" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="assemblyFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Save" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="assemblyFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="portableExecutableKind" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="imageFileMachine" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.ConstructorBuilder">
    <Properties>
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="Signature" Type="System.String" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetParameters" ReturnType="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="GetMethodImplementationFlags" ReturnType="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" ReturnType="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters />
      </Method>
      <Method Name="DefineParameter" ReturnType="System.Reflection.Emit.ParameterBuilder">
        <Parameters>
          <Parameter Name="iSequence" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="strParamName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSymCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetILGenerator" ReturnType="System.Reflection.Emit.ILGenerator">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" ReturnType="System.Reflection.Emit.ILGenerator">
        <Parameters>
          <Parameter Name="streamSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetMethodBody" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="il" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="maxStack" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="localSignature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="exceptionHandlers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="tokenFixups" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddDeclarativeSecurity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CallingConvention" ReturnType="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="GetModule" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_ReturnType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Signature" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetImplementationFlags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InitLocals" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_InitLocals" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.DynamicILInfo">
    <Properties>
      <Property Name="DynamicMethod" Type="System.Reflection.Emit.DynamicMethod" />
    </Properties>
    <Methods>
      <Method Name="get_DynamicMethod" ReturnType="System.Reflection.Emit.DynamicMethod">
        <Parameters />
      </Method>
      <Method Name="SetCode" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="code" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="maxStackSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCode" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="code" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="codeSize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="maxStackSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetExceptions" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetExceptions" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="exceptionsSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLocalSignature" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="localSignature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLocalSignature" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="localSignature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signatureSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="contextType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="field" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="field" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="contextType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="literal" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.DynamicMethod">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="ReturnParameter" Type="System.Reflection.ParameterInfo" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.Reflection.ICustomAttributeProvider" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateDelegate" ReturnType="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" ReturnType="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" ReturnType="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CallingConvention" ReturnType="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="GetBaseDefinition" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetParameters" ReturnType="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMethodImplementationFlags" ReturnType="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ReturnType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReturnParameter" ReturnType="System.Reflection.ParameterInfo">
        <Parameters />
      </Method>
      <Method Name="get_ReturnTypeCustomAttributes" ReturnType="System.Reflection.ICustomAttributeProvider">
        <Parameters />
      </Method>
      <Method Name="DefineParameter" ReturnType="System.Reflection.Emit.ParameterBuilder">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDynamicILInfo" ReturnType="System.Reflection.Emit.DynamicILInfo">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" ReturnType="System.Reflection.Emit.ILGenerator">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" ReturnType="System.Reflection.Emit.ILGenerator">
        <Parameters>
          <Parameter Name="streamSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InitLocals" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_InitLocals" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.EventBuilder">
    <Properties />
    <Methods>
      <Method Name="GetEventToken" ReturnType="System.Reflection.Emit.EventToken">
        <Parameters />
      </Method>
      <Method Name="SetAddOnMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetRemoveOnMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetRaiseMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddOtherMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.FieldBuilder">
    <Properties>
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="FieldType" Type="System.Type" />
      <Property Name="FieldHandle" Type="System.RuntimeFieldHandle" />
      <Property Name="Attributes" Type="System.Reflection.FieldAttributes" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsInitOnly" Type="System.Boolean" />
      <Property Name="IsLiteral" Type="System.Boolean" />
      <Property Name="IsNotSerialized" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsPinvokeImpl" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_FieldType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="val" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FieldHandle" ReturnType="System.RuntimeFieldHandle">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.FieldAttributes">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetToken" ReturnType="System.Reflection.Emit.FieldToken">
        <Parameters />
      </Method>
      <Method Name="SetOffset" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="iOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetMarshal" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="unmanagedMarshal" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetConstant" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="defaultValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.ILGenerator">
    <Properties>
      <Property Name="ILOffset" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="meth" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitCalli" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitCalli" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="unmanagedCallConv" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitCall" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="methodInfo" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="signature" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="cls" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="label" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="labels" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="field" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="local" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginExceptionBlock" ReturnType="System.Reflection.Emit.Label">
        <Parameters />
      </Method>
      <Method Name="EndExceptionBlock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginExceptFilterBlock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginCatchBlock" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="exceptionType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginFaultBlock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginFinallyBlock" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="DefineLabel" ReturnType="System.Reflection.Emit.Label">
        <Parameters />
      </Method>
      <Method Name="MarkLabel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="loc" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ThrowException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="excType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitWriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitWriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="localBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitWriteLine" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="fld" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeclareLocal" ReturnType="System.Reflection.Emit.LocalBuilder">
        <Parameters>
          <Parameter Name="localType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeclareLocal" ReturnType="System.Reflection.Emit.LocalBuilder">
        <Parameters>
          <Parameter Name="localType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pinned" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UsingNamespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="usingNamespace" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="MarkSequencePoint" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="document" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startLine" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startColumn" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endLine" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endColumn" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginScope" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="EndScope" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ILOffset" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.LocalBuilder">
    <Properties>
      <Property Name="IsPinned" Type="System.Boolean" />
      <Property Name="LocalType" Type="System.Type" />
      <Property Name="LocalIndex" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsPinned" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_LocalType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_LocalIndex" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="SetLocalSymInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetLocalSymInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="endOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.MethodBuilder">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.Reflection.ICustomAttributeProvider" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="ReturnParameter" Type="System.Reflection.ParameterInfo" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="Signature" Type="System.String" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReturnTypeCustomAttributes" ReturnType="System.Reflection.ICustomAttributeProvider">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameters" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethodImplementationFlags" ReturnType="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CallingConvention" ReturnType="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" ReturnType="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetBaseDefinition" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_ReturnType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetParameters" ReturnType="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_ReturnParameter" ReturnType="System.Reflection.ParameterInfo">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsGenericMethodDefinition" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetGenericMethodDefinition" ReturnType="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericMethod" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="MakeGenericMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineGenericParameters" ReturnType="System.Reflection.Emit.GenericTypeParameterBuilder[]">
        <Parameters>
          <Parameter Name="names" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters />
      </Method>
      <Method Name="SetParameters" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetReturnType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSignature" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineParameter" ReturnType="System.Reflection.Emit.ParameterBuilder">
        <Parameters>
          <Parameter Name="position" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="strParamName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetMarshal" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="unmanagedMarshal" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSymCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddDeclarativeSecurity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetMethodBody" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="il" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="maxStack" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="localSignature" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="exceptionHandlers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="tokenFixups" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateMethodBody" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="il" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetImplementationFlags" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetILGenerator" ReturnType="System.Reflection.Emit.ILGenerator">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" ReturnType="System.Reflection.Emit.ILGenerator">
        <Parameters>
          <Parameter Name="size" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InitLocals" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_InitLocals" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetModule" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Signature" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.CustomAttributeBuilder">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.Emit.MethodRental">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.Emit.ModuleBuilder">
    <Properties>
      <Property Name="FullyQualifiedName" Type="System.String" />
      <Property Name="MDStreamVersion" Type="System.Int32" />
      <Property Name="ModuleVersionId" Type="System.Guid" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="ScopeName" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="ModuleHandle" Type="System.ModuleHandle" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" ReturnType="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="throwOnError" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FullyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ResolveSignature" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMember" ReturnType="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericTypeArguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="genericMethodArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPEKind" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="peKind" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="machine" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MDStreamVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ModuleVersionId" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsResource" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ScopeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="GetSignerCertificate" ReturnType="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typesize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="packingSize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typesize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="interfaces" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="packsize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineEnum" ReturnType="System.Reflection.Emit.EnumBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="visibility" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="underlyingType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" ReturnType="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="description" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" ReturnType="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="description" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineManifestResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineUnmanagedResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="resource" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineUnmanagedResource" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="resourceFileName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineGlobalMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineGlobalMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineGlobalMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dllName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCallConv" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCharSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dllName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="entryName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCallConv" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCharSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateGlobalFunctions" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="DefineInitializedData" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineUninitializedData" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="size" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeToken" ReturnType="System.Reflection.Emit.TypeToken">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeToken" ReturnType="System.Reflection.Emit.TypeToken">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethodToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructorToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="constructor" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethodToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArrayMethodToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="arrayClass" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="methodName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArrayMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="arrayClass" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="methodName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructorToken" ReturnType="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFieldToken" ReturnType="System.Reflection.Emit.FieldToken">
        <Parameters>
          <Parameter Name="field" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetStringConstant" ReturnType="System.Reflection.Emit.StringToken">
        <Parameters>
          <Parameter Name="str" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSignatureToken" ReturnType="System.Reflection.Emit.SignatureToken">
        <Parameters>
          <Parameter Name="sigHelper" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSignatureToken" ReturnType="System.Reflection.Emit.SignatureToken">
        <Parameters>
          <Parameter Name="sigBytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sigLength" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSymWriter" ReturnType="System.Diagnostics.SymbolStore.ISymbolWriter">
        <Parameters />
      </Method>
      <Method Name="DefineDocument" ReturnType="System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
        <Parameters>
          <Parameter Name="url" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="language" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="languageVendor" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="documentType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetUserEntryPoint" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="entryPoint" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSymCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsTransient" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.OpCodes">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Reflection.Emit.ParameterBuilder">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Position" Type="System.Int32" />
      <Property Name="Attributes" Type="System.Int32" />
      <Property Name="IsIn" Type="System.Boolean" />
      <Property Name="IsOut" Type="System.Boolean" />
      <Property Name="IsOptional" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="SetMarshal" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="unmanagedMarshal" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetConstant" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="defaultValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetToken" ReturnType="System.Reflection.Emit.ParameterToken">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Position" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsIn" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOut" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOptional" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.PropertyBuilder">
    <Properties>
      <Property Name="PropertyToken" Type="System.Reflection.Emit.PropertyToken" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="PropertyType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.PropertyAttributes" />
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="GetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="SetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="SetConstant" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="defaultValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_PropertyToken" ReturnType="System.Reflection.Emit.PropertyToken">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="SetGetMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSetMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddOtherMethod" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessors" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetGetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSetMethod" ReturnType="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetIndexParameters" ReturnType="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_PropertyType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" ReturnType="System.Reflection.PropertyAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.SignatureHelper">
    <Properties />
    <Methods>
      <Method Name="AddArgument" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="clsArgument" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddArgument" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="argument" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pinned" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddArguments" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arguments" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddArgument" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="argument" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddSentinel" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetSignature" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.TypeBuilder">
    <Properties>
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="Size" Type="System.Int32" />
      <Property Name="PackingSize" Type="System.Reflection.Emit.PackingSize" />
      <Property Name="TypeToken" Type="System.Reflection.Emit.TypeToken" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsCreated" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_GUID" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="namedParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" ReturnType="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" ReturnType="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" ReturnType="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" ReturnType="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetElementType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubclassOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UnderlyingSystemType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakePointerType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_GenericParameterAttributes" ReturnType="System.Reflection.GenericParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="DefineGenericParameters" ReturnType="System.Reflection.Emit.GenericTypeParameterBuilder[]">
        <Parameters>
          <Parameter Name="names" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="MakeGenericType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetGenericArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericTypeDefinition" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericParameter" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructedGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterPosition" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="GetGenericTypeDefinition" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="DefineMethodOverride" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="methodInfoBody" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="methodInfoDeclaration" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineTypeInitializer" ReturnType="System.Reflection.Emit.ConstructorBuilder">
        <Parameters />
      </Method>
      <Method Name="DefineDefaultConstructor" ReturnType="System.Reflection.Emit.ConstructorBuilder">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineConstructor" ReturnType="System.Reflection.Emit.ConstructorBuilder">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineConstructor" ReturnType="System.Reflection.Emit.ConstructorBuilder">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dllName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCallConv" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCharSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dllName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="entryName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCallConv" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCharSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" ReturnType="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="dllName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="entryName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCallConv" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="nativeCharSet" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="interfaces" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="packSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" ReturnType="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="packSize" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeSize" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineField" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="fieldName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineField" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="fieldName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="requiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="optionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineInitializedData" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineUninitializedData" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="size" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" ReturnType="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" ReturnType="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" ReturnType="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" ReturnType="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callingConvention" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineEvent" ReturnType="System.Reflection.Emit.EventBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="attributes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="eventtype" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateTypeInfo" ReturnType="System.Reflection.TypeInfo">
        <Parameters />
      </Method>
      <Method Name="CreateType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Size" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_PackingSize" ReturnType="System.Reflection.Emit.PackingSize">
        <Parameters />
      </Method>
      <Method Name="SetParent" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="parent" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddInterfaceImplementation" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddDeclarativeSecurity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="pset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TypeToken" ReturnType="System.Reflection.Emit.TypeToken">
        <Parameters />
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.GenericTypeParameterBuilder">
    <Properties>
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="MakePointerType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_GUID" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="namedParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" ReturnType="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" ReturnType="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" ReturnType="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" ReturnType="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetElementType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericTypeDefinition" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericParameter" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructedGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterPosition" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterAttributes" ReturnType="System.Reflection.GenericParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringMethod" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="GetGenericTypeDefinition" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeGenericType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsSubclassOf" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetBaseTypeConstraint" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="baseTypeConstraint" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetInterfaceConstraints" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="interfaceConstraints" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetGenericParameterAttributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="genericParameterAttributes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.EnumBuilder">
    <Properties>
      <Property Name="TypeToken" Type="System.Reflection.Emit.TypeToken" />
      <Property Name="UnderlyingField" Type="System.Reflection.Emit.FieldBuilder" />
      <Property Name="Name" Type="System.String" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineLiteral" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="literalName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="literalValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateTypeInfo" ReturnType="System.Reflection.TypeInfo">
        <Parameters />
      </Method>
      <Method Name="CreateType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_TypeToken" ReturnType="System.Reflection.Emit.TypeToken">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingField" ReturnType="System.Reflection.Emit.FieldBuilder">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_GUID" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="invokeAttr" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binder" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="target" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="modifiers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="culture" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="namedParameters" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Module" ReturnType="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" ReturnType="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" ReturnType="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" ReturnType="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" ReturnType="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFields" ReturnType="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ignoreCase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" ReturnType="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" ReturnType="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMember" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" ReturnType="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" ReturnType="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" ReturnType="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsConstructedGenericType" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetElementType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetEnumUnderlyingType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" ReturnType="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="binaryAttribute" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DeclaringType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="IsDefined" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="inherit" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="MakePointerType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Reflection.Emit.UnmanagedMarshal">
    <Properties>
      <Property Name="GetUnmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      <Property Name="IIDGuid" Type="System.Guid" />
      <Property Name="ElementCount" Type="System.Int32" />
      <Property Name="BaseType" Type="System.Runtime.InteropServices.UnmanagedType" />
    </Properties>
    <Methods>
      <Method Name="get_GetUnmanagedType" ReturnType="System.Runtime.InteropServices.UnmanagedType">
        <Parameters />
      </Method>
      <Method Name="get_IIDGuid" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ElementCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" ReturnType="System.Runtime.InteropServices.UnmanagedType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Deployment.Internal.InternalApplicationIdentityHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Deployment.Internal.InternalActivationContextHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.MemoryFailPoint">
    <Properties />
    <Methods>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.GCSettings">
    <Properties>
      <Property Name="LatencyMode" Type="System.Runtime.GCLatencyMode" />
      <Property Name="LargeObjectHeapCompactionMode" Type="System.Runtime.GCLargeObjectHeapCompactionMode" />
      <Property Name="IsServerGC" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.AssemblyTargetedPatchBandAttribute">
    <Properties>
      <Property Name="TargetedPatchBand" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_TargetedPatchBand" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.TargetedPatchingOptOutAttribute">
    <Properties>
      <Property Name="Reason" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Reason" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.ProfileOptimization">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.DesignerServices.WindowsRuntimeDesignerContext">
    <Properties>
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
    <Properties>
      <Property Name="Guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Guarantees" ReturnType="System.Runtime.Versioning.ComponentGuaranteesOptions">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Versioning.ResourceConsumptionAttribute">
    <Properties>
      <Property Name="ResourceScope" Type="System.Runtime.Versioning.ResourceScope" />
      <Property Name="ConsumptionScope" Type="System.Runtime.Versioning.ResourceScope" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ResourceScope" ReturnType="System.Runtime.Versioning.ResourceScope">
        <Parameters />
      </Method>
      <Method Name="get_ConsumptionScope" ReturnType="System.Runtime.Versioning.ResourceScope">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Versioning.ResourceExposureAttribute">
    <Properties>
      <Property Name="ResourceExposureLevel" Type="System.Runtime.Versioning.ResourceScope" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ResourceExposureLevel" ReturnType="System.Runtime.Versioning.ResourceScope">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Versioning.VersioningHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Versioning.TargetFrameworkAttribute">
    <Properties>
      <Property Name="FrameworkName" Type="System.String" />
      <Property Name="FrameworkDisplayName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_FrameworkName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FrameworkDisplayName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FrameworkDisplayName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Versioning.CompatibilitySwitch">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
    <Properties>
      <Property Name="ConsistencyGuarantee" Type="System.Runtime.ConstrainedExecution.Consistency" />
      <Property Name="Cer" Type="System.Runtime.ConstrainedExecution.Cer" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ConsistencyGuarantee" ReturnType="System.Runtime.ConstrainedExecution.Consistency">
        <Parameters />
      </Method>
      <Method Name="get_Cer" ReturnType="System.Runtime.ConstrainedExecution.Cer">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.FormatterConverter">
    <Properties />
    <Methods>
      <Method Name="Convert" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Convert" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeCode" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToChar" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" ReturnType="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToByte" ReturnType="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" ReturnType="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" ReturnType="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" ReturnType="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" ReturnType="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" ReturnType="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" ReturnType="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" ReturnType="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.FormatterServices">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.OptionalFieldAttribute">
    <Properties>
      <Property Name="VersionAdded" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_VersionAdded" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_VersionAdded" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.OnSerializingAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.OnSerializedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.OnDeserializingAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.OnDeserializedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.SerializationBinder">
    <Properties />
    <Methods>
      <Method Name="BindToName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="serializedType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BindToType" ReturnType="System.Type">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="typeName" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.SerializationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.SerializationInfo">
    <Properties>
      <Property Name="FullTypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
      <Property Name="MemberCount" Type="System.Int32" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="IsFullTypeNameSetExplicit" Type="System.Boolean" />
      <Property Name="IsAssemblyNameSetExplicit" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_FullTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FullTypeName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AssemblyName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AssemblyName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MemberCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsFullTypeNameSetExplicit" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAssemblyNameSetExplicit" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Runtime.Serialization.SerializationInfoEnumerator">
        <Parameters />
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBoolean" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChar" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSByte" ReturnType="System.SByte">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByte" ReturnType="System.Byte">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInt16" ReturnType="System.Int16">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUInt16" ReturnType="System.UInt16">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInt32" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUInt32" ReturnType="System.UInt32">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInt64" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetUInt64" ReturnType="System.UInt64">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSingle" ReturnType="System.Single">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDouble" ReturnType="System.Double">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDecimal" ReturnType="System.Decimal">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDateTime" ReturnType="System.DateTime">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.SerializationInfoEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Runtime.Serialization.SerializationEntry" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Value" Type="System.Object" />
      <Property Name="ObjectType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="MoveNext" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Current" ReturnType="System.Runtime.Serialization.SerializationEntry">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatter">
    <Properties>
      <Property Name="SurrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      <Property Name="Binder" Type="System.Runtime.Serialization.SerializationBinder" />
      <Property Name="Context" Type="System.Runtime.Serialization.StreamingContext" />
    </Properties>
    <Methods>
      <Method Name="Deserialize" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Serialize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="graph" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SurrogateSelector" ReturnType="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="set_SurrogateSelector" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Binder" ReturnType="System.Runtime.Serialization.SerializationBinder">
        <Parameters />
      </Method>
      <Method Name="set_Binder" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Context" ReturnType="System.Runtime.Serialization.StreamingContext">
        <Parameters />
      </Method>
      <Method Name="set_Context" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.ObjectIDGenerator">
    <Properties />
    <Methods>
      <Method Name="GetId" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="HasId" ReturnType="System.Int64">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="firstTime" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.ObjectManager">
    <Properties />
    <Methods>
      <Method Name="RecordFixup" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="objectToBeFixed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="member" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectRequired" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RecordDelayedFixup" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="objectToBeFixed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="memberName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectRequired" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RecordArrayElementFixup" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arrayToBeFixed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="indices" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectRequired" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="objectID" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectID" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectID" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectID" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="idOfContainingObj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="member" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectID" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="idOfContainingObj" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="member" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arrayIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DoFixups" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="RecordArrayElementFixup" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="arrayToBeFixed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="objectRequired" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RaiseDeserializationEvent" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="RaiseOnDeserializingEvent" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.SafeSerializationEventArgs">
    <Properties>
      <Property Name="StreamingContext" Type="System.Runtime.Serialization.StreamingContext" />
    </Properties>
    <Methods>
      <Method Name="AddSerializedState" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="serializedState" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_StreamingContext" ReturnType="System.Runtime.Serialization.StreamingContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.SerializationObjectManager">
    <Properties />
    <Methods>
      <Method Name="RegisterObject" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RaiseOnSerializedEvent" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.SurrogateSelector">
    <Properties />
    <Methods>
      <Method Name="AddSurrogate" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="surrogate" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ChainSelector" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="selector" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextSelector" ReturnType="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="GetSurrogate" ReturnType="System.Runtime.Serialization.ISerializationSurrogate">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="selector" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveSurrogate" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatters.InternalRM">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatters.InternalST">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatters.SoapMessage">
    <Properties>
      <Property Name="ParamNames" Type="System.String[]" />
      <Property Name="ParamValues" Type="System.Object[]" />
      <Property Name="ParamTypes" Type="System.Type[]" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="XmlNameSpace" Type="System.String" />
      <Property Name="Headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
    </Properties>
    <Methods>
      <Method Name="get_ParamNames" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_ParamNames" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ParamValues" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="set_ParamValues" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ParamTypes" ReturnType="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="set_ParamTypes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_MethodName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNameSpace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNameSpace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Headers" ReturnType="System.Runtime.Remoting.Messaging.Header[]">
        <Parameters />
      </Method>
      <Method Name="set_Headers" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatters.SoapFault">
    <Properties>
      <Property Name="FaultCode" Type="System.String" />
      <Property Name="FaultString" Type="System.String" />
      <Property Name="FaultActor" Type="System.String" />
      <Property Name="Detail" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FaultCode" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FaultCode" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FaultString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FaultString" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FaultActor" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FaultActor" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Detail" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_Detail" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatters.ServerFault">
    <Properties>
      <Property Name="ExceptionType" Type="System.String" />
      <Property Name="ExceptionMessage" Type="System.String" />
      <Property Name="StackTrace" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ExceptionType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ExceptionType" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ExceptionMessage" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ExceptionMessage" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_StackTrace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_StackTrace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
    <Properties>
      <Property Name="TypeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      <Property Name="AssemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
      <Property Name="FilterLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
      <Property Name="SurrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      <Property Name="Binder" Type="System.Runtime.Serialization.SerializationBinder" />
      <Property Name="Context" Type="System.Runtime.Serialization.StreamingContext" />
    </Properties>
    <Methods>
      <Method Name="get_TypeFormat" ReturnType="System.Runtime.Serialization.Formatters.FormatterTypeStyle">
        <Parameters />
      </Method>
      <Method Name="set_TypeFormat" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AssemblyFormat" ReturnType="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
        <Parameters />
      </Method>
      <Method Name="set_AssemblyFormat" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FilterLevel" ReturnType="System.Runtime.Serialization.Formatters.TypeFilterLevel">
        <Parameters />
      </Method>
      <Method Name="set_FilterLevel" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_SurrogateSelector" ReturnType="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="set_SurrogateSelector" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Binder" ReturnType="System.Runtime.Serialization.SerializationBinder">
        <Parameters />
      </Method>
      <Method Name="set_Binder" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Context" ReturnType="System.Runtime.Serialization.StreamingContext">
        <Parameters />
      </Method>
      <Method Name="set_Context" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Deserialize" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Deserialize" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DeserializeMethodResponse" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="methodCallMessage" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UnsafeDeserialize" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UnsafeDeserializeMethodResponse" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="methodCallMessage" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Serialize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="graph" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Serialize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="graph" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="headers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
    <Properties>
      <Property Name="Exception" Type="System.Exception" />
    </Properties>
    <Methods>
      <Method Name="get_Exception" ReturnType="System.Exception">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
    <Properties>
      <Property Name="SourceException" Type="System.Exception" />
    </Properties>
    <Methods>
      <Method Name="get_SourceException" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="Throw" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.ObjRef">
    <Properties>
      <Property Name="URI" Type="System.String" />
      <Property Name="TypeInfo" Type="System.Runtime.Remoting.IRemotingTypeInfo" />
      <Property Name="EnvoyInfo" Type="System.Runtime.Remoting.IEnvoyInfo" />
      <Property Name="ChannelInfo" Type="System.Runtime.Remoting.IChannelInfo" />
    </Properties>
    <Methods>
      <Method Name="GetRealObject" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_URI" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_URI" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_TypeInfo" ReturnType="System.Runtime.Remoting.IRemotingTypeInfo">
        <Parameters />
      </Method>
      <Method Name="set_TypeInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_EnvoyInfo" ReturnType="System.Runtime.Remoting.IEnvoyInfo">
        <Parameters />
      </Method>
      <Method Name="set_EnvoyInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ChannelInfo" ReturnType="System.Runtime.Remoting.IChannelInfo">
        <Parameters />
      </Method>
      <Method Name="set_ChannelInfo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsFromThisProcess" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsFromThisAppDomain" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.RemotingConfiguration">
    <Properties>
      <Property Name="ApplicationName" Type="System.String" />
      <Property Name="ApplicationId" Type="System.String" />
      <Property Name="ProcessId" Type="System.String" />
      <Property Name="CustomErrorsMode" Type="System.Runtime.Remoting.CustomErrorsModes" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.TypeEntry">
    <Properties>
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TypeName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AssemblyName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AssemblyName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.ActivatedClientTypeEntry">
    <Properties>
      <Property Name="ApplicationUrl" Type="System.String" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ContextAttributes" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ApplicationUrl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ContextAttributes" ReturnType="System.Runtime.Remoting.Contexts.IContextAttribute[]">
        <Parameters />
      </Method>
      <Method Name="set_ContextAttributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.ActivatedServiceTypeEntry">
    <Properties>
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ContextAttributes" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ContextAttributes" ReturnType="System.Runtime.Remoting.Contexts.IContextAttribute[]">
        <Parameters />
      </Method>
      <Method Name="set_ContextAttributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.WellKnownClientTypeEntry">
    <Properties>
      <Property Name="ObjectUrl" Type="System.String" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ApplicationUrl" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectUrl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationUrl" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationUrl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.WellKnownServiceTypeEntry">
    <Properties>
      <Property Name="ObjectUri" Type="System.String" />
      <Property Name="Mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ContextAttributes" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectUri" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Mode" ReturnType="System.Runtime.Remoting.WellKnownObjectMode">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ContextAttributes" ReturnType="System.Runtime.Remoting.Contexts.IContextAttribute[]">
        <Parameters />
      </Method>
      <Method Name="set_ContextAttributes" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.RemotingException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.ServerException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.RemotingTimeoutException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.RemotingServices">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.InternalRemotingServices">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.SoapServices">
    <Properties>
      <Property Name="XmlNsForClrType" Type="System.String" />
      <Property Name="XmlNsForClrTypeWithAssembly" Type="System.String" />
      <Property Name="XmlNsForClrTypeWithNs" Type="System.String" />
      <Property Name="XmlNsForClrTypeWithNsAndAssembly" Type="System.String" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.ObjectHandle">
    <Properties />
    <Methods>
      <Method Name="Unwrap" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="InitializeLifetimeService" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.SoapTypeAttribute">
    <Properties>
      <Property Name="SoapOptions" Type="System.Runtime.Remoting.Metadata.SoapOption" />
      <Property Name="XmlElementName" Type="System.String" />
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="XmlTypeName" Type="System.String" />
      <Property Name="XmlTypeNamespace" Type="System.String" />
      <Property Name="XmlFieldOrder" Type="System.Runtime.Remoting.Metadata.XmlFieldOrderOption" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SoapOptions" ReturnType="System.Runtime.Remoting.Metadata.SoapOption">
        <Parameters />
      </Method>
      <Method Name="set_SoapOptions" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlElementName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlElementName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNamespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNamespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlTypeName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlTypeNamespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlTypeNamespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlFieldOrder" ReturnType="System.Runtime.Remoting.Metadata.XmlFieldOrderOption">
        <Parameters />
      </Method>
      <Method Name="set_XmlFieldOrder" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UseAttribute" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.SoapMethodAttribute">
    <Properties>
      <Property Name="SoapAction" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="ResponseXmlElementName" Type="System.String" />
      <Property Name="ResponseXmlNamespace" Type="System.String" />
      <Property Name="ReturnXmlElementName" Type="System.String" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SoapAction" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_SoapAction" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UseAttribute" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNamespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNamespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ResponseXmlElementName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ResponseXmlElementName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ResponseXmlNamespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ResponseXmlNamespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ReturnXmlElementName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ReturnXmlElementName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.SoapFieldAttribute">
    <Properties>
      <Property Name="XmlElementName" Type="System.String" />
      <Property Name="Order" Type="System.Int32" />
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="IsInteropXmlElement" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_XmlElementName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlElementName" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Order" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Order" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.SoapParameterAttribute">
    <Properties>
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.SoapAttribute">
    <Properties>
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_XmlNamespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNamespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UseAttribute" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseAttribute" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Embedded" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Embedded" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDuration">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
      <Property Name="Sign" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Sign" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Sign" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
      <Property Name="Sign" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Sign" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Sign" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
      <Property Name="Sign" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Sign" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Sign" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="Key" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Namespace" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Namespace" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Key" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Key" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetXsdType" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Proxies.ProxyAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="CreateInstance" ReturnType="System.MarshalByRefObject">
        <Parameters>
          <Parameter Name="serverType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateProxy" ReturnType="System.Runtime.Remoting.Proxies.RealProxy">
        <Parameters>
          <Parameter Name="objRef" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="serverType" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="serverObject" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="serverContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="IsContextOK" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Proxies.RealProxy">
    <Properties />
    <Methods>
      <Method Name="InitializeServerObject" ReturnType="System.Runtime.Remoting.Activation.IConstructionReturnMessage">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProxiedType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="Invoke" ReturnType="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateObjRef" ReturnType="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="requestedType" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCOMIUnknown" ReturnType="System.IntPtr">
        <Parameters>
          <Parameter Name="fIsMarshalled" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetCOMIUnknown" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="i" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SupportsInterface" ReturnType="System.IntPtr">
        <Parameters>
          <Parameter Name="iid" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTransparentProxy" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Services.EnterpriseServicesHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Services.TrackingServices">
    <Properties>
      <Property Name="RegisteredHandlers" Type="System.Runtime.Remoting.Services.ITrackingHandler[]" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Contexts.CrossContextDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Contexts.Context">
    <Properties>
      <Property Name="ContextID" Type="System.Int32" />
      <Property Name="DefaultContext" Type="System.Runtime.Remoting.Contexts.Context" />
      <Property Name="ContextProperties" Type="System.Runtime.Remoting.Contexts.IContextProperty[]" />
    </Properties>
    <Methods>
      <Method Name="SetProperty" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="prop" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ContextID" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetProperty" ReturnType="System.Runtime.Remoting.Contexts.IContextProperty">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Freeze" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ContextProperties" ReturnType="System.Runtime.Remoting.Contexts.IContextProperty[]">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="DoCallBack" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="deleg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Contexts.ContextProperty">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Property" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Property" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Contexts.ContextAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="IsNewContextOK" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="newCtx" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Freeze" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="newContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsContextOK" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ctorMsg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Contexts.SynchronizationAttribute">
    <Properties>
      <Property Name="Locked" Type="System.Boolean" />
      <Property Name="IsReEntrant" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Locked" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Locked" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsReEntrant" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsContextOK" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetServerContextSink" ReturnType="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters>
          <Parameter Name="nextSink" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetClientContextSink" ReturnType="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters>
          <Parameter Name="nextSink" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Lifetime.ClientSponsor">
    <Properties>
      <Property Name="RenewalTime" Type="System.TimeSpan" />
    </Properties>
    <Methods>
      <Method Name="get_RenewalTime" ReturnType="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="set_RenewalTime" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Register" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Unregister" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Renewal" ReturnType="System.TimeSpan">
        <Parameters>
          <Parameter Name="lease" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="InitializeLifetimeService" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Lifetime.LifetimeServices">
    <Properties>
      <Property Name="LeaseTime" Type="System.TimeSpan" />
      <Property Name="RenewOnCallTime" Type="System.TimeSpan" />
      <Property Name="SponsorshipTimeout" Type="System.TimeSpan" />
      <Property Name="LeaseManagerPollTime" Type="System.TimeSpan" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.ChannelServices">
    <Properties>
      <Property Name="RegisteredChannels" Type="System.Runtime.Remoting.Channels.IChannel[]" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.ClientChannelSinkStack">
    <Properties />
    <Methods>
      <Method Name="Push" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Pop" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="sink" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AsyncProcessResponse" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="headers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DispatchReplyMessage" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DispatchException" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.ServerChannelSinkStack">
    <Properties />
    <Methods>
      <Method Name="Push" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Pop" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="sink" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Store" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="StoreAndDispatch" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="state" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AsyncProcessResponse" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="headers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="stream" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetResponseStream" ReturnType="System.IO.Stream">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="headers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ServerCallback" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="ar" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.ChannelDataStore">
    <Properties>
      <Property Name="ChannelUris" Type="System.String[]" />
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ChannelUris" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_ChannelUris" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Item" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.TransportHeaders">
    <Properties>
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Item" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.SinkProviderData">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Children" Type="System.Collections.IList" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_Children" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Item" Type="System.Object" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.BaseChannelWithProperties">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Item" Type="System.Object" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Item" Type="System.Object" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_Item" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Item" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Keys" ReturnType="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_Values" ReturnType="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="Contains" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Remove" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" ReturnType="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Count" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.AsyncResult">
    <Properties>
      <Property Name="IsCompleted" Type="System.Boolean" />
      <Property Name="AsyncDelegate" Type="System.Object" />
      <Property Name="AsyncState" Type="System.Object" />
      <Property Name="CompletedSynchronously" Type="System.Boolean" />
      <Property Name="EndInvokeCalled" Type="System.Boolean" />
      <Property Name="AsyncWaitHandle" Type="System.Threading.WaitHandle" />
      <Property Name="NextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
    </Properties>
    <Methods>
      <Method Name="SyncProcessMessage" ReturnType="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsCompleted" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_AsyncDelegate" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_AsyncState" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_CompletedSynchronously" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_EndInvokeCalled" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_EndInvokeCalled" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_AsyncWaitHandle" ReturnType="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="SetMessageCtrl" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="mc" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AsyncProcessMessage" ReturnType="System.Runtime.Remoting.Messaging.IMessageCtrl">
        <Parameters>
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="replySink" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_NextSink" ReturnType="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters />
      </Method>
      <Method Name="GetReplyMessage" ReturnType="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.ReturnMessage">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="get_Uri" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_HasVarArgs" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Args" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_OutArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOutArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetOutArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_OutArgs" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_ReturnValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" ReturnType="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.MethodCall">
    <Properties>
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="InArgCount" Type="System.Int32" />
      <Property Name="InArgs" Type="System.Object[]" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="Uri" Type="System.String" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="RootSetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ctx" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ResolveMethod" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Init" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Args" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_InArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InArgs" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_Uri" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HasVarArgs" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" ReturnType="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
      <Method Name="HeaderHandler" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="h" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.ConstructionCall">
    <Properties>
      <Property Name="CallSiteActivationAttributes" Type="System.Object[]" />
      <Property Name="ActivationType" Type="System.Type" />
      <Property Name="ActivationTypeName" Type="System.String" />
      <Property Name="ContextProperties" Type="System.Collections.IList" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Activator" Type="System.Runtime.Remoting.Activation.IActivator" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="InArgCount" Type="System.Int32" />
      <Property Name="InArgs" Type="System.Object[]" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="Uri" Type="System.String" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="get_CallSiteActivationAttributes" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_ActivationType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ActivationTypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ContextProperties" ReturnType="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_Activator" ReturnType="System.Runtime.Remoting.Activation.IActivator">
        <Parameters />
      </Method>
      <Method Name="set_Activator" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.MethodResponse">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="HeaderHandler" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="h" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RootSetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ctx" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Uri" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_HasVarArgs" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Args" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_OutArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOutArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetOutArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_OutArgs" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_ReturnValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" ReturnType="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.ConstructionResponse">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.InternalMessageWrapper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.MethodCallMessageWrapper">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="InArgCount" Type="System.Int32" />
      <Property Name="InArgs" Type="System.Object[]" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
    </Properties>
    <Methods>
      <Method Name="get_Uri" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" ReturnType="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Args" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="set_Args" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HasVarArgs" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetInArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InArgs" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
    </Properties>
    <Methods>
      <Method Name="get_Uri" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" ReturnType="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" ReturnType="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Args" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="set_Args" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_HasVarArgs" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_OutArgCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOutArg" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetOutArgName" ReturnType="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_OutArgs" ReturnType="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" ReturnType="System.Exception">
        <Parameters />
      </Method>
      <Method Name="set_Exception" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ReturnValue" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_ReturnValue" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Properties" ReturnType="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.OneWayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.MessageSurrogateFilter">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector">
    <Properties>
      <Property Name="Filter" Type="System.Runtime.Remoting.Messaging.MessageSurrogateFilter" />
    </Properties>
    <Methods>
      <Method Name="set_Filter" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Filter" ReturnType="System.Runtime.Remoting.Messaging.MessageSurrogateFilter">
        <Parameters />
      </Method>
      <Method Name="SetRootObject" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRootObject" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="ChainSelector" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="selector" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSurrogate" ReturnType="System.Runtime.Serialization.ISerializationSurrogate">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="ssout" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextSelector" ReturnType="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="UseSoapFormat" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.Header">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.HeaderHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="headers" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="headers" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.CallContext">
    <Properties>
      <Property Name="HostContext" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.Remoting.Messaging.LogicalCallContext">
    <Properties>
      <Property Name="HasInfo" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_HasInfo" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="FreeNamedDataSlot" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetData" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="SetData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="data" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Remoting.Activation.UrlAttribute">
    <Properties>
      <Property Name="UrlValue" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsContextOK" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="msg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_UrlValue" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.StringFreezingAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.ContractHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
    <Properties>
      <Property Name="PropertyName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_PropertyName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallConvCdecl">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallConvStdcall">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallConvThiscall">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallConvFastcall">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.RuntimeHelpers">
    <Properties>
      <Property Name="OffsetToStringData" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CompilerGeneratedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CustomConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.DateTimeConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.DiscardableAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.DecimalConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Decimal" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Decimal">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
    <Properties>
      <Property Name="CompilationRelaxations" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CompilationRelaxations" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CompilerGlobalScopeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.ExtensionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.FixedBufferAttribute">
    <Properties>
      <Property Name="ElementType" Type="System.Type" />
      <Property Name="Length" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ElementType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IndexerNameAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
    <Properties>
      <Property Name="AssemblyName" Type="System.String" />
      <Property Name="AllInternalsVisible" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AssemblyName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AllInternalsVisible" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AllInternalsVisible" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsVolatile">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.MethodImplAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.CompilerServices.MethodImplOptions" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.CompilerServices.MethodImplOptions">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.RequiredAttributeAttribute">
    <Properties>
      <Property Name="RequiredContract" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_RequiredContract" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.DefaultDependencyAttribute">
    <Properties>
      <Property Name="LoadHint" Type="System.Runtime.CompilerServices.LoadHint" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_LoadHint" ReturnType="System.Runtime.CompilerServices.LoadHint">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.DependencyAttribute">
    <Properties>
      <Property Name="DependentAssembly" Type="System.String" />
      <Property Name="LoadHint" Type="System.Runtime.CompilerServices.LoadHint" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DependentAssembly" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_LoadHint" ReturnType="System.Runtime.CompilerServices.LoadHint">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CompilerMarshalOverride">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.HasCopySemanticsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsBoxed">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsByValue">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsConst">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsImplicitlyDereferenced">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsJitIntrinsic">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsLong">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsPinned">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsSignUnspecifiedByte">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsUdtReturn">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.ScopelessEnumAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.SpecialNameAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IsCopyConstructed">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.SuppressIldasmAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.NativeCppClassAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.TypeForwardedToAttribute">
    <Properties>
      <Property Name="Destination" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Destination" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.TypeForwardedFromAttribute">
    <Properties>
      <Property Name="AssemblyFullName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AssemblyFullName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
    <Properties>
      <Property Name="Description" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Description" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
    <Properties>
      <Property Name="WrapNonExceptionThrows" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrapNonExceptionThrows" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_WrapNonExceptionThrows" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.RuntimeWrappedException">
    <Properties>
      <Property Name="WrappedException" Type="System.Object" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedException" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="context" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.ConditionalWeakTable`2">
    <Properties />
    <Methods>
      <Method Name="TryGetValue" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Add" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetValue" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="createValueCallback" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetOrCreateValue" ReturnType="TValue">
        <Parameters>
          <Parameter Name="key" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallerFilePathAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallerLineNumberAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.CallerMemberNameAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.StateMachineAttribute">
    <Properties>
      <Property Name="StateMachineType" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_StateMachineType" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IteratorStateMachineAttribute">
    <Properties>
      <Property Name="StateMachineType" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.AsyncStateMachineAttribute">
    <Properties>
      <Property Name="StateMachineType" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.FormattableStringFactory">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IDispatchConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.CompilerServices.IUnknownConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
    <Properties>
      <Property Name="CallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CallingConvention" ReturnType="System.Runtime.InteropServices.CallingConvention">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeIdentifierAttribute">
    <Properties>
      <Property Name="Scope" Type="System.String" />
      <Property Name="Identifier" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Scope" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Identifier" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.DispIdAttribute">
    <Properties>
      <Property Name="Value" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.InterfaceTypeAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.ComInterfaceType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.ComInterfaceType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
    <Properties>
      <Property Name="Value" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ClassInterfaceAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.ClassInterfaceType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.ClassInterfaceType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComVisibleAttribute">
    <Properties>
      <Property Name="Value" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeLibImportClassAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.LCIDConversionAttribute">
    <Properties>
      <Property Name="Value" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComRegisterFunctionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.ProgIdAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.IDispatchImplAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.IDispatchImplType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.IDispatchImplType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComSourceInterfacesAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComConversionLossAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeLibTypeAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.TypeLibTypeFlags" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.TypeLibTypeFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeLibFuncAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.TypeLibFuncFlags" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.TypeLibFuncFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeLibVarAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.TypeLibVarFlags" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.TypeLibVarFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.MarshalAsAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.UnmanagedType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.UnmanagedType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComImportAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.GuidAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.PreserveSigAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.InAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.OutAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.OptionalAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
    <Properties>
      <Property Name="Paths" Type="System.Runtime.InteropServices.DllImportSearchPath" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Paths" ReturnType="System.Runtime.InteropServices.DllImportSearchPath">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.DllImportAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.StructLayoutAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.LayoutKind" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Runtime.InteropServices.LayoutKind">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.FieldOffsetAttribute">
    <Properties>
      <Property Name="Value" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComAliasNameAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.AutomationProxyAttribute">
    <Properties>
      <Property Name="Value" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
    <Properties>
      <Property Name="MajorVersion" Type="System.Int32" />
      <Property Name="MinorVersion" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MajorVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.CoClassAttribute">
    <Properties>
      <Property Name="CoClass" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CoClass" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComEventInterfaceAttribute">
    <Properties>
      <Property Name="SourceInterface" Type="System.Type" />
      <Property Name="EventProvider" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SourceInterface" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_EventProvider" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeLibVersionAttribute">
    <Properties>
      <Property Name="MajorVersion" Type="System.Int32" />
      <Property Name="MinorVersion" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MajorVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComCompatibleVersionAttribute">
    <Properties>
      <Property Name="MajorVersion" Type="System.Int32" />
      <Property Name="MinorVersion" Type="System.Int32" />
      <Property Name="BuildNumber" Type="System.Int32" />
      <Property Name="RevisionNumber" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MajorVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BuildNumber" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_RevisionNumber" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.BestFitMappingAttribute">
    <Properties>
      <Property Name="BestFitMapping" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_BestFitMapping" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.DefaultCharSetAttribute">
    <Properties>
      <Property Name="CharSet" Type="System.Runtime.InteropServices.CharSet" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CharSet" ReturnType="System.Runtime.InteropServices.CharSet">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
    <Properties>
      <Property Name="ClassType" Type="System.Type" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ClassType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_MethodName" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.COMException">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.CriticalHandle">
    <Properties>
      <Property Name="IsClosed" Type="System.Boolean" />
      <Property Name="IsInvalid" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsClosed" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetHandleAsInvalid" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ExternalException">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ErrorCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.InvalidOleVariantTypeException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.Marshal">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.MarshalDirectiveException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.RuntimeEnvironment">
    <Properties>
      <Property Name="SystemConfigurationFile" Type="System.String" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.SEHException">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CanResume" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.SafeBuffer">
    <Properties>
      <Property Name="ByteLength" Type="System.UInt64" />
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AcquirePointer" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="pointer" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="numBytes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="numElements" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="sizeOfEachElement" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Initialize" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="numElements" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReleasePointer" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Read" ReturnType="T">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ReadArray" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Write" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="WriteArray" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="array" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ByteLength" ReturnType="System.UInt64">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.SafeHandle">
    <Properties>
      <Property Name="IsClosed" Type="System.Boolean" />
      <Property Name="IsInvalid" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="DangerousGetHandle" ReturnType="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_IsClosed" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInvalid" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Close" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetHandleAsInvalid" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="DangerousAddRef" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="success" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="DangerousRelease" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.BStrWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.CurrencyWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" ReturnType="System.Decimal">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.DispatchWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ErrorWrapper">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ErrorCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.UnknownWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.VariantWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" ReturnType="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ExtensibleClassFactory">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.InvalidComObjectException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.ObjectCreationDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" ReturnType="System.IntPtr">
        <Parameters>
          <Parameter Name="aggregator" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" ReturnType="System.IAsyncResult">
        <Parameters>
          <Parameter Name="aggregator" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="callback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="object" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" ReturnType="System.IntPtr">
        <Parameters>
          <Parameter Name="result" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.RegistrationServices">
    <Properties />
    <Methods>
      <Method Name="RegisterAssembly" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UnregisterAssembly" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRegistrableTypesInAssembly" ReturnType="System.Type[]">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetProgIdForType" ReturnType="System.String">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterTypeForComClients" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="g" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetManagedCategoryGuid" ReturnType="System.Guid">
        <Parameters />
      </Method>
      <Method Name="TypeRequiresRegistration" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="TypeRepresentsComType" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterTypeForComClients" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="classContext" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="UnregisterTypeForComClients" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="cookie" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.SafeArrayRankMismatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.SafeArrayTypeMismatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.TypeLibConverter">
    <Properties />
    <Methods>
      <Method Name="ConvertTypeLibToAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="typeLib" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="asmFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="notifySink" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="publicKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keyPair" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="unsafeInterfaces" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertTypeLibToAssembly" ReturnType="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="typeLib" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="asmFileName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="notifySink" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="publicKey" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="keyPair" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="asmNamespace" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="asmVersion" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertAssemblyToTypeLib" ReturnType="System.Object">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="strTypeLibName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flags" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="notifySink" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPrimaryInteropAssembly" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="g" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="major" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="minor" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="lcid" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="asmName" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="asmCodeBase" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.ComEventsHelper">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute">
    <Properties>
      <Property Name="DefaultInterface" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultInterface" ReturnType="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute">
    <Properties>
      <Property Name="InterfaceType" Type="System.Type" />
      <Property Name="MajorVersion" Type="System.Byte" />
      <Property Name="MinorVersion" Type="System.Byte" />
      <Property Name="BuildVersion" Type="System.Byte" />
      <Property Name="RevisionVersion" Type="System.Byte" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_InterfaceType" ReturnType="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_MajorVersion" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_BuildVersion" ReturnType="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_RevisionVersion" ReturnType="System.Byte">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
    <Properties>
      <Property Name="InvocationList" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_InvocationList" ReturnType="T">
        <Parameters />
      </Method>
      <Method Name="set_InvocationList" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AddEventHandler" ReturnType="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken">
        <Parameters>
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="token" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="handler" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata">
    <Properties />
    <Methods />
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs">
    <Properties>
      <Property Name="NamespaceName" Type="System.String" />
      <Property Name="RequestingAssembly" Type="System.Reflection.Assembly" />
      <Property Name="ResolvedAssemblies" Type="System.Collections.ObjectModel.Collection`1[System.Reflection.Assembly]" />
    </Properties>
    <Methods>
      <Method Name="get_NamespaceName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RequestingAssembly" ReturnType="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_ResolvedAssemblies" ReturnType="System.Collections.ObjectModel.Collection`1[System.Reflection.Assembly]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs">
    <Properties>
      <Property Name="NamespaceName" Type="System.String" />
      <Property Name="ResolvedAssemblyFiles" Type="System.Collections.ObjectModel.Collection`1[System.String]" />
    </Properties>
    <Methods>
      <Method Name="get_NamespaceName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ResolvedAssemblyFiles" ReturnType="System.Collections.ObjectModel.Collection`1[System.String]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Hosting.ApplicationActivator">
    <Properties />
    <Methods>
      <Method Name="CreateInstance" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="activationContext" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" ReturnType="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="activationContext" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="activationCustomData" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Runtime.Hosting.ActivationArguments">
    <Properties>
      <Property Name="ApplicationIdentity" Type="System.ApplicationIdentity" />
      <Property Name="ActivationContext" Type="System.ActivationContext" />
      <Property Name="ActivationData" Type="System.String[]" />
    </Properties>
    <Methods>
      <Method Name="get_ApplicationIdentity" ReturnType="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="get_ActivationContext" ReturnType="System.ActivationContext">
        <Parameters />
      </Method>
      <Method Name="get_ActivationData" ReturnType="System.String[]">
        <Parameters />
      </Method>
      <Method Name="Clone" ReturnType="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.StringBuilder">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="MaxCapacity" Type="System.Int32" />
      <Property Name="Length" Type="System.Int32" />
      <Property Name="Chars" Type="System.Char" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_MaxCapacity" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="EnsureCapacity" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="capacity" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clear" ReturnType="System.Text.StringBuilder">
        <Parameters />
      </Method>
      <Method Name="get_Length" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Length" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Chars" ReturnType="System.Char">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="set_Chars" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="repeatCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendLine" ReturnType="System.Text.StringBuilder">
        <Parameters />
      </Method>
      <Method Name="AppendLine" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="sourceIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destination" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="destinationIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Remove" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="length" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Insert" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg0" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg1" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="arg2" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="format" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="args" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newValue" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="sb" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newValue" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldChar" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newChar" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Replace" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldChar" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="newChar" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="startIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Append" ReturnType="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="valueCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.ASCIIEncoding">
    <Properties>
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsSingleByte" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetDecoder" ReturnType="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" ReturnType="System.Text.Encoder">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.Decoder">
    <Properties>
      <Property Name="Fallback" Type="System.Text.DecoderFallback" />
      <Property Name="FallbackBuffer" Type="System.Text.DecoderFallbackBuffer" />
    </Properties>
    <Methods>
      <Method Name="get_Fallback" ReturnType="System.Text.DecoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_Fallback" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FallbackBuffer" ReturnType="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Convert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytesUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charsUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="completed" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Convert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytesUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charsUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="completed" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderExceptionFallback">
    <Properties>
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFallbackBuffer" ReturnType="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderExceptionFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="bytesUnknown" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderFallbackException">
    <Properties>
      <Property Name="BytesUnknown" Type="System.Byte[]" />
      <Property Name="Index" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_BytesUnknown" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_Index" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderFallback">
    <Properties>
      <Property Name="ReplacementFallback" Type="System.Text.DecoderFallback" />
      <Property Name="ExceptionFallback" Type="System.Text.DecoderFallback" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFallbackBuffer" ReturnType="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="bytesUnknown" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderReplacementFallback">
    <Properties>
      <Property Name="DefaultString" Type="System.String" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateFallbackBuffer" ReturnType="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.DecoderReplacementFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="bytesUnknown" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.Encoder">
    <Properties>
      <Property Name="Fallback" Type="System.Text.EncoderFallback" />
      <Property Name="FallbackBuffer" Type="System.Text.EncoderFallbackBuffer" />
    </Properties>
    <Methods>
      <Method Name="get_Fallback" ReturnType="System.Text.EncoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_Fallback" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FallbackBuffer" ReturnType="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Convert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charsUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytesUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="completed" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Convert" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="flush" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charsUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytesUsed" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="completed" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderExceptionFallback">
    <Properties>
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFallbackBuffer" ReturnType="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderExceptionFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknown" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknownHigh" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charUnknownLow" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderFallbackException">
    <Properties>
      <Property Name="CharUnknown" Type="System.Char" />
      <Property Name="CharUnknownHigh" Type="System.Char" />
      <Property Name="CharUnknownLow" Type="System.Char" />
      <Property Name="Index" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CharUnknown" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="get_CharUnknownHigh" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="get_CharUnknownLow" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="get_Index" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsUnknownSurrogate" ReturnType="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderFallback">
    <Properties>
      <Property Name="ReplacementFallback" Type="System.Text.EncoderFallback" />
      <Property Name="ExceptionFallback" Type="System.Text.EncoderFallback" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFallbackBuffer" ReturnType="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknown" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknownHigh" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charUnknownLow" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderReplacementFallback">
    <Properties>
      <Property Name="DefaultString" Type="System.String" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultString" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateFallbackBuffer" ReturnType="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncoderReplacementFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknown" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Fallback" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknownHigh" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charUnknownLow" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" ReturnType="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" ReturnType="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="ASCII" Type="System.Text.Encoding" />
      <Property Name="CodePage" Type="System.Int32" />
      <Property Name="Default" Type="System.Text.Encoding" />
      <Property Name="Unicode" Type="System.Text.Encoding" />
      <Property Name="BigEndianUnicode" Type="System.Text.Encoding" />
      <Property Name="UTF7" Type="System.Text.Encoding" />
      <Property Name="UTF8" Type="System.Text.Encoding" />
      <Property Name="UTF32" Type="System.Text.Encoding" />
    </Properties>
    <Methods>
      <Method Name="GetPreamble" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_BodyName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EncodingName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_HeaderName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_WebName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_WindowsCodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsBrowserDisplay" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsBrowserSave" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMailNewsDisplay" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMailNewsSave" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSingleByte" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_EncoderFallback" ReturnType="System.Text.EncoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_EncoderFallback" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DecoderFallback" ReturnType="System.Text.DecoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_DecoderFallback" ReturnType="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Clone" ReturnType="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Byte[]">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Char[]">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Char[]">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsAlwaysNormalized" ReturnType="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsAlwaysNormalized" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="form" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" ReturnType="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" ReturnType="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncodingInfo">
    <Properties>
      <Property Name="CodePage" Type="System.Int32" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_CodePage" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Name" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" ReturnType="System.String">
        <Parameters />
      </Method>
      <Method Name="GetEncoding" ReturnType="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.EncodingProvider">
    <Properties />
    <Methods>
      <Method Name="GetEncoding" ReturnType="System.Text.Encoding">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" ReturnType="System.Text.Encoding">
        <Parameters>
          <Parameter Name="codepage" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" ReturnType="System.Text.Encoding">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="encoderFallback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="decoderFallback" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" ReturnType="System.Text.Encoding">
        <Parameters>
          <Parameter Name="codepage" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="encoderFallback" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="decoderFallback" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.UnicodeEncoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetEncoder" ReturnType="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetDecoder" ReturnType="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetPreamble" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.UTF7Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" ReturnType="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" ReturnType="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.UTF8Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" ReturnType="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" ReturnType="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPreamble" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type FullName="System.Text.UTF32Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteIndex" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charIndex" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetChars" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="chars" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetString" ReturnType="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="index" Type="System.Reflection.RuntimeParameterInfo" />
          <Parameter Name="count" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" ReturnType="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" ReturnType="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" ReturnType="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetPreamble" ReturnType="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Equals" ReturnType="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.RuntimeParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" ReturnType="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
</XmlMscorlib>